openapi: 3.1.0
info:
  description: |-
    ## Introduction
    This document provides a brief overview of some of the available endpoints and their parameters. The API is a REST API, accepting JSON as request body. You can use the try-it tool to play around with it, or use software like Postman.

    ## Authentication
    Most endpoints require authentication, using a JWT token. This token should be placed in the `x-authorization` field in the HTTP header. There are two types of tokens.
    - Bearer token. Uses the `Bearer <token_value>` format. This is used when logging in to VRM, for example. Can be retrieved from [/auth/login](/operations/auth/login) or [/auth/loginAsDemo](/operations/auth/loginAsDemo).
    - Access token. Uses the `Token <token_value>` format. This is commonly used for third party applications using the VRM API. Can be created using [/users/{idUser}/accesstokens/create](/operations/users/idUser/accesstokens/create).

    ## Rate limiting
    Most endpoints are by default rate limited with a rolling window of max 200 requests, where every 0.33 seconds a request gets removed from the rolling window. (so on average maximum of 3 requests per second won't get rate limited). There are different types of ratelimiting in VRM. If you receive a 429 with a JSON response, you can check the Retry-After response header to check the amount of seconds you have to wait until retrying.

    ## WARNING & DISCLAIMER
    Whilst publicly available, Victron Energy does not offer support to professional customers or end-users that implement features using the here documented functionality, except in really specific situations (i.e such as a special arrangement with a large OEM customer).

    The recommended method for support on the VRM API is to use the Modifications section on Victron Community. This space is frequently visited by many people using the API, and other methods of integrating with Victron products.
    Direct company support is only offered on a limited basis via your Victron representative.
  title: VRM API
  version: "2"
servers:
- url: https://vrmapi.victronenergy.com/v2
paths:
  /auth/login:
    post:
      description: Used to authenticate as a user to access authenticated routes.
        2FA token must be included if 2FA is enabled on the account. Returns a bearer
        token (JWT).
      operationId: auth/login
      requestBody:
        content:
          application/json:
            examples:
              normal_user:
                summary: A regular user without 2FA.
                value:
                  username: john@example.com
                  password: somepassword
              two_factor_user:
                summary: "A user using 2FA, also requesting a token with a longer\
                  \ expiration time."
                value:
                  username: john_2fa@example.com
                  password: somepassword
                  sms_token: 123456
                  remember_me: true
            schema:
              $ref: '#/components/schemas/auth_login_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_200_response'
          description: "Login successful, returns bearer token (JWT)"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: "Login unsuccessful, returns details about the error(s)"
      summary: Log in using an e-mail and password
  /auth/loginAsDemo:
    get:
      description: "Used to authenticate as the demo account. The demo user has limited\
        \ access to a few demo installations and endpoints, intended for demonstration\
        \ usage. Returns a bearer token (JWT)."
      operationId: auth/loginAsDemo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_loginAsDemo_200_response'
          description: "Login successful, returns bearer token (JWT)."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: "Login unsuccessful, returns details about the error(s)."
      summary: Log in as the demo account
  /auth/logout:
    get:
      description: Used to log out a user. The token provided in the authorization
        header will be blacklisted from the server and can no longer be used for authentication
        purposes.
      operationId: auth/logout
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_logout_200_response'
          description: Logout successful.
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Something went wrong.
      summary: Log out using a token
  /users/{idUser}/addsite:
    post:
      description: Adds a new site to the user. An email will be sent when the procedure
        is done.
      operationId: users/idUser/addsite
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_idUser_addsite_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_idUser_addsite_200_response'
          description: Site added successfully.
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: The site desired could not be added.
      summary: Adds a new site
      tags:
      - Users
  /users/{idUser}/installations:
    get:
      description: "Retrieves a list of installations to which the user is connected.\
        \ Normal users can only retrieve their own installations, dealers only those\
        \ of their linked customers and admins those of all users."
      operationId: users/idUser/installations
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: User id.
        explode: false
        in: path
        name: idUser
        required: true
        schema:
          type: string
        style: simple
      - description: "If 1, include all optional response values."
        explode: true
        in: query
        name: extended
        required: false
        schema:
          type: integer
        style: form
      - description: Id of the site we want to retrieve.
        explode: true
        in: query
        name: idSite
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_idUser_installations_200_response'
          description: Successfully retrieved installations.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_idUser_installations_403_response'
          description: Not authorized to view installations for this user.
      summary: All installations/sites for a given user
      tags:
      - Users
  /users/{idUser}/accesstokens/create:
    post:
      description: "Users can create personal access tokens for usage with external\
        \ services. These tokens can be used as an alternative way of authentication\
        \ against the VRM API. The token is returned, after which it is not possible\
        \ to ever retrieve it again."
      operationId: users/idUser/accesstokens/create
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: User id.
        explode: false
        in: path
        name: idUser
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              createToken:
                summary: Creating a new token.
                value:
                  name: MyNewToken
              createExpiringToken:
                summary: Creating a new token.
                value:
                  name: MyNewToken
                  expiry: 1685992714
            schema:
              $ref: '#/components/schemas/users_idUser_accesstokens_create_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_idUser_accesstokens_create_200_response'
          description: Token created successfully
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: "Token creation failed, returns details about the error(s)"
      summary: Create an access token for a user.
      tags:
      - Users
  /users/{idUser}/accesstokens/list:
    get:
      description: "Retrieves a list of all access token details for this user, excluding\
        \ the actual token itself. Always returns tokens for the requesting user,\
        \ never for another, regardless of account type."
      operationId: users/idUser/accesstokens/list
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: User id.
        explode: false
        in: path
        name: idUser
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_idUser_accesstokens_list_200_response'
          description: Tokens retrieved successfully.
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: "Token retrieval failed, returns details about the error(s)"
      summary: List all access tokens for a user.
      tags:
      - Users
  /users/{idUser}/accesstokens/{idAccessToken}/revoke:
    get:
      description: Revokes one or more personal access token for a user.
      operationId: users/idUser/accesstokens/revoke
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: User id.
        explode: false
        in: path
        name: idUser
        required: true
        schema:
          type: string
        style: simple
      - description: "Access token to revoke, or wildcard '*' to revoke all."
        explode: false
        in: path
        name: idAccessToken
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_idUser_accesstokens_revoke_200_response'
          description: Token(s) revoked successfully
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: "Token creation failed, returns details about the error(s)"
      summary: Revoke an access token for a user.
      tags:
      - Users
  /users/{idUser}/get-site-id:
    post:
      description: Retrieves the site id from user's installations given site identifier.
        Admins can retrieve any installation.
      operationId: users/idUser/get-site-id
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_idUser_addsite_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_idUser_get_site_id_200_response'
          description: Successfully retrieved installation.
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: "Token creation failed, returns details about the error(s)"
      summary: Returns site id given site identifier
      tags:
      - Users
  /users/me:
    get:
      description: "Retrieves id, name, email and country of the user that is currently\
        \ logged in"
      operationId: users/me
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_me_200_response'
          description: Succesfully retrieved information.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_idUser_installations_403_response'
          description: User is not logged in (or no bearer token).
      summary: Basic information about logged in user
      tags:
      - Users
  /users/{idUser}/search:
    get:
      description: "Search for sites that you have access to based on ID of the site,\
        \ email of a user, name of a user, serial number of a device attached to a\
        \ site, site identifier or email domain"
      operationId: users/idUser/search
      parameters:
      - description: Search term to filter results.
        example: foo
        explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_idUser_search_200_response'
          description: Query was successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_idUser_search_400_response'
          description: Invalid query or missing
      summary: Search
      tags:
      - Users
  /installations/{idSite}/alarms:
    delete:
      description: Deletes an alarm already linked to an installation.
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation ID
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_installations__idSite__alarms_delete_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__alarms_delete_200_response'
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Could not delete alarm
      summary: Delete Alarm
      tags:
      - Installations
    get:
      description: "Gets all information about alarms for a specific installation.\
        \ Next to that, it also receives all data required to create new alarms"
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation ID
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__alarms_get_200_response'
          description: "Retrieves all alarms from an installation, eligible users\
            \ for those alarms and available data attributes."
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Alarms not available
      summary: Get Alarms
      tags:
      - Installations
    post:
      description: Adds an alarm to an installation. Note that there are two different
        types of alarms; alarms on enums and alarms on numbers (floats). Note that
        for floats the AlarmEnabled and NotifyAfterSeconds use PascalCase and for
        enums they use camelCase. You'll get a warning if the wrong case is used.
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation ID
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              float:
                summary: An alarm for numbers
                value:
                  AlarmEnabled: 1
                  NotifyAfterSeconds: 60
                  highAlarm: 2
                  highAlarmHysteresis: 2
                  idDataAttribute: 630
                  instance: 0
                  lowAlarm: 0
                  lowAlarmHysteresis: 0.2
              enum:
                summary: An alarm for numbers
                value:
                  instance: 0
                  idDataAttribute: 185
                  enumValues:
                  - 0
                  notifyAfterSeconds: 3600
                  alarmEnabled: 1
            schema:
              $ref: '#/components/schemas/_installations__idSite__alarms_put_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__alarms_post_200_response'
          description: Successfully added an alarm.
      summary: Add Alarm
      tags:
      - Installations
    put:
      description: Edits an alarm already linked to an installation. Note that there
        are two different types of alarms; alarms on enums and alarms on numbers (floats).
        Note that for floats the AlarmEnabled and NotifyAfterSeconds use PascalCase
        and for enums they use camelCase. You'll get a warning if the wrong case is
        used.
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation ID
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              float:
                summary: An alarm for numbers
                value:
                  AlarmEnabled: 1
                  NotifyAfterSeconds: 60
                  highAlarm: 2
                  highAlarmHysteresis: 2
                  idDataAttribute: 630
                  instance: 0
                  lowAlarm: 0
                  lowAlarmHysteresis: 0.2
              enum:
                summary: An alarm for numbers
                value:
                  instance: 0
                  idDataAttribute: 185
                  enumValues:
                  - 0
                  notifyAfterSeconds: 3600
                  alarmEnabled: 1
            schema:
              $ref: '#/components/schemas/_installations__idSite__alarms_put_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__alarms_put_200_response'
          description: Successfully added an alarm.
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Alarm not added
      summary: Edit Alarm
      tags:
      - Installations
  /installations/{idSite}/clear-alarm:
    post:
      description: Clears alarms and marks them as cleared by the user in Event Logs.
      operationId: installations/idSite/clear-alarm
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the installation.
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/installations_idSite_clear_alarm_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_clear_alarm_200_response'
          description: Alarm cleared successfully.
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Clear alarm
      tags:
      - Installations
  /installations/{idSite}/system-overview:
    get:
      description: Retrieves a list of devices to which are connected to this installation.
        This endpoint is only accessible to users with access to the installation.
      operationId: installations/idSite/system-overview
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_system_overview_200_response'
          description: Successfully retrieved devices
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Not authorized to view devices for this installation.
      summary: Connected devices for a given installation
      tags:
      - Installations
  /installations/{idSite}/diagnostics:
    get:
      description: Retrieves log data for an installation. This endpoint is only accessible
        to users with access to the installation.
      operationId: installations/idSite/diagnostics
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "How many records to fetch, 100 if not specified."
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: integer
        style: form
      - description: "Which page to fetch, 1 if not specified."
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_diagnostics_200_response'
          description: Successfully retrieved logging data.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Not authorized to get log data for this installation.
      summary: Diagnostic data for an installation
      tags:
      - Installations
  /installations/{idSite}/dynamic-ess-settings:
    get:
      parameters:
      - description: The ID of the installation
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__dynamic_ess_settings_get_200_response'
          description: Successfully updated the Dynamic ESS configuration for this
            installation.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__dynamic_ess_settings_get_403_response'
          description: User is not authorized to access or modify this installation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__dynamic_ess_settings_get_404_response'
          description: Installation not found.
      summary: Dynamic ESS configuration
      tags:
      - Installations
    post:
      parameters:
      - description: The ID of the installation
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_installations__idSite__dynamic_ess_settings_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__dynamic_ess_settings_get_200_response'
          description: Successfully updated the Dynamic ESS configuration for this
            installation.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__dynamic_ess_settings_get_403_response'
          description: User is not authorized to access or modify this installation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__dynamic_ess_settings_get_404_response'
          description: Installation not found.
      summary: Dynamic ESS configuration
      tags:
      - Installations
  /installations/{idSite}/gps-download:
    get:
      description: Retrieves GPS tracks for an installation as a KML file.
      operationId: installations/idSite/gps-download
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: Timestamp from which to fetch data.
        explode: true
        in: query
        name: start
        required: true
        schema:
          type: integer
        style: form
      - description: Timestamp to which to fetch data.
        explode: true
        in: query
        name: end
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/vnd.google-earth.kml+xml: {}
          description: Successfully created KML file containing tracks.
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: GPS tracks for an installation
      tags:
      - Installations
  /installations/{idSite}/tags:
    delete:
      description: Remove tag for an installation.
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_installations__idSite__tags_put_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__tags_delete_200_response'
          description: Tag removed successfully
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Remove installation tag
      tags:
      - Installations
    get:
      description: Tags for an installation.
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__tags_get_200_response'
          description: Successfully retrieved tags.
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Get installation tags
      tags:
      - Installations
    put:
      description: Add tag for an installation.
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_installations__idSite__tags_put_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__tags_put_200_response'
          description: Tag added successfully
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Add installation tag
      tags:
      - Installations
  /installations/{idSite}/data-download:
    get:
      description: "Retrieves a base64 encoded string containing the specified installation\
        \ data, in the specified format."
      operationId: installations/idSite/data-download
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      - description: "Type of data to export, defaults to log."
        explode: true
        in: query
        name: datatype
        required: false
        schema:
          enum:
          - log
          - benchmark
          - kwh
          type: string
        style: form
      - description: "Export data file format, defaults to csv."
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - excelxml
          - xls
          - xlsx
          - html
          type: string
        style: form
      - description: "Include debug attributes, only for admins and restricted admins,\
          \ defaults to false."
        explode: true
        in: query
        name: debug
        required: false
        schema:
          type: boolean
        style: form
      - description: "If true, the request is executed asynchronously and the result\
          \ is not included in the response but sent to the email address of the requesting\
          \ account."
        explode: true
        in: query
        name: async
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_data_download_200_response'
            text/html: {}
            text/csv: {}
            application/vnd.ms-excel: {}
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: {}
          description: Successfully exported / started exporting data.
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Download installation data
      tags:
      - Installations
  /installations/{idSite}/stats:
    get:
      description: |
        Retrieves installation stats for the specified period, or one day if none specified. If the datatype is set to custom, one or more attributes can be provided using the attributeCodes[] parameter.

        There is a maximum allowed time period for each interval, which is:
        * 31 days for 15 minutes
        * 31 days for hours
        * 180 days for days
        * 140 days for weeks
        * 24 months for months
        * 5 years for years
      operationId: installations/idSite/stats
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      - description: "Type of data to fetch, defaults to live_feed. If set to custom,\
          \ the attributeCodes[] parameter must be provided."
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - venus
          - live_feed
          - consumption
          - solar_yield
          - kwh
          - generator
          - generator-runtime
          - custom
          - forecast
          type: string
        style: form
      - description: "Time between retrieved data points, defaults to hours."
        explode: true
        in: query
        name: interval
        required: false
        schema:
          enum:
          - 15mins
          - hours
          - 2hours
          - days
          - weeks
          - months
          - years
          type: string
        style: form
      - description: "Attribute codes for which to retrieve series, repeated for each\
          \ attribute. Required at least once if datatype is set to custom."
        explode: true
        in: query
        name: "attributeCodes[]"
        required: false
        schema:
          type: string
        style: form
      - description: "If included, attributes will be grouped by instance."
        explode: true
        in: query
        name: show_instance
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_stats_200_response'
          description: Successfully retrieved statistics.
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Installation stats
      tags:
      - Installations
  /installations/{idSite}/overallstats:
    get:
      description: "Retrieves installation stats grouped by the last year, month,\
        \ week and day. If the datatype is set to custom, one or more attributes can\
        \ be provided using the attributeCodes[] parameter."
      operationId: installations/idSite/overallstats
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Type of data to fetch, defaults to live_feed. If set to custom,\
          \ the attributeCodes[] parameter must be provided."
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - venus
          - live_feed
          - consumption
          - solar_yield
          - kwh
          - generator
          - generator-runtime
          - custom
          type: string
        style: form
      - description: "Attribute codes for which to retrieve series, repeated for each\
          \ attribute. Required at least once if datatype is set to custom."
        explode: true
        in: query
        name: "attributeCodes[]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_overallstats_200_response'
          description: Successfully retrieved overall statistics.
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Overall installation stats
      tags:
      - Installations
  /installations/{idSite}/settings:
    post:
      description: Allows the user to modify settings related to a specific installation
        identified by its ID. You can send one or more of the fields you want to update
        at once.
      operationId: installations/idSite/settings
      parameters:
      - description: The ID of the installation
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/installations_idSite_settings_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_settings_200_response'
          description: Successfully updated settings for the installation.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__dynamic_ess_settings_get_403_response'
          description: User is not authorized to access or modify this installation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__dynamic_ess_settings_get_404_response'
          description: Installation not found.
      summary: Update settings for a specific installation
      tags:
      - Installations
  /installations/{idSite}/invite:
    post:
      description: Sends an invitation to a user to gain access to a specific installation.
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation ID
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              string:
                summary: Inviting Andrew to access the installation.
                value:
                  name: Andrew
                  email: andrew@example.com
                  accessLevel: 1
            schema:
              $ref: '#/components/schemas/_installations__idSite__invite_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__invite_post_200_response'
          description: Invitation sent.
      summary: Invite user to installation
      tags:
      - Installations
  /installations/{idSite}/reset-forecasts:
    get:
      description: "Queries influx for the last time the forecasts for this installation\
        \ were reset. Returns either the timestamp, or 0 if the forecasts were never\
        \ reset."
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation ID
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__reset_forecasts_get_200_response'
          description: InfluxDB was queried successfully and the timestamp was returned
      summary: Retrieves the timestamp of the last forecasts reset
      tags:
      - Installations
    post:
      description: "Logs the current timestamp with the resetType in influx. The forecasting\
        \ model then ingores all data before this timestamp, effectively treating\
        \ the installation as if it's a new one"
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation ID
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_installations__idSite__reset_forecasts_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__reset_forecasts_post_200_response'
          description: Forecasts were successfully reset
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__reset_forecasts_post_400_response'
          description: Not enough information given in request. Either idSite or resetType
            is missing.
      summary: Reset installation forecasts
      tags:
      - Installations
  /installations/{idSite}/custom-widget:
    delete:
      description: Delete a custom widget
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the installation.
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_installations__idSite__custom_widget_delete_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__reset_forecasts_post_200_response'
          description: Custom widget deleted successfully.
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Delete Custom Widget
      tags:
      - Installations
    get:
      description: Get a custom widget
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the installation.
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: number
        style: simple
      - description: ID of the custom widget
        explode: false
        in: path
        name: idCustomWidget
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__custom_widget_get_200_response'
          description: Custom Widget data received successfully.
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Get Custom Widgets
      tags:
      - Installations
    patch:
      description: Update a custom widget
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the installation.
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_installations__idSite__custom_widget_patch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__reset_forecasts_post_200_response'
          description: Custom widget updated successfully.
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Update Custom Widget
      tags:
      - Installations
    post:
      description: Create a custom widget
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the installation.
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_installations__idSite__custom_widget_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_installations__idSite__custom_widget_post_200_response'
          description: Custom widget created successfully.
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Create Custom Widget
      tags:
      - Installations
  /installation-overview-download:
    post:
      description: "Fetches a customized overview of installations with specified\
        \ columns, site IDs, and settings. The response can be either JSON or an XLSX\
        \ file depending on the `jsonResponse` parameter."
      operationId: installationOverviewDownload
      parameters:
      - $ref: ../../../docs/components.yaml#/components/parameters/authorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/installationOverviewDownload_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installationOverviewDownload_200_response'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                description: XLSX file containing the installation overview.
                format: binary
                type: string
          description: Successfully retrieved the installation overview.
        "400":
          content:
            application/json:
              schema:
                $ref: ../../../docs/components.yaml#/components/schemas/generalError
          description: Invalid request format or missing parameters.
        "403":
          content:
            application/json:
              schema:
                $ref: ../../../docs/components.yaml#/components/schemas/generalError
          description: Not authorized to access installation overview data.
      summary: Download installation overview
      tags:
      - Installations
  /data-attributes:
    get:
      description: "Returns a JSON object of attributes with `idDataAttribute` as\
        \ string keys. Filters out `targetTable`, `idDeviceType`, and `idDataAttribute`\
        \ fields."
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/_data_attributes_get_200_response_value'
          description: Successful response
      summary: Retrieve filtered and sorted attributes
  /installations/{idSite}/widgets/Graph:
    get:
      description: "Retrieves data points for a graph for the given installation and\
        \ data attributes. Data attributes should be given as id's, codes or both.\
        \ If not given a timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/Graph
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Attribute codes for which to retrieve series, repeated for each\
          \ attribute."
        explode: true
        in: query
        name: "attributeCodes[]"
        required: false
        schema:
          type: string
        style: form
      - description: "Attribute id's for which to retrieve series, repeated for each\
          \ attribute."
        explode: true
        in: query
        name: "attributeIds[]"
        required: false
        schema:
          type: integer
        style: form
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      - description: "Width of the graph in pixels, defaults to 768."
        explode: true
        in: query
        name: width
        required: false
        schema:
          type: integer
        style: form
      - description: "The amount of datapoints per pixel of the width of the graph,\
          \ defaults to two."
        explode: true
        in: query
        name: pointsPerPixel
        required: false
        schema:
          type: number
        style: form
      - description: "If 1, include the mean, min and max for each datapoint. Else,\
          \ include only one value per datapoint."
        explode: true
        in: query
        name: useMinMax
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_Graph_200_response'
          description: Successfully retrieved graph data points.
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Graph series for a given installation and set of attributes
      tags:
      - General Widgets
  /installations/{idSite}/widgets/GPS:
    get:
      description: "Retrieves GPS data for the specified installation, used in the\
        \ GPS widget."
      operationId: installations/idSite/widgets/GPS
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GPS_200_response'
          description: Successfully retrieved GPS data.
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: GPS data for an installation
      tags:
      - General Widgets
  /installations/{idSite}/widgets/HoursOfAc:
    get:
      description: "Retrieves hours of AC for an installation. If no timeframe is\
        \ specified, data from the last day will be used."
      operationId: installations/idSite/widgets/HoursOfAc
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_HoursOfAc_200_response'
          description: Successfully calculated and retrieved hours of AC.
        "4xx":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Hours of AC for an installation
      tags:
      - General Widgets
  /installations/{idSite}/widgets/GeneratorState:
    get:
      description: "Retrieves generator state changes for a state graph. If not given\
        \ a timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/GeneratorState
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response'
          description: Successfully retrieved state changes.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Generator state graph data
      tags:
      - State Widgets
  /installations/{idSite}/widgets/InputState:
    get:
      description: "Retrieves input state changes for a state graph. If not given\
        \ a timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/InputState
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response'
          description: Successfully retrieved state changes.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Input state graph data
      tags:
      - State Widgets
  /installations/{idSite}/widgets/InverterState:
    get:
      description: "Retrieves inverter state changes for a state graph. If not given\
        \ a timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/InverterState
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response'
          description: Successfully retrieved state changes.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Inverter state graph data
      tags:
      - State Widgets
  /installations/{idSite}/widgets/MPPTState:
    get:
      description: "Retrieves MPPT state changes for a state graph. If not given a\
        \ timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/MPPTState
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response'
          description: Successfully retrieved state changes.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: MPPT state graph data
      tags:
      - State Widgets
  /installations/{idSite}/widgets/ChargerState:
    get:
      description: "Retrieves charger state changes for a state graph. If not given\
        \ a timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/ChargerState
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response'
          description: Successfully retrieved state changes.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Charger state graph data
      tags:
      - State Widgets
  /installations/{idSite}/widgets/EssBatteryLifeState:
    get:
      description: "Retrieves ESS battery life state changes for a state graph. If\
        \ not given a timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/EssBatteryLifeState
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response'
          description: Successfully retrieved state changes.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: ESS battery life state graph data
      tags:
      - State Widgets
  /installations/{idSite}/widgets/FuelCellState:
    get:
      description: "Retrieves fuel cell state changes for a state graph. If not given\
        \ a timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/FuelCellState
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response'
          description: Successfully retrieved state changes.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Fuel cell state graph data
      tags:
      - State Widgets
  /installations/{idSite}/widgets/BatteryExternalRelayState:
    get:
      description: "Retrieves battery external relay state changes for a state graph.\
        \ If not given a timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/BatteryExternalRelayStateCommand
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response'
          description: Successfully retrieved state changes.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Battery external relay state graph data
      tags:
      - State Widgets
  /installations/{idSite}/widgets/BatteryRelayState:
    get:
      description: "Retrieves battery relay state changes for a state graph. If not\
        \ given a timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/BatteryRelayState
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response'
          description: Successfully retrieved state changes.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Battery relay state graph data
      tags:
      - State Widgets
  /installations/{idSite}/widgets/BatteryMonitorWarningsAndAlarms:
    get:
      description: "Retrieves battery monitor warnings and alarms data for a state\
        \ graph. If not given a timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/BatteryMonitorWarningsAndAlarms
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response'
          description: Successfully retrieved state changes.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Battery monitor warnings and alarms graph data
      tags:
      - State Widgets
  /installations/{idSite}/widgets/GatewayRelayState:
    get:
      description: "Retrieves gateway relay state changes for a state graph. If not\
        \ given a timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/GatewayRelayState
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response'
          description: Successfully retrieved state changes.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Gateway relay state graph data
      tags:
      - State Widgets
  /installations/{idSite}/widgets/GatewayRelayTwoState:
    get:
      description: "Retrieves gateway relay two state changes for a state graph. If\
        \ not given a timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/GatewayRelayTwoState
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response'
          description: Successfully retrieved state changes.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Gateway relay two state graph data
      tags:
      - State Widgets
  /installations/{idSite}/widgets/ChargerRelayState:
    get:
      description: "Retrieves charger relay state changes for a state graph. If not\
        \ given a timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/ChargerRelayState
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response'
          description: Successfully retrieved state changes.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Charger relay state graph data
      tags:
      - State Widgets
  /installations/{idSite}/widgets/SolarChargerRelayState:
    get:
      description: "Retrieves solar charger relay state changes for a state graph.\
        \ If not given a timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/SolarChargerRelayState
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response'
          description: Successfully retrieved state changes.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Solar charger relay state graph data
      tags:
      - State Widgets
  /installations/{idSite}/widgets/VeBusState:
    get:
      description: "Retrieves VE Bus state changes for a state graph. If not given\
        \ a timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/VeBusState
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response'
          description: Successfully retrieved state changes.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: VE Bus state graph data
      tags:
      - State Widgets
  /installations/{idSite}/widgets/VeBusWarningsAndAlarms:
    get:
      description: "Retrieves VE Bus warnings and alarms data for a state graph. If\
        \ not given a timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/VeBusWarningsAndAlarms
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response'
          description: Successfully retrieved state changes.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: VE Bus warnings and alarms graph data
      tags:
      - State Widgets
  /installations/{idSite}/widgets/InverterChargerState:
    get:
      description: "Retrieves inverter charger state changes for a state graph. If\
        \ not given a timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/InverterChargerState
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response'
          description: Successfully retrieved state changes.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Inverter charger state graph data
      tags:
      - State Widgets
  /installations/{idSite}/widgets/InverterChargerWarningsAndAlarms:
    get:
      description: "Retrieves inverter warning and alarm state changes for a state\
        \ graph. If not given a timeframe, data for the last day will be retrieved."
      operationId: installations/idSite/widgets/InverterChargerWarningsAndAlarms
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp from which to fetch data, defaults to one day ago."
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: "Timestamp to which to fetch data, defaults to now."
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response'
          description: Successfully retrieved state changes.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Inverter charger warnings and alarms graph data
      tags:
      - State Widgets
  /installations/{idSite}/widgets/BatterySummary:
    get:
      description: "Retrieves battery summary data for an overview, grouped by data\
        \ attribute."
      operationId: installations/idSite/widgets/BatterySummary
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response'
          description: Successfully retrieved summary.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Battery summary data
      tags:
      - Summary Widgets
  /installations/{idSite}/widgets/BMSDiagnostics:
    get:
      description: "Retrieves BMS diagnostics summary data for an overview, grouped\
        \ by data attribute."
      operationId: installations/idSite/widgets/BMSDiagnostics
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response'
          description: Successfully retrieved summary.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: BMS diagnostics summary data
      tags:
      - Summary Widgets
  /installations/{idSite}/widgets/HistoricData:
    get:
      description: "Retrieves historic summary data for an overview, grouped by data\
        \ attribute."
      operationId: installations/idSite/widgets/HistoricData
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response'
          description: Successfully retrieved summary.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Historic summary data
      tags:
      - Summary Widgets
  /installations/{idSite}/widgets/IOExtenderInOut:
    get:
      description: "Retrieves IO extender input and output summary data for an overview,\
        \ grouped by data attribute."
      operationId: installations/idSite/widgets/IOExtenderInOut
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response'
          description: Successfully retrieved summary.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: IO extender input and output summary data
      tags:
      - Summary Widgets
  /installations/{idSite}/widgets/LithiumBMS:
    get:
      description: "Retrieves lithium BMS summary data for an overview, grouped by\
        \ data attribute."
      operationId: installations/idSite/widgets/LithiumBMS
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response'
          description: Successfully retrieved summary.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Lithium BMS summary data
      tags:
      - Summary Widgets
  /installations/{idSite}/widgets/DCMeter:
    get:
      description: "Retrieves DC meter summary data for an overview, grouped by data\
        \ attribute."
      operationId: installations/idSite/widgets/DCMeter
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response'
          description: Successfully retrieved summary.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: DC meter summary data
      tags:
      - Summary Widgets
  /installations/{idSite}/widgets/EvChargerSummary:
    get:
      description: "Retrieves EV charger summary data for an overview, grouped by\
        \ data attribute."
      operationId: installations/idSite/widgets/EvChargerSummary
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response'
          description: Successfully retrieved summary.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: EV charger summary data
      tags:
      - Summary Widgets
  /installations/{idSite}/widgets/MeteorologicalSensor:
    get:
      description: "Retrieves meteorological summary data for an overview, grouped\
        \ by data attribute."
      operationId: installations/idSite/widgets/MeteorologicalSensor
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response'
          description: Successfully retrieved summary.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Meteorological summary data
      tags:
      - Summary Widgets
  /installations/{idSite}/widgets/GlobalLinkSummary:
    get:
      description: "Retrieves GlobalLink summary data for an overview, grouped by\
        \ data attribute."
      operationId: installations/idSite/widgets/GlobalLinkSummary
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response'
          description: Successfully retrieved summary.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: GlobalLink summary data
      tags:
      - Summary Widgets
  /installations/{idSite}/widgets/MotorSummary:
    get:
      description: "Retrieves motor summary data for an overview, grouped by data\
        \ attribute."
      operationId: installations/idSite/widgets/MotorSummary
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response'
          description: Successfully retrieved summary.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Motor summary data
      tags:
      - Summary Widgets
  /installations/{idSite}/widgets/PVInverterStatus:
    get:
      description: "Retrieves PV inverter summary data for an overview, grouped by\
        \ data attribute."
      operationId: installations/idSite/widgets/PVInverterStatus
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response'
          description: Successfully retrieved summary.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: PV inverter summary data
      tags:
      - Summary Widgets
  /installations/{idSite}/widgets/SolarChargerSummary:
    get:
      description: "Retrieves solar charger summary data for an overview, grouped\
        \ by data attribute."
      operationId: installations/idSite/widgets/SolarChargerSummary
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response'
          description: Successfully retrieved summary.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Solar charger summary data
      tags:
      - Summary Widgets
  /installations/{idSite}/widgets/Status:
    get:
      description: "Retrieves system overview summary data for an overview, grouped\
        \ by data attribute."
      operationId: installations/idSite/widgets/Status
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response'
          description: Successfully retrieved summary.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: System overview summary data
      tags:
      - Summary Widgets
  /installations/{idSite}/widgets/TankSummary:
    get:
      description: "Retrieves tank summary data for an overview, grouped by data attribute."
      operationId: installations/idSite/widgets/TankSummary
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response'
          description: Successfully retrieved summary.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Tank summary data
      tags:
      - Summary Widgets
  /installations/{idSite}/widgets/TempSummaryAndGraph:
    get:
      description: "Retrieves temperature summary data for an overview, grouped by\
        \ data attribute."
      operationId: installations/idSite/widgets/TempSummaryAndGraph
      parameters:
      - description: The bearer token to use.
        examples:
          bearer:
            summary: Authenticate with a bearer token.
            value: Bearer <bearer_token_value>
          token:
            summary: Authenticate with a access token.
            value: Token <token_value>
        explode: false
        in: header
        name: x-authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Installation id
        explode: false
        in: path
        name: idSite
        required: true
        schema:
          type: string
        style: simple
      - description: "Instance for which to retrieve data, defaults to 0."
        explode: true
        in: query
        name: instance
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response'
          description: Successfully retrieved summary.
        "4xx":
          content:
            application/json:
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
              schema:
                $ref: '#/components/schemas/auth_login_401_response'
          description: Request unsuccessful.
      summary: Temperature summary data
      tags:
      - Summary Widgets
  /admin/devices:
    $ref: ../Commands/Admin/docs/DevicesCommand.yaml
  /admin/installation-data-attributes-count:
    $ref: ../Commands/Admin/docs/InstallationDataAttributesCountCommand.yaml
  /admin/search-download:
    $ref: ../Commands/Admin/docs/InstallationSearchDownloadCommand.yaml
components:
  schemas:
    users_idUser_accesstokens_create_request:
      properties:
        name:
          description: "Access token name, must not already exist for this user."
          type: string
        expiry:
          description: Expiry timestamp
          type: integer
      required:
      - name
    installations_idSite_widgets_GPS_200_response_records_data_attributes:
      additionalProperties:
        $ref: '#/components/schemas/installations_idSite_widgets_GPS_200_response_records_data_attributes_value'
      description: GPS data attributes.
      example:
        hasOldData: true
        secondsAgo:
          valueFormattedWithUnit: valueFormattedWithUnit
          value: value
      properties:
        secondsAgo:
          $ref: '#/components/schemas/installations_idSite_widgets_GPS_200_response_records_data_attributes_secondsAgo'
        hasOldData:
          description: "True if the retrieved data is old, based on the key data attribute."
      required:
      - hasOldData
      - secondsAgo
    users_me_200_response:
      example:
        success: true
        user:
          country: country
          name: name
          id: 0
          email: email
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        user:
          $ref: '#/components/schemas/users_me_200_response_user'
    installations_idSite_system_overview_200_response_records_devices_inner_vmc:
      anyOf:
      - type: string
      - type: boolean
      description: "VE.bus device connection. Either VE.Bus, VE.Can or false."
    installations_idSite_system_overview_200_response_records_devices_inner_loggingInterval:
      anyOf:
      - format: int32
        type: integer
      - type: boolean
      description: "Expected seconds between received logs from gateway device, or\
        \ false if not set."
    users_idUser_installations_200_response:
      example:
        records:
        - shared: true
          high_workload: true
          notes: notes
          last_timestamp: 4
          hasGenerator: 2
          mqtt_webhost: mqtt_webhost
          timezone: timezone
          device_icon: device_icon
          phonenumber: phonenumber
          view_permissions:
            twoway: true
            settings: true
            diagnostics: true
            nodered: true
            update_settings: true
            share: true
            vnc: true
            nodered_dash: true
            mqtt_rpc: true
            signalk: true
            exact_location: true
            vebus: true
          demo_mode: true
          extended:
          - code: code
            instance: instance
            textValue: textValue
            dataType: string
            description: description
            formatWithUnit: formatWithUnit
            dataAttributeEnumValues:
            - nameEnum: nameEnum
              valueEnum: 7
            - nameEnum: nameEnum
              valueEnum: 7
            rawValue: rawValue
            dbusServiceType: dbusServiceType
            dbusPath: dbusPath
            formattedValue: formattedValue
            idDataAttribute: 6
            timestamp: timestamp
          - code: code
            instance: instance
            textValue: textValue
            dataType: string
            description: description
            formatWithUnit: formatWithUnit
            dataAttributeEnumValues:
            - nameEnum: nameEnum
              valueEnum: 7
            - nameEnum: nameEnum
              valueEnum: 7
            rawValue: rawValue
            dbusServiceType: dbusServiceType
            dbusPath: dbusPath
            formattedValue: formattedValue
            idDataAttribute: 6
            timestamp: timestamp
          is_admin: true
          idUser: 1
          num_alarms: 1
          current_alarms:
          - current_alarms
          - current_alarms
          idSite: 0
          alarm: true
          realtimeUpdates: true
          mqtt_host: mqtt_host
          current_time: current_time
          pvMax: 5
          geofenceEnabled: true
          owner: true
          identifier: identifier
          images:
          - imageName: imageName
            idSiteImage: 1
            url: url
          - imageName: imageName
            idSiteImage: 1
            url: url
          accessLevel: 6
          geofence: geofence
          timezone_offset: 7
          invalidVRMAuthTokenUsedInLogRequest: 3
          tags:
          - name: name
            idTag: 1
            automatic: true
          - name: name
            idTag: 1
            automatic: true
          syscreated: 2
          noDataAlarmTimeout: 7
          avatar_url: avatar_url
          alarmMonitoring: 9
          name: name
          hasMains: 5
        - shared: true
          high_workload: true
          notes: notes
          last_timestamp: 4
          hasGenerator: 2
          mqtt_webhost: mqtt_webhost
          timezone: timezone
          device_icon: device_icon
          phonenumber: phonenumber
          view_permissions:
            twoway: true
            settings: true
            diagnostics: true
            nodered: true
            update_settings: true
            share: true
            vnc: true
            nodered_dash: true
            mqtt_rpc: true
            signalk: true
            exact_location: true
            vebus: true
          demo_mode: true
          extended:
          - code: code
            instance: instance
            textValue: textValue
            dataType: string
            description: description
            formatWithUnit: formatWithUnit
            dataAttributeEnumValues:
            - nameEnum: nameEnum
              valueEnum: 7
            - nameEnum: nameEnum
              valueEnum: 7
            rawValue: rawValue
            dbusServiceType: dbusServiceType
            dbusPath: dbusPath
            formattedValue: formattedValue
            idDataAttribute: 6
            timestamp: timestamp
          - code: code
            instance: instance
            textValue: textValue
            dataType: string
            description: description
            formatWithUnit: formatWithUnit
            dataAttributeEnumValues:
            - nameEnum: nameEnum
              valueEnum: 7
            - nameEnum: nameEnum
              valueEnum: 7
            rawValue: rawValue
            dbusServiceType: dbusServiceType
            dbusPath: dbusPath
            formattedValue: formattedValue
            idDataAttribute: 6
            timestamp: timestamp
          is_admin: true
          idUser: 1
          num_alarms: 1
          current_alarms:
          - current_alarms
          - current_alarms
          idSite: 0
          alarm: true
          realtimeUpdates: true
          mqtt_host: mqtt_host
          current_time: current_time
          pvMax: 5
          geofenceEnabled: true
          owner: true
          identifier: identifier
          images:
          - imageName: imageName
            idSiteImage: 1
            url: url
          - imageName: imageName
            idSiteImage: 1
            url: url
          accessLevel: 6
          geofence: geofence
          timezone_offset: 7
          invalidVRMAuthTokenUsedInLogRequest: 3
          tags:
          - name: name
            idTag: 1
            automatic: true
          - name: name
            idTag: 1
            automatic: true
          syscreated: 2
          noDataAlarmTimeout: 7
          avatar_url: avatar_url
          alarmMonitoring: 9
          name: name
          hasMains: 5
        success: true
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        records:
          description: "The retrieved installations, empty if none."
          items:
            $ref: '#/components/schemas/users_idUser_installations_200_response_records_inner'
          type: array
      required:
      - records
      - success
    installations_idSite_system_overview_200_response_records_unconfigured_devices:
      description: Unconfigured devices belonging to this installation.
      oneOf:
      - type: boolean
      - items:
          $ref: '#/components/schemas/installations_idSite_system_overview_200_response_records_unconfigured_devices_oneOf_inner'
        type: array
    installations_idSite_settings_200_response_data:
      description: Contains the updated settings for the installation.
      example:
        description: description
      properties:
        description:
          description: Description of the installation.
          type: string
    auth_logout_200_response:
      example:
        token: token
      properties:
        token:
          description: An empty string.
          type: string
    _installations__idSite__reset_forecasts_post_200_response:
      example:
        success: true
      properties:
        success:
          description: True if the request was successful.
          type: boolean
    installations_idSite_diagnostics_200_response:
      example:
        records:
          instance: 1
          code: code
          Device: Device
          description: description
          formatWithUnit: formatWithUnit
          dataAttributeEnumValues:
          - nameEnum: nameEnum
            valueEnum: 7
          - nameEnum: nameEnum
            valueEnum: 7
          rawValue: installations_idSite_diagnostics_200_response_records_rawValue
          dbusServiceType: dbusServiceType
          idSite: 0
          dbusPath: dbusPath
          formattedValue: formattedValue
          idDataAttribute: 5
          id: 2
          bitmask: 5
          timestamp: 6
        success: true
        num_records: 9
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        records:
          $ref: '#/components/schemas/installations_idSite_diagnostics_200_response_records'
        num_records:
          description: Amount of log records available.
          type: integer
      required:
      - num_records
      - records
      - success
    _installations__idSite__dynamic_ess_settings_get_200_response_data:
      description: Contains the updated configuration for the installation.
      example:
        sellPriceFormula: 1.21*p+0.04
        periodicFullChargeInterval: 14
        chargePower: 10
        buyEnergyProviderId: 1
        maxPowerFromGrid: 10
        buyPriceType: 1
        buyPriceFormula: 1.21*p+0.04
        maxPowerToGrid: 10
        gridSell: 1
        idBiddingZone: 1
        buyPriceSchedule:
        - schedule:
          - price: "0.41"
            from: 00:00
            to: 05:00
          - price: "0.41"
            from: 00:00
            to: 05:00
          days:
          - 0
          - 0
        - schedule:
          - price: "0.41"
            from: 00:00
            to: 05:00
          - price: "0.41"
            from: 00:00
            to: 05:00
          days:
          - 0
          - 0
        isDessSocDifferent: false
        sellPriceSchedule:
        - schedule:
          - price: "0.41"
            from: 00:00
            to: 05:00
          - price: "0.41"
            from: 00:00
            to: 05:00
          days:
          - 0
          - 0
        - schedule:
          - price: "0.41"
            from: 00:00
            to: 05:00
          - price: "0.41"
            from: 00:00
            to: 05:00
          days:
          - 0
          - 0
        periodicFullChargeDuration: 2
        sellPriceType: 1
        batteryCosts: 0.02
        batteryFlowRestriction: unrestricted
        sellEnergyProviderId: 1
        isOn: true
        batteryPrice: 250
        isGreenModeOn: false
        isPeriodicFullChargeOn: true
        batteryCapacity: 10
        dischargePower: 10
      properties:
        batteryCapacity:
          description: Battery capacity of the system in kWh
          example: 10
          type: number
        batteryCosts:
          description: "Battery cycle costs per kWh - You can calculate this value\
            \ using this formula: battery price / (amount of battery cycles * battery\
            \ capacity)"
          example: 0.02
          type: number
        batteryFlowRestriction:
          description: |
            Do you need to disable grid charging or discharging?
             * `unrestricted` - No
             * `noExport` - Disable discharging battery to grid
             * `noImport` - Disable charging battery from grid
          enum:
          - unrestricted
          - noExport
          - noImport
          example: unrestricted
          type: string
        batteryPrice:
          description: Battery price
          example: 250
          type: number
        buyEnergyProviderId:
          description: Identifier of the energy provider for buying energy (see /energy-providers)
          example: 1
          type: number
        buyPriceFormula:
          description: "A formula to apply to the raw dynamic energy prices, where\
            \ p is the raw price."
          example: 1.21*p+0.04
          type: string
        buyPriceSchedule:
          items:
            $ref: '#/components/schemas/_installations__idSite__dynamic_ess_settings_get_200_response_data_buyPriceSchedule_inner'
          type: array
        buyPriceType:
          description: Whether or not you have dynamic buy prices
          enum:
          - 0
          - 1
          example: 1
          type: number
        chargePower:
          description: Maximum battery charging power in kW
          example: 10
          type: number
        dischargePower:
          description: Maximum battery discharging power in kW
          example: 10
          type: number
        gridSell:
          description: Whether or not you can sell energy to the grid.
          enum:
          - 0
          - 1
          example: 1
          type: number
        idBiddingZone:
          description: Identifier of the EU bidding zone (see /bidding-zones)
          example: 1
          type: number
        isDessSocDifferent:
          description: Whether or not you want to have a separate minimum SOC for
            Dynamic ESS
          example: false
          type: boolean
        isGreenModeOn:
          description: Whether or not you want to have green mode turned on for Dynamic
            ESS
          example: false
          type: boolean
        isOn:
          description: Whether or not you want to enable Dynamic ESS in VRM
          example: true
          type: boolean
        maxPowerFromGrid:
          description: Maximum power from the grid in kW
          example: 10
          type: number
        maxPowerToGrid:
          description: Maximum power to the grid in kW
          example: 10
          type: number
        sellEnergyProviderId:
          description: Identifier of the energy provider for buying energy (see /energy-providers)
          example: 1
          type: number
        sellPriceSchedule:
          items:
            $ref: '#/components/schemas/_installations__idSite__dynamic_ess_settings_get_200_response_data_buyPriceSchedule_inner'
          type: array
        sellPriceFormula:
          description: "A formula to apply to the raw dynamic energy prices, where\
            \ p is the raw price."
          example: 1.21*p+0.04
          type: string
        sellPriceType:
          description: Whether or not you have dynamic sell prices
          enum:
          - 0
          - 1
          example: 1
          type: number
        isPeriodicFullChargeOn:
          description: Whether or not do you want to periodically charge your battery
            to 100% in order to extend battery life
          example: true
          type: boolean
        periodicFullChargeDuration:
          description: How many hours should your battery stay at 100% during the
            periodic recharge
          example: 2
          type: positive number or null
        periodicFullChargeInterval:
          description: How often should the battery be fully charged (in days)
          example: 14
          type: positive number or null
      required:
      - batteryCapacity
      - batteryCosts
      - batteryFlowRestriction
      - buyPriceType
      - chargePower
      - dischargePower
      - gridSell
      - isOn
      - maxPowerFromGrid
      - maxPowerToGrid
      - sellPriceType
    _installations__idSite__custom_widget_post_200_response:
      example:
        idCustomWidget: 0
        success: true
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        idCustomWidget:
          description: ID of the custom widget.
          type: integer
    installations_idSite_overallstats_200_response_records_year:
      description: Totals and percentages.
      example:
        percentages:
          key: 6
        totals:
          key: 0.8008281904610115
      properties:
        totals:
          additionalProperties:
            $ref: '#/components/schemas/installations_idSite_stats_200_response_totals_oneOf_value'
          description: Total for each data attribute.
        percentages:
          additionalProperties:
            type: integer
          description: Percentage for each data attribute.
      required:
      - percentages
      - totals
    installationOverviewDownload_request_columns_value:
      properties:
        header:
          description: The header text for the column.
          type: string
        enabled:
          description: Whether the column is enabled.
          type: boolean
        hide:
          description: Whether the column is hidden (optional).
          type: boolean
          nullable: true
    users_idUser_accesstokens_revoke_200_response_data:
      example:
        removed: 0
      properties:
        removed:
          description: The amount of token that have been revoked.
          type: integer
      required:
      - removed
    installations_idSite_widgets_GPS_200_response_records_data_attributes_value:
      description: Data for data attribute with this key.
      properties:
        code:
          description: Data attribute code.
          type: string
        dataAttributeName:
          description: Data attribute name.
          type: string
        dataType:
          description: Data attribute data type.
          enum:
          - float
          - enum
          - string
          type: string
        dbusPath:
          description: Data attribute DBus path.
          type: string
        dbusServiceType:
          description: Data attribute DBus service type.
          type: string
        formatValueOnly:
          description: Data attribute string format without unit.
          type: string
        formatWithUnit:
          description: Data attribute string format with unit.
          type: string
        formattedValue:
          description: Data attribute formatted value with unit.
          type: string
        hasOldData:
          description: True if the retrieved data for this data attribute is old.
          type: boolean
        idDataAttribute:
          description: Data attribute id.
          type: string
        instance:
          description: Installation instance this data attribute belongs to.
          type: integer
        isKeyDataAttribute:
          description: "1 if this is the key data attribute, else 0."
          type: string
        isValid:
          description: "1 if this data is valid, else 0."
          type: string
        nameEnum:
          description: "Data attribute enum name, if applicable."
          nullable: true
          type: string
        rawValue:
          description: "Data attribute raw value, regardless of data type."
          type: string
        secondsAgo:
          description: Data attribute seconds since last received data.
          type: string
        secondsToNextLog:
          description: Data attribute expected data logging interval.
          type: string
        value:
          description: "Data attribute value, regardless of data type."
          type: string
        valueEnum:
          description: "Data attribute enum value, if applicable."
          nullable: true
          type: string
        valueFloat:
          description: "Data attribute float value, if applicable."
          nullable: true
          type: string
        valueFormattedValueOnly:
          description: Data attribute formatted value without unit.
          type: string
        valueFormattedWithUnit:
          description: Data attribute formatted value with unit.
          type: string
        valueString:
          description: "Data attribute string value, if applicable."
          nullable: true
          type: string
      required:
      - code
      - dataAttributeName
      - dataType
      - dbusPath
      - dbusServiceType
      - formatValueOnly
      - formatWithUnit
      - formattedValue
      - hasOldData
      - idDataAttribute
      - instance
      - isKeyDataAttribute
      - isValid
      - nameEnum
      - rawValue
      - secondsAgo
      - secondsToNextLog
      - value
      - valueEnum
      - valueFloat
      - valueFormattedWithUnit
      - valueString
    installations_idSite_system_overview_200_response_records_devices_inner_settings_inner_enumData_inner:
      description: A single enum value.
      example:
        nameEnum: nameEnum
        valueEnum: 5
        values:
          key: 5
      properties:
        nameEnum:
          description: Enum name.
          type: string
        valueEnum:
          description: Enum value.
          type: integer
        values:
          additionalProperties:
            description: Key value pair with the data attribute id as key.
            type: integer
          description: "Underlying values corresponding to this value, only for compounded\
            \ settings."
      required:
      - nameEnum
      - valueEnum
    _installations__idSite__reset_forecasts_post_request:
      properties:
        resetType:
          example: 0
          type: number
    installations_idSite_system_overview_200_response_records_devices_inner_productId:
      anyOf:
      - type: string
      - type: boolean
      description: "VE.bus device product id, false if none."
    installations_idSite_system_overview_200_response_records_devices_inner_pL:
      anyOf:
      - type: string
      - type: boolean
      description: "PV Inverter device position, false if none available."
    users_idUser_addsite_request:
      properties:
        installation_identifier:
          description: Installation identifier.
          type: string
      required:
      - installation_identifier
    users_idUser_get_site_id_200_response_records:
      description: Id of the retrieved site
      example:
        site_id: site_id
      properties:
        site_id:
          description: installation id
          type: string
    installations_idSite_data_download_200_response:
      description: The asynchronous export was successfully started.
      example:
        success: true
      properties:
        success:
          description: True if the request was successful.
          type: boolean
      required:
      - success
    installations_idSite_system_overview_200_response_records_devices_inner_settings_inner_values_value:
      description: Key value pair with the data attribute id as key.
      example:
        loggedValue: loggedValue
        value: value
      properties:
        loggedValue:
          description: Value logged for this setting.
          type: string
        value:
          description: Current value for this setting.
          type: string
      required:
      - loggedValue
      - value
    _installations__idSite__alarms_post_200_response_data:
      description: Description of added alarm
      example:
        idDataAttributeLimit: 76571
        instance: 0
        lowAlarm: 0
        NotifyAfterSeconds: 60
        lowAlarmHysteresis: 0.2
        highAlarm: 2
        idDataAttribute: 630
        AlarmEnabled: 1
        highAlarmHysteresis: 2
      properties:
        AlarmEnabled:
          example: 1
          type: number
        NotifyAfterSeconds:
          example: 60
          type: number
        highAlarm:
          example: 2
          type: number
        highAlarmHysteresis:
          example: 2
          type: number
        idDataAttribute:
          example: 630
          type: number
        instance:
          example: 0
          type: number
        lowAlarm:
          example: 0
          type: number
        lowAlarmHysteresis:
          example: 0.2
          type: number
        idDataAttributeLimit:
          example: 76571
          type: integer
    installations_idSite_widgets_BatterySummary_200_response_records_data_value_dataAttributeEnumValues_inner:
      description: Enum name and value pair.
      properties:
        nameEnum:
          description: Enum name.
          type: string
        valueEnum:
          description: Enum value.
          type: integer
      required:
      - nameEnum
      - valueEnum
    _installations__idSite__alarms_put_200_response:
      example:
        data:
          idDataAttributeLimit: 6
          instance: 0
          lowAlarm: 0
          NotifyAfterSeconds: 60
          lowAlarmHysteresis: 0.2
          highAlarm: 2
          idDataAttribute: 630
          AlarmEnabled: 1
          highAlarmHysteresis: 2
        success: true
        idSite: 0
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        idSite:
          description: installation ID
          type: integer
        data:
          $ref: '#/components/schemas/_installations__idSite__alarms_put_200_response_data'
    _installations__idSite__alarms_get_200_response_users_inner:
      example:
        idUser: 174862
        receivesReports: 0
        accessLevel: 0
        avatar_url: https://www.gravatar.com/avatar/09821a2342asdf098234asdf8jhg3459?s=80&d=404&r=g
        receivesAlarmNotifications: 0
        idSite: 32223
        name: John Doe
        muted: false
        email: user@email.com
      properties:
        idUser:
          example: 174862
          type: integer
        idSite:
          example: 32223
          type: integer
        accessLevel:
          example: 0
          type: integer
        receivesAlarmNotifications:
          example: 0
          type: integer
        receivesReports:
          example: 0
          type: integer
        email:
          example: user@email.com
          type: string
        name:
          example: John Doe
          type: string
        avatar_url:
          example: https://www.gravatar.com/avatar/09821a2342asdf098234asdf8jhg3459?s=80&d=404&r=g
          type: string
        muted:
          example: false
          type: boolean
    users_idUser_get_site_id_200_response:
      example:
        records:
          site_id: site_id
        success: true
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        records:
          $ref: '#/components/schemas/users_idUser_get_site_id_200_response_records'
      required:
      - records
      - success
    _installations__idSite__dynamic_ess_settings_get_200_response_data_buyPriceSchedule_inner_schedule_inner:
      example:
        price: "0.41"
        from: 00:00
        to: 05:00
      properties:
        from:
          description: "From timestamp (inclusive), whole hours only"
          example: 00:00
          type: string
        to:
          description: "From timestamp (exclusive), whole hours only"
          example: 05:00
          type: string
        price:
          description: Energy price for this timeslot
          example: "0.41"
          type: number
      required:
      - from
      - price
      - to
    installations_idSite_stats_200_response_records_oneOf_value:
      anyOf:
      - description: Data points for statistic with this key.
        items:
          description: "An array containing first the timestamp, then the mean value.\
            \ If available, the minimum and then the maximum will be added to the\
            \ end of this array."
          items:
            type: number
          type: array
        type: array
      - description: Statistic without data within the given timeframe.
        type: boolean
    installations_idSite_widgets_BatterySummary_200_response_records_data_value:
      description: Summary for data attribute with this key.
      properties:
        code:
          description: Data attribute code.
          type: string
        dataAttributeName:
          description: Data attribute name.
          type: string
        dataType:
          description: Data attribute data type.
          enum:
          - float
          - enum
          - string
          type: string
        dbusPath:
          description: Data attribute DBus path.
          type: string
        dbusServiceType:
          description: Data attribute DBus service type.
          type: string
        formatValueOnly:
          description: Data attribute string format without unit.
          type: string
        formatWithUnit:
          description: Data attribute string format with unit.
          type: string
        formattedValue:
          description: Data attribute formatted value with unit.
          type: string
        hasOldData:
          description: True if the retrieved data for this data attribute is old.
          type: boolean
        idDataAttribute:
          description: Data attribute id.
          type: string
        instance:
          description: Installation instance this data attribute belongs to.
          type: integer
        isKeyDataAttribute:
          description: "1 if this is the key data attribute, else 0."
          type: string
        isValid:
          description: "1 if this data is valid, else 0."
          type: string
        nameEnum:
          description: "Data attribute enum name, if applicable."
          nullable: true
          type: string
        rawValue:
          description: "Data attribute raw value, regardless of data type."
          type: string
        secondsAgo:
          description: Data attribute seconds since last received data.
          type: string
        secondsToNextLog:
          description: Data attribute expected data logging interval.
          type: string
        value:
          description: "Data attribute value, regardless of data type."
          type: string
        valueEnum:
          description: "Data attribute enum value, if applicable."
          nullable: true
          type: string
        valueFloat:
          description: "Data attribute float value, if applicable."
          nullable: true
          type: string
        valueFormattedValueOnly:
          description: Data attribute formatted value without unit.
          type: string
        valueFormattedWithUnit:
          description: Data attribute formatted value with unit.
          type: string
        valueString:
          description: "Data attribute string value, if applicable."
          nullable: true
          type: string
        dataAttributeEnumValues:
          description: "Enum name and value pairs, if applicable."
          items:
            $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response_records_data_value_dataAttributeEnumValues_inner'
          type: array
      required:
      - code
      - dataAttributeName
      - dataType
      - dbusPath
      - dbusServiceType
      - formatValueOnly
      - formatWithUnit
      - formattedValue
      - hasOldData
      - idDataAttribute
      - instance
      - isKeyDataAttribute
      - isValid
      - nameEnum
      - rawValue
      - secondsAgo
      - secondsToNextLog
      - value
      - valueEnum
      - valueFloat
      - valueFormattedWithUnit
      - valueString
    installations_idSite_system_overview_200_response_records_devices_inner_remoteSupportPort:
      anyOf:
      - format: int32
        type: integer
      - type: boolean
      description: "Venus OS gateway remote support connection port, or false if none."
    _installations__idSite__tags_get_200_response:
      example:
        success: true
        tags:
        - tags
        - tags
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        tags:
          description: Tags for this installation.
          items:
            description: Tag name.
            type: string
          type: array
    auth_login_401_response:
      example:
        success: true
        error_code: error_code
        errors: auth_login_401_response_errors
      properties:
        success:
          description: Whether the request was successful.
          type: boolean
        errors:
          $ref: '#/components/schemas/auth_login_401_response_errors'
        error_code:
          description: "The error code, if applicable."
          nullable: true
          type: string
      required:
      - error_code
      - errors
      - success
    _installations__idSite__custom_widget_delete_request:
      properties:
        idCustomWidget:
          description: ID of the custom widget that nees to be deleted.
          type: integer
    users_idUser_addsite_200_response:
      example:
        records:
          site_id: site_id
        success: true
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        records:
          $ref: '#/components/schemas/users_idUser_addsite_200_response_records'
      required:
      - records
      - success
    _data_attributes_get_200_response_value:
      properties:
        code:
          description: The code of the attribute.
          type: string
        dataType:
          description: The data type of the attribute.
          type: string
        description:
          description: A detailed description of the attribute.
          type: string
        formatWithUnit:
          description: The format string with the unit for the attribute.
          type: string
    users_idUser_accesstokens_create_200_response:
      example:
        success: true
        token: 0
        idAccessToken: idAccessToken
      properties:
        success:
          description: Whether the request was successful.
          type: boolean
        token:
          description: Generated access token.
          type: integer
        idAccessToken:
          description: Access token id.
          type: string
      required:
      - idAccessToken
      - success
      - token
    installations_idSite_system_overview_200_response_records_devices_inner_lastConnection:
      anyOf:
      - type: string
      - type: boolean
      description: "Device last connected timestamp, false if no timestamp available."
    _installations__idSite__alarms_get_200_response_devices_inner:
      example:
        identifier: 000000a0a000
        instance: 0
        isValid: 1
        customName: customName
        productIdAsReceived: 2
        deviceName: Gateway
        productName: Color Control GX
        lastConnection: 1682696559
        customProductName: Color Control GX
        idSite: 32223
        connection: connection
        secondsAgo: 27
        firmwareVersion: v3.00~29
        idDeviceType: 0
      properties:
        idSite:
          example: 32223
          type: integer
        instance:
          example: 0
          type: integer
        lastConnection:
          example: 1682696559
          type: integer
        secondsAgo:
          example: 27
          type: integer
        isValid:
          example: 1
          type: integer
        idDeviceType:
          example: 0
          type: integer
        deviceName:
          example: Gateway
          type: string
        productIdAsReceived:
          example: 2
          type: integer
        productName:
          example: Color Control GX
          type: string
        customProductName:
          example: Color Control GX
          type: string
        firmwareVersion:
          example: v3.00~29
          type: string
        connection:
          type: string
        customName:
          type: string
        identifier:
          example: 000000a0a000
          type: string
    installations_idSite_diagnostics_200_response_records_rawValue:
      anyOf:
      - type: string
      - format: int32
        type: integer
      description: Log data raw value.
    _installations__idSite__alarms_put_200_response_data:
      description: Description of added alarm
      example:
        idDataAttributeLimit: 6
        instance: 0
        lowAlarm: 0
        NotifyAfterSeconds: 60
        lowAlarmHysteresis: 0.2
        highAlarm: 2
        idDataAttribute: 630
        AlarmEnabled: 1
        highAlarmHysteresis: 2
      properties:
        AlarmEnabled:
          example: 1
          type: number
        NotifyAfterSeconds:
          example: 60
          type: number
        highAlarm:
          example: 2
          type: number
        highAlarmHysteresis:
          example: 2
          type: number
        idDataAttribute:
          example: 630
          type: number
        instance:
          example: 0
          type: number
        lowAlarm:
          example: 0
          type: number
        lowAlarmHysteresis:
          example: 0.2
          type: number
        idDataAttributeLimit:
          type: integer
    _installations__idSite__tags_put_request:
      properties:
        tag:
          example: Foo
          type: string
        source:
          example: user
          type: string
    installations_idSite_overallstats_200_response:
      example:
        records:
          week:
            percentages:
              key: 6
            totals:
              key: 0.8008281904610115
          month:
            percentages:
              key: 6
            totals:
              key: 0.8008281904610115
          year:
            percentages:
              key: 6
            totals:
              key: 0.8008281904610115
          today:
            percentages:
              key: 6
            totals:
              key: 0.8008281904610115
        success: true
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        records:
          $ref: '#/components/schemas/installations_idSite_overallstats_200_response_records'
      required:
      - records
      - success
    installations_idSite_widgets_Graph_200_response_records_meta_value:
      description: Meta data for data attribute with this key.
      example:
        code: code
        description: description
        formatWithUnit: formatWithUnit
        formatWithValueOnly: formatWithValueOnly
      properties:
        code:
          description: Data attribute code.
          type: string
        description:
          description: Data attribute description.
          type: string
        formatWithValueOnly:
          description: Data attribute format with only the value.
          type: string
        formatWithUnit:
          description: Data attribute format with both value and unit.
          type: string
      required:
      - code
      - description
      - formatValueOnly
      - formatWithUnit
    auth_login_request:
      properties:
        username:
          description: User e-mail
          type: string
        password:
          description: User password
          type: string
        sms_token:
          description: 2FA code (if 2FA is enabled for the user)
          type: string
        remember_me:
          description: Get a long-lived token which stays valid for longer
          type: boolean
      required:
      - password
      - username
    installations_idSite_clear_alarm_200_response:
      example:
        success: true
        idSite: idSite
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        idSite:
          description: ID of the installation.
          type: string
      required:
      - idSite
      - success
    auth_login_200_response:
      example:
        idUser: 0
        verification_mode: verification_mode
        token: token
        verification_sent: true
      properties:
        token:
          description: The bearer token that was generated.
          nullable: true
          type: string
        idUser:
          description: The id of the user for which the token was generated.
          type: integer
        verification_mode:
          description: Which mode is used for verfying a login for this account.
          type: string
        verification_sent:
          description: "Whether a verification code was sent, for 2FA."
          type: boolean
      required:
      - idUser
      - token
      - verification_mode
      - verification_sent
    _installations__idSite__alarms_get_200_response_alarms_inner:
      example:
        idDataAttributeLimit: 76571
        instance: 0
        lowAlarm: 0
        NotifyAfterSeconds: 60
        lowAlarmHysteresis: 0.2
        highAlarm: 2
        idDataAttribute: 630
        AlarmEnabled: 1
        highAlarmHysteresis: 2
      properties:
        AlarmEnabled:
          example: 1
          type: number
        NotifyAfterSeconds:
          example: 60
          type: number
        highAlarm:
          example: 2
          type: number
        highAlarmHysteresis:
          example: 2
          type: number
        idDataAttribute:
          example: 630
          type: number
        instance:
          example: 0
          type: number
        lowAlarm:
          example: 0
          type: number
        lowAlarmHysteresis:
          example: 0.2
          type: number
        idDataAttributeLimit:
          example: 76571
          type: integer
    installationOverviewDownload_200_response_data_value:
      description: Data for each installation.
      example:
        Installation name: Installation name
        Battery %: Battery %
        Load: Load
        Temperature: Temperature
        Battery Voltage: Battery Voltage
        Tanks: Tanks
        Grid: Grid
        Last Update: 2000-01-23T04:56:07.000+00:00
        Solar Yield: Solar Yield
        Battery Mode: Battery Mode
        Generator: Generator
      properties:
        Installation name:
          description: Name of the installation.
          type: string
        Battery Voltage:
          description: "Battery voltage (e.g., \"50.00 V\")."
          type: string
        Battery %:
          description: "Battery percentage (e.g., \"100.0 %\")."
          type: string
        Battery Mode:
          description: "Current battery mode (e.g., \"Charging\")."
          type: string
        Load:
          description: "Current load in watts (e.g., \"118 W\")."
          type: string
        Solar Yield:
          description: "Solar yield in watts (e.g., \"117 W\")."
          type: string
        Grid:
          description: Grid power in watts.
          type: string
        Generator:
          description: Generator power in watts.
          type: string
        Tanks:
          description: "Information about tank levels (e.g., \"Fuel-20 %\")."
          type: string
        Temperature:
          description: "Temperature readings (e.g., \"Battery-27.0 °C\")."
          type: string
        Last Update:
          description: Timestamp of the last update.
          format: date-time
          type: string
    installations_idSite_system_overview_200_response:
      example:
        records:
          devices:
          - remoteSupport: enabled_online
            instance: 6
            autoUpdate: "On"
            remoteSupportPort: 4
            networkName: networkName
            signalRSSI: signalRSSI
            twoWayCommunication: true
            vmc: installations_idSite_system_overview_200_response_records_devices_inner_vmc
            productName: productName
            lastPowerUpOrRestart: installations_idSite_system_overview_200_response_records_devices_inner_lastPowerUpOrRestart
            machineSerialNumber: machineSerialNumber
            vid:
              enumValue: Single unit
              devicesPerPhase:
                L1: 7
                L2: 1
                L3: 1
            froniusDeviceType: froniusDeviceType
            remoteSupportIp: remoteSupportIp
            tempSensorConnected: true
            signalSNR: signalSNR
            idSite: 0
            connection: connection
            inputType: installations_idSite_system_overview_200_response_records_devices_inner_inputType
            inputState: inputState
            remoteOnLan: remoteOnLan
            firmwareVersion: firmwareVersion
            pL: installations_idSite_system_overview_200_response_records_devices_inner_pL
            class: class
            settings:
            - enumData:
              - nameEnum: nameEnum
                valueEnum: 5
                values:
                  key: 5
              - nameEnum: nameEnum
                valueEnum: 5
                values:
                  key: 5
              loggedTimestamp: loggedTimestamp
              user_name: user_name
              values:
                key:
                  loggedValue: loggedValue
                  value: value
              description: description
              idUser: idUser
              idSite: idSite
              loggedValue: 2
              idDataAttribute: idDataAttribute
              attributes:
              - 9
              - 9
              value: 7
              idDeviceType: idDeviceType
              timestamp: timestamp
            - enumData:
              - nameEnum: nameEnum
                valueEnum: 5
                values:
                  key: 5
              - nameEnum: nameEnum
                valueEnum: 5
                values:
                  key: 5
              loggedTimestamp: loggedTimestamp
              user_name: user_name
              values:
                key:
                  loggedValue: loggedValue
                  value: value
              description: description
              idUser: idUser
              idSite: idSite
              loggedValue: 2
              idDataAttribute: idDataAttribute
              attributes:
              - 9
              - 9
              value: 7
              idDeviceType: idDeviceType
              timestamp: timestamp
            identifier: identifier
            vncPort: 2
            pdV: pdV
            productId: installations_idSite_system_overview_200_response_records_devices_inner_productId
            customName: customName
            signalFrequency: signalFrequency
            antennaType: Internal
            lastConnection: installations_idSite_system_overview_200_response_records_devices_inner_lastConnection
            loggingInterval: 3
            updateTo: Official release
            remoteSupportEnabled: true
            productCode: productCode
            vncSshAuth: true
            vncStatus: Enabled
            name: name
            idDeviceType: 1
          - remoteSupport: enabled_online
            instance: 6
            autoUpdate: "On"
            remoteSupportPort: 4
            networkName: networkName
            signalRSSI: signalRSSI
            twoWayCommunication: true
            vmc: installations_idSite_system_overview_200_response_records_devices_inner_vmc
            productName: productName
            lastPowerUpOrRestart: installations_idSite_system_overview_200_response_records_devices_inner_lastPowerUpOrRestart
            machineSerialNumber: machineSerialNumber
            vid:
              enumValue: Single unit
              devicesPerPhase:
                L1: 7
                L2: 1
                L3: 1
            froniusDeviceType: froniusDeviceType
            remoteSupportIp: remoteSupportIp
            tempSensorConnected: true
            signalSNR: signalSNR
            idSite: 0
            connection: connection
            inputType: installations_idSite_system_overview_200_response_records_devices_inner_inputType
            inputState: inputState
            remoteOnLan: remoteOnLan
            firmwareVersion: firmwareVersion
            pL: installations_idSite_system_overview_200_response_records_devices_inner_pL
            class: class
            settings:
            - enumData:
              - nameEnum: nameEnum
                valueEnum: 5
                values:
                  key: 5
              - nameEnum: nameEnum
                valueEnum: 5
                values:
                  key: 5
              loggedTimestamp: loggedTimestamp
              user_name: user_name
              values:
                key:
                  loggedValue: loggedValue
                  value: value
              description: description
              idUser: idUser
              idSite: idSite
              loggedValue: 2
              idDataAttribute: idDataAttribute
              attributes:
              - 9
              - 9
              value: 7
              idDeviceType: idDeviceType
              timestamp: timestamp
            - enumData:
              - nameEnum: nameEnum
                valueEnum: 5
                values:
                  key: 5
              - nameEnum: nameEnum
                valueEnum: 5
                values:
                  key: 5
              loggedTimestamp: loggedTimestamp
              user_name: user_name
              values:
                key:
                  loggedValue: loggedValue
                  value: value
              description: description
              idUser: idUser
              idSite: idSite
              loggedValue: 2
              idDataAttribute: idDataAttribute
              attributes:
              - 9
              - 9
              value: 7
              idDeviceType: idDeviceType
              timestamp: timestamp
            identifier: identifier
            vncPort: 2
            pdV: pdV
            productId: installations_idSite_system_overview_200_response_records_devices_inner_productId
            customName: customName
            signalFrequency: signalFrequency
            antennaType: Internal
            lastConnection: installations_idSite_system_overview_200_response_records_devices_inner_lastConnection
            loggingInterval: 3
            updateTo: Official release
            remoteSupportEnabled: true
            productCode: productCode
            vncSshAuth: true
            vncStatus: Enabled
            name: name
            idDeviceType: 1
          unconfigured_devices: true
        success: true
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        records:
          $ref: '#/components/schemas/installations_idSite_system_overview_200_response_records'
      required:
      - records
      - success
    users_idUser_installations_200_response_records_inner_extended_inner_anyOf_dataAttributeEnumValues_inner:
      example:
        nameEnum: nameEnum
        valueEnum: 7
      properties:
        nameEnum:
          type: string
        valueEnum:
          type: integer
      required:
      - nameEnum
      - valueEnum
    _installations__idSite__tags_delete_200_response:
      example:
        data:
        - "{}"
        - "{}"
        success: true
        idSite: 123
      properties:
        success:
          description: True if the request was successful.
          example: true
          type: boolean
        idSite:
          description: ID of the site where the tag was deleted.
          example: 123
          type: number
        data:
          description: Information of the removed tag.
          items:
            required:
            - source
            - tag
            type: object
            tag:
              type: string
              required: true
              example: Foo
            source:
              type: string
              required: true
              example: user
          type: array
    users_idUser_search_400_response:
      example:
        success: false
        error_code: empty_search
        error:
        - No search string has been provided.
      properties:
        success:
          example: false
          type: boolean
        error_code:
          example: empty_search
          type: string
        error:
          example:
          - No search string has been provided.
          items: {}
          type: array
    users_idUser_installations_200_response_records_inner_extended_inner_anyOf_1:
      description: Site summary data.
      properties:
        code:
          description: Summary data code.
          type: string
        description:
          description: Summary data description.
          type: string
        rawValue:
          description: Summary data last raw value.
          nullable: true
          type: number
        formattedValue:
          description: Summary data formatted value.
          type: string
        textValue:
          description: "If the dataType is 'enum', this contains the corresponding\
            \ text value for that enum."
          nullable: true
          type: string
        formatWithUnit:
          description: Summary data format string (e.g. "%.2F V").
          type: string
        idDataAttribute:
          description: Corresponding data attribute id.
          nullable: true
          type: integer
        dataAttributes:
          items:
            $ref: '#/components/schemas/users_idUser_installations_200_response_records_inner_extended_inner_anyOf_1_dataAttributes_inner'
          type: array
      required:
      - code
      - dataAttributes
      - description
      - formatWithUnit
      - formattedValue
      - idDataAttribute
      - rawValue
      - textValue
    users_idUser_installations_200_response_records_inner:
      description: A single installation.
      example:
        shared: true
        high_workload: true
        notes: notes
        last_timestamp: 4
        hasGenerator: 2
        mqtt_webhost: mqtt_webhost
        timezone: timezone
        device_icon: device_icon
        phonenumber: phonenumber
        view_permissions:
          twoway: true
          settings: true
          diagnostics: true
          nodered: true
          update_settings: true
          share: true
          vnc: true
          nodered_dash: true
          mqtt_rpc: true
          signalk: true
          exact_location: true
          vebus: true
        demo_mode: true
        extended:
        - code: code
          instance: instance
          textValue: textValue
          dataType: string
          description: description
          formatWithUnit: formatWithUnit
          dataAttributeEnumValues:
          - nameEnum: nameEnum
            valueEnum: 7
          - nameEnum: nameEnum
            valueEnum: 7
          rawValue: rawValue
          dbusServiceType: dbusServiceType
          dbusPath: dbusPath
          formattedValue: formattedValue
          idDataAttribute: 6
          timestamp: timestamp
        - code: code
          instance: instance
          textValue: textValue
          dataType: string
          description: description
          formatWithUnit: formatWithUnit
          dataAttributeEnumValues:
          - nameEnum: nameEnum
            valueEnum: 7
          - nameEnum: nameEnum
            valueEnum: 7
          rawValue: rawValue
          dbusServiceType: dbusServiceType
          dbusPath: dbusPath
          formattedValue: formattedValue
          idDataAttribute: 6
          timestamp: timestamp
        is_admin: true
        idUser: 1
        num_alarms: 1
        current_alarms:
        - current_alarms
        - current_alarms
        idSite: 0
        alarm: true
        realtimeUpdates: true
        mqtt_host: mqtt_host
        current_time: current_time
        pvMax: 5
        geofenceEnabled: true
        owner: true
        identifier: identifier
        images:
        - imageName: imageName
          idSiteImage: 1
          url: url
        - imageName: imageName
          idSiteImage: 1
          url: url
        accessLevel: 6
        geofence: geofence
        timezone_offset: 7
        invalidVRMAuthTokenUsedInLogRequest: 3
        tags:
        - name: name
          idTag: 1
          automatic: true
        - name: name
          idTag: 1
          automatic: true
        syscreated: 2
        noDataAlarmTimeout: 7
        avatar_url: avatar_url
        alarmMonitoring: 9
        name: name
        hasMains: 5
      properties:
        idSite:
          type: integer
        accessLevel:
          description: The access level of the requesting user.
          type: integer
        owner:
          description: True if the requesting user owns this installation.
          type: boolean
        is_admin:
          description: True if the requesting user is an admin for this installation.
          type: boolean
        name:
          type: string
        identifier:
          description: Installation identifier.
          type: string
        idUser:
          description: Installation owner id.
          type: integer
        pvMax:
          description: Maximum PV for this installation.
          type: integer
        timezone:
          description: Installation local timezone.
          type: string
        phonenumber:
          description: Installation phone number.
          nullable: true
          type: string
        notes:
          description: Installation notes.
          nullable: true
          type: string
        geofence:
          description: "Installation geofence, in json format."
          nullable: true
          type: string
        geofenceEnabled:
          description: True if the geofence is enabled.
          type: boolean
        realtimeUpdates:
          description: True if realtime updates are enabled.
          type: boolean
        hasMains:
          description: "1 if the installation has mains, else 0."
          type: integer
        hasGenerator:
          description: "1 if the installation has a generator, else 0."
          type: integer
        noDataAlarmTimeout:
          description: How many seconds after no installation data is received the
            alarm should go off.
          nullable: true
          type: integer
        alarmMonitoring:
          description: "If alarms and warnings should be sent. When 0 nothing is sent\
            \ out, when 1 only alarms and when 2 both alarms and warnings."
          type: integer
        invalidVRMAuthTokenUsedInLogRequest:
          description: "1 if an invalid token was used for logging, else 0."
          type: integer
        syscreated:
          description: "Installation creation timestamp, UNIX format."
          type: integer
        shared:
          description: True if sitesharing is enabled.
          type: boolean
        device_icon:
          description: Installation icon.
          type: string
        alarm:
          description: True if there is an active alarm.
          type: boolean
        last_timestamp:
          description: Timestamp of the most recently received data (UNIX format).
          type: integer
        current_time:
          description: Local time for the installation in 24h format (hh:mm).
          type: string
        timezone_offset:
          description: How many seconds the installation is ahead of UTC.
          type: integer
        demo_mode:
          description: True if the installation is in demo mode.
          type: boolean
        mqtt_webhost:
          description: "Installation MQTT webhost, as a URL."
          type: string
        mqtt_host:
          description: "Installation MQTT host, as a URL."
          type: string
        high_workload:
          description: True if the D-Bus round trip time is higher than the threshold.
          type: boolean
        current_alarms:
          description: A list of the active alarms for this installation.
          items:
            description: The description of the alarm.
            type: string
          type: array
        num_alarms:
          description: The amount of active alarms.
          type: integer
        avatar_url:
          description: The url for this site's avatar.
          nullable: true
          type: string
        tags:
          description: Installation tags.
          items:
            $ref: '#/components/schemas/users_idUser_installations_200_response_records_inner_tags_inner'
          type: array
        images:
          description: Installation images.
          items:
            $ref: '#/components/schemas/users_idUser_installations_200_response_records_inner_images_inner'
          type: array
        view_permissions:
          $ref: '#/components/schemas/users_idUser_installations_200_response_records_inner_view_permissions'
        extended:
          description: Extended data about this installation.
          items:
            $ref: '#/components/schemas/users_idUser_installations_200_response_records_inner_extended_inner'
          type: array
      required:
      - accessLevel
      - alarmMonitoring
      - device_icon
      - geofence
      - geofenceEnabled
      - hasGenerator
      - hasMains
      - idSite
      - idUser
      - identifier
      - invalidVRMAuthTokenUsedInLogRequest
      - is_admin
      - name
      - noDataAlarmTimeout
      - notes
      - owner
      - phonenumber
      - pvMax
      - realtimeUpdates
      - shared
      - syscreated
      - timezone
    installationOverviewDownload_request:
      properties:
        columns:
          additionalProperties:
            $ref: '#/components/schemas/installationOverviewDownload_request_columns_value'
          description: Configuration of the columns to include in the overview.
        siteIds:
          description: List of site IDs to include in the overview.
          items:
            type: integer
          type: array
        onlyVisible:
          description: Whether only visible items should be included.
          type: boolean
        jsonResponse:
          description: "Whether the response should be in JSON format. If false, an\
            \ XLSX file will be returned."
          type: boolean
      required:
      - columns
      - jsonResponse
      - onlyVisible
      - siteIds
    installations_idSite_widgets_GPS_200_response_records_data:
      example:
        geofence: geofence
        attributes:
          hasOldData: true
          secondsAgo:
            valueFormattedWithUnit: valueFormattedWithUnit
            value: value
        geofenceAlarmActive: geofenceAlarmActive
        geofenceEnabled: geofenceEnabled
      properties:
        attributes:
          $ref: '#/components/schemas/installations_idSite_widgets_GPS_200_response_records_data_attributes'
        geofence:
          description: Serialized JSON representation of the geofence.
          nullable: true
          type: string
        geofenceAlarmActive:
          description: 1 if the installation is outside the geofence.
          nullable: true
          type: string
        geofenceEnabled:
          description: "1 if geofence is enabled, else 0."
          type: string
      required:
      - attributes
      - geofence
      - geofenceAlarmActive
      - geofenceEnabled
    _installations__idSite__dynamic_ess_settings_post_request:
      properties:
        batteryCapacity:
          description: Battery capacity of the system in kWh
          example: 10
          type: number
        batteryCosts:
          description: "Battery cycle costs per kWh - You can calculate this value\
            \ using this formula: battery price / (amount of battery cycles * battery\
            \ capacity)"
          example: 0.02
          type: number
        batteryFlowRestriction:
          description: |
            Do you need to disable grid charging or discharging?
             * `unrestricted` - No
             * `noExport` - Disable discharging battery to grid
             * `noImport` - Disable charging battery from grid
          enum:
          - unrestricted
          - noExport
          - noImport
          example: unrestricted
          type: string
        batteryPrice:
          description: Battery price
          example: 250
          type: number
        buyEnergyProviderId:
          description: Identifier of the energy provider for buying energy (see /energy-providers)
          example: 1
          type: number
        buyPriceFormula:
          description: "A formula to apply to the raw dynamic energy prices, where\
            \ p is the raw price."
          example: 1.21*p+0.04
          type: string
        buyPriceSchedule:
          items:
            $ref: '#/components/schemas/_installations__idSite__dynamic_ess_settings_get_200_response_data_buyPriceSchedule_inner'
          type: array
        buyPriceType:
          description: Whether or not you have dynamic buy prices
          enum:
          - 0
          - 1
          example: 1
          type: number
        chargePower:
          description: Maximum battery charging power in kW
          example: 10
          type: number
        dischargePower:
          description: Maximum battery discharging power in kW
          example: 10
          type: number
        gridSell:
          description: Whether or not you can sell energy to the grid.
          enum:
          - 0
          - 1
          example: 1
          type: number
        idBiddingZone:
          description: Identifier of the EU bidding zone (see /bidding-zones)
          example: 1
          type: number
        isDessSocDifferent:
          description: Whether or not you want to have a separate minimum SOC for
            Dynamic ESS
          example: false
          type: boolean
        isGreenModeOn:
          description: Whether or not you want to have green mode turned on for Dynamic
            ESS
          example: false
          type: boolean
        isOn:
          description: Whether or not you want to enable Dynamic ESS in VRM
          example: true
          type: boolean
        maxPowerFromGrid:
          description: Maximum power from the grid in kW
          example: 10
          type: number
        maxPowerToGrid:
          description: Maximum power to the grid in kW
          example: 10
          type: number
        sellEnergyProviderId:
          description: Identifier of the energy provider for buying energy (see /energy-providers)
          example: 1
          type: number
        sellPriceSchedule:
          items:
            $ref: '#/components/schemas/_installations__idSite__dynamic_ess_settings_get_200_response_data_buyPriceSchedule_inner'
          type: array
        sellPriceFormula:
          description: "A formula to apply to the raw dynamic energy prices, where\
            \ p is the raw price."
          example: 1.21*p+0.04
          type: string
        sellPriceType:
          description: Whether or not you have dynamic sell prices
          enum:
          - 0
          - 1
          example: 1
          type: number
        isPeriodicFullChargeOn:
          description: Whether or not do you want to periodically charge your battery
            to 100% in order to extend battery life
          example: true
          type: boolean
        periodicFullChargeDuration:
          description: How many hours should your battery stay at 100% during the
            periodic recharge
          example: 2
          type: positive number or null
        periodicFullChargeInterval:
          description: How often should the battery be fully charged (in days)
          example: 14
          type: positive number or null
      required:
      - batteryCapacity
      - batteryCosts
      - batteryFlowRestriction
      - buyPriceType
      - chargePower
      - dischargePower
      - gridSell
      - isOn
      - maxPowerFromGrid
      - maxPowerToGrid
      - sellPriceType
    _installations__idSite__alarms_get_200_response_attributes_inner:
      example:
        targetTable: logData
        code: bPOR
        dataType: enum
        description: Off reason
        formatWithUnit: '%s'
        idDataAttribute: 1215
        idDeviceType: 33
        enumValues: []
      properties:
        idDataAttribute:
          example: 1215
          type: number
        code:
          example: bPOR
          type: string
        description:
          example: Off reason
          type: string
        targetTable:
          example: logData
          type: string
        idDeviceType:
          example: 33
          type: int
        formatWithUnit:
          example: '%s'
          type: string
        dataType:
          example: enum
          type: string
        enumValues:
          example: []
          type: string
    _installations__idSite__alarms_delete_200_response:
      example:
        success: true
        idSite: 0
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        idSite:
          description: installation ID
          type: integer
    _installations__idSite__custom_widget_patch_request:
      properties:
        name:
          type: string
        onlyAdmins:
          type: integer
        yAxisScaling:
          type: integer
        parameters:
          type: object
        idCustomWidget:
          type: integer
    installations_idSite_widgets_GeneratorState_200_response_records:
      description: Fetched state changes.
      example:
        enums:
          key:
            key: enums
        data:
          key:
            "0": "0"
            "1": 0
            "2": 6
        meta:
          key:
            code: code
            description: description
            formatWithUnit: formatWithUnit
            formatWithValueOnly: formatWithValueOnly
        buckets:
          key:
            resampled: true
            original count: 5
            smallest gap: 2
            resampled count: 5
        sort:
          key:
            key: 1
      properties:
        data:
          additionalProperties:
            $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response_records_data_value'
          description: State changes per attribute.
        meta:
          additionalProperties:
            $ref: '#/components/schemas/installations_idSite_widgets_GPS_200_response_records_meta_value'
          description: Meta data per data attribute.
        enums:
          additionalProperties:
            additionalProperties:
              description: Enum name corresponding to the value of this key.
              type: string
            description: Enums for data attribute with this key.
          description: Enums per data attribute.
        sort:
          additionalProperties:
            additionalProperties:
              description: Sorting order.
              type: integer
            description: Sorting order for data attribute with this key.
          description: Sorting order of states per data attribute.
        buckets:
          additionalProperties:
            $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response_records_buckets_value'
          description: Buckets per data attribute.
      required:
      - buckets
      - data
      - meta
      - sort
    installations_idSite_system_overview_200_response_records_devices_inner_settings_inner:
      description: A setting for this device.
      example:
        enumData:
        - nameEnum: nameEnum
          valueEnum: 5
          values:
            key: 5
        - nameEnum: nameEnum
          valueEnum: 5
          values:
            key: 5
        loggedTimestamp: loggedTimestamp
        user_name: user_name
        values:
          key:
            loggedValue: loggedValue
            value: value
        description: description
        idUser: idUser
        idSite: idSite
        loggedValue: 2
        idDataAttribute: idDataAttribute
        attributes:
        - 9
        - 9
        value: 7
        idDeviceType: idDeviceType
        timestamp: timestamp
      properties:
        description:
          description: Setting description.
          type: string
        enumData:
          description: Possible enums.
          items:
            $ref: '#/components/schemas/installations_idSite_system_overview_200_response_records_devices_inner_settings_inner_enumData_inner'
          type: array
        idDataAttribute:
          description: "The numeric data attribute id for this setting, or a description\
            \ for compound settings."
          type: string
        idDeviceType:
          description: Device type id.
          type: string
        idSite:
          description: Installation id.
          type: string
        idUser:
          description: User id.
          nullable: true
          type: string
        loggedTimestamp:
          description: Timestamp at which this setting was logged.
          type: string
        loggedValue:
          description: Value logged for this setting.
          type: integer
        timestamp:
          description: Timestamp at which this setting was queued.
          nullable: true
          type: string
        user_name:
          description: User name.
          nullable: true
          type: string
        value:
          description: Current value for this setting.
          nullable: true
          type: integer
        attributes:
          description: "Underlying data attributes, only for compound settings."
          items:
            description: Data attribute id.
            type: integer
          type: array
        values:
          additionalProperties:
            $ref: '#/components/schemas/installations_idSite_system_overview_200_response_records_devices_inner_settings_inner_values_value'
          description: "Underlying values corresponding to this value, only for compounded\
            \ settings."
      required:
      - description
      - enumData
      - idDataAttribute
      - idDeviceType
      - idSite
      - idUser
      - loggedTimestamp
      - loggedValue
      - timestamp
      - user_name
      - value
    users_idUser_installations_403_response:
      example:
        success: true
        error_code: error_code
        errors: errors
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        errors:
          description: Any errors that occurred.
          type: string
        error_code:
          description: "The error code, if applicable."
          nullable: true
          type: string
      required:
      - error_code
      - errors
      - success
    _installations__idSite__dynamic_ess_settings_get_200_response:
      example:
        data:
          sellPriceFormula: 1.21*p+0.04
          periodicFullChargeInterval: 14
          chargePower: 10
          buyEnergyProviderId: 1
          maxPowerFromGrid: 10
          buyPriceType: 1
          buyPriceFormula: 1.21*p+0.04
          maxPowerToGrid: 10
          gridSell: 1
          idBiddingZone: 1
          buyPriceSchedule:
          - schedule:
            - price: "0.41"
              from: 00:00
              to: 05:00
            - price: "0.41"
              from: 00:00
              to: 05:00
            days:
            - 0
            - 0
          - schedule:
            - price: "0.41"
              from: 00:00
              to: 05:00
            - price: "0.41"
              from: 00:00
              to: 05:00
            days:
            - 0
            - 0
          isDessSocDifferent: false
          sellPriceSchedule:
          - schedule:
            - price: "0.41"
              from: 00:00
              to: 05:00
            - price: "0.41"
              from: 00:00
              to: 05:00
            days:
            - 0
            - 0
          - schedule:
            - price: "0.41"
              from: 00:00
              to: 05:00
            - price: "0.41"
              from: 00:00
              to: 05:00
            days:
            - 0
            - 0
          periodicFullChargeDuration: 2
          sellPriceType: 1
          batteryCosts: 0.02
          batteryFlowRestriction: unrestricted
          sellEnergyProviderId: 1
          isOn: true
          batteryPrice: 250
          isGreenModeOn: false
          isPeriodicFullChargeOn: true
          batteryCapacity: 10
          dischargePower: 10
        success: true
        idSite: 0
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        idSite:
          description: The ID of the updated installation.
          type: integer
        data:
          $ref: '#/components/schemas/_installations__idSite__dynamic_ess_settings_get_200_response_data'
    installations_idSite_system_overview_200_response_records_devices_inner_vid:
      description: VE.bus device hardware configuration.
      example:
        enumValue: Single unit
        devicesPerPhase:
          L1: 7
          L2: 1
          L3: 1
      properties:
        enumValue:
          description: Pure enum value.
          enum:
          - Single unit
          - Two units configured as split-phase
          - Two units configured in parallel
          - Three units configured in parallel
          - "three phase system, one unit per phase"
          - "three phase system, two units per phase"
          - "three phase system, three units per phase"
          - "three phase system, four units per phase"
          - "three phase system, five units per phase"
          type: string
        devicesPerPhase:
          $ref: '#/components/schemas/installations_idSite_system_overview_200_response_records_devices_inner_vid_devicesPerPhase'
      required:
      - devicesPerPhase
      - enumValue
    installations_idSite_widgets_GPS_200_response:
      example:
        records:
          data:
            geofence: geofence
            attributes:
              hasOldData: true
              secondsAgo:
                valueFormattedWithUnit: valueFormattedWithUnit
                value: value
            geofenceAlarmActive: geofenceAlarmActive
            geofenceEnabled: geofenceEnabled
          meta:
            key:
              code: code
              description: description
              formatWithUnit: formatWithUnit
              formatWithValueOnly: formatWithValueOnly
        success: true
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        records:
          $ref: '#/components/schemas/installations_idSite_widgets_GPS_200_response_records'
      required:
      - records
      - success
    _installations__idSite__custom_widget_post_request:
      properties:
        name:
          example: abc
          type: string
        onlyAdmins:
          example: 0
          type: integer
        yAxisScaling:
          type: integer
        parameters:
          type: object
        idCustomWidget:
          example: 123
          type: integer
    users_idUser_addsite_200_response_records:
      description: Id of the added site
      example:
        site_id: site_id
      properties:
        site_id:
          description: installation id
          type: string
    users_idUser_installations_200_response_records_inner_extended_inner_anyOf:
      description: A data attribute.
      example:
        code: code
        instance: instance
        textValue: textValue
        dataType: string
        description: description
        formatWithUnit: formatWithUnit
        dataAttributeEnumValues:
        - nameEnum: nameEnum
          valueEnum: 7
        - nameEnum: nameEnum
          valueEnum: 7
        rawValue: rawValue
        dbusServiceType: dbusServiceType
        dbusPath: dbusPath
        formattedValue: formattedValue
        idDataAttribute: 6
        timestamp: timestamp
      properties:
        idDataAttribute:
          description: Data attribute id.
          type: integer
        code:
          description: Data attribute code.
          type: string
        description:
          description: Data attribute description.
          type: string
        formatWithUnit:
          description: Data attribute format string (e.g. "%.2F V").
          type: string
        dataType:
          description: Data attribute type.
          enum:
          - string
          - float
          - enum
          type: string
        textValue:
          description: "If the dataType is 'enum', this contains the corresponding\
            \ text value for that enum."
          type: string
        instance:
          description: The instance to which this attribute data belongs.
          type: string
        timestamp:
          description: The timestamp at which this data was received (UNIX).
          type: string
        dbusServiceType:
          description: Data attribute D-Bus service type.
          type: string
        dbusPath:
          description: Data attribute D-Bus path.
          type: string
        rawValue:
          description: Data attribute last data raw value.
          type: string
        formattedValue:
          description: Data attribute formatted value.
          type: string
        dataAttributeEnumValues:
          description: Possible values for this enum.
          items:
            $ref: '#/components/schemas/users_idUser_installations_200_response_records_inner_extended_inner_anyOf_dataAttributeEnumValues_inner'
          type: array
      required:
      - code
      - dataType
      - dbusPath
      - dbusServiceType
      - description
      - formatWithUnit
      - formattedValue
      - idDataAttribute
      - instance
      - rawValue
      - textValue
      - timestamp
    installations_idSite_stats_200_response_totals:
      oneOf:
      - additionalProperties:
          $ref: '#/components/schemas/installations_idSite_stats_200_response_totals_oneOf_value'
        description: Total for each data attribute.
      - additionalProperties:
          $ref: '#/components/schemas/installations_idSite_stats_200_response_totals_oneOf_value_1'
        description: "List of instances, with the key or index being the instance\
          \ id."
        items:
          description: Totals for a specific instance
          properties:
            totals:
              additionalProperties:
                $ref: '#/components/schemas/installations_idSite_stats_200_response_totals_oneOf_value'
              description: Total for each data attribute.
            instance:
              description: The instance this data belongs to.
              type: integer
          required:
          - instance
          - totals
    installations_idSite_system_overview_200_response_records_devices_inner_lastPowerUpOrRestart:
      anyOf:
      - type: string
      - type: boolean
      description: "Gateway device last power up or restart timestamp, false if no\
        \ timestamp available."
    installations_idSite_system_overview_200_response_records_unconfigured_devices_oneOf_inner:
      description: An unconfigured device.
      properties:
        idSite:
          description: Installation to which this device belongs.
          type: string
        instance:
          description: Instance to which this device belongs.
          type: string
        lastConnection:
          description: Timestamp at which this device was last connected.
          type: string
        name:
          description: Device name.
          type: string
      required:
      - idSite
      - instance
      - lastConnection
      - name
    installations_idSite_clear_alarm_request:
      properties:
        alarmId:
          description: ID of the alarm that needs to be cleared.
          example: 630
          type: number
    users_idUser_accesstokens_list_200_response:
      example:
        success: true
        tokens:
        - expires: expires
          scope: scope
          name: name
          createdOn: createdOn
          idAccessToken: idAccessToken
        - expires: expires
          scope: scope
          name: name
          createdOn: createdOn
          idAccessToken: idAccessToken
      properties:
        success:
          description: Whether the request was successful.
          type: boolean
        tokens:
          description: List of tokens.
          items:
            $ref: '#/components/schemas/users_idUser_accesstokens_list_200_response_tokens_inner'
          type: array
      required:
      - success
      - tokens
    users_me_200_response_user:
      description: The retrieved user information.
      example:
        country: country
        name: name
        id: 0
        email: email
      properties:
        id:
          description: Id of the currently logged in user.
          type: integer
        name:
          description: Name of the currently logged in user.
          type: string
        email:
          description: Email of the currently logged in user.
          type: string
        country:
          description: Country of the currently logged in user.
          type: string
    installations_idSite_widgets_BatterySummary_200_response_records:
      description: Fetched summary.
      example:
        data:
          hasOldData: true
          secondsAgo:
            valueFormattedWithUnit: valueFormattedWithUnit
            value: value
        meta:
          key:
            code: code
            description: description
            formatWithUnit: formatWithUnit
            formatWithValueOnly: formatWithValueOnly
        attributeOrder:
        - 0
        - 0
      properties:
        data:
          $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response_records_data'
        meta:
          additionalProperties:
            $ref: '#/components/schemas/installations_idSite_widgets_GPS_200_response_records_meta_value'
          description: Meta data per data attribute.
        attributeOrder:
          description: Sorting order of data attributes.
          items:
            description: Data attribute id.
            type: integer
          type: array
      required:
      - attributeOrder
      - data
      - meta
    installations_idSite_widgets_GeneratorState_200_response_records_buckets_value:
      description: Bucket for data attribute with this key.
      example:
        resampled: true
        original count: 5
        smallest gap: 2
        resampled count: 5
      properties:
        resampled:
          description: True if the data for this attribute was resampled.
          type: boolean
        original count:
          description: Amount of data points before resampling.
          type: integer
        resampled count:
          description: Amount of data points after resampling.
          type: integer
        smallest gap:
          description: Smallest gap between two states.
          type: integer
      required:
      - resampled
    installations_idSite_widgets_BatterySummary_200_response_records_data:
      additionalProperties:
        $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response_records_data_value'
      description: Data attributes.
      example:
        hasOldData: true
        secondsAgo:
          valueFormattedWithUnit: valueFormattedWithUnit
          value: value
      properties:
        secondsAgo:
          $ref: '#/components/schemas/installations_idSite_widgets_GPS_200_response_records_data_attributes_secondsAgo'
        hasOldData:
          description: "True if the retrieved data is old, based on the key data attribute."
      required:
      - hasOldData
      - secondsAgo
    installations_idSite_widgets_GPS_200_response_records_data_attributes_secondsAgo:
      description: How old this data is.
      example:
        valueFormattedWithUnit: valueFormattedWithUnit
        value: value
      properties:
        value:
          description: Unix timestamp of this data.
        valueFormattedWithUnit:
          description: Timestamp of this data formatted.
      required:
      - value
      - valueFormattedWithUnit
    _installations__idSite__dynamic_ess_settings_get_403_response:
      example:
        success: true
        error_code: error_code
        errors: errors
      properties:
        success:
          description: False as the request was unsuccessful.
          type: boolean
        errors:
          description: User is not authorized for this operation.
          type: string
        error_code:
          description: "The error code, if applicable."
          nullable: true
          type: string
      required:
      - error_code
      - errors
      - success
    installations_idSite_widgets_BatterySummary_200_response:
      example:
        records:
          data:
            hasOldData: true
            secondsAgo:
              valueFormattedWithUnit: valueFormattedWithUnit
              value: value
          meta:
            key:
              code: code
              description: description
              formatWithUnit: formatWithUnit
              formatWithValueOnly: formatWithValueOnly
          attributeOrder:
          - 0
          - 0
        success: true
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        records:
          $ref: '#/components/schemas/installations_idSite_widgets_BatterySummary_200_response_records'
      required:
      - records
      - success
    installations_idSite_settings_request:
      properties:
        description:
          description: Name of the installation
          type: string
        notes:
          description: Any additional notes related to the installation.
          type: string
        phonenumber:
          description: Phone number associated with the installation.
          type: string
        noDataAlarmTimeout:
          description: Timeout for no data alarm.
          type: integer
        noDataAlarmActive:
          description: Indicates if the no data alarm is active.
          type: boolean
        geofence:
          description: Geofence settings for the installation.
          type: object
        geofenceEnabled:
          description: Indicates if geofencing is enabled.
          type: boolean
        alarmMonitoring:
          description: Indicates if alarm monitoring is active.
          type: boolean
        realtimeUpdates:
          description: Indicates if real-time updates are enabled.
          type: boolean
        inverterChargerControl:
          description: Indicates if inverter charger control is active.
          type: boolean
    installations_idSite_settings_200_response:
      example:
        data:
          description: description
        success: true
        idSite: 0
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        idSite:
          description: The ID of the updated installation site.
          type: integer
        data:
          $ref: '#/components/schemas/installations_idSite_settings_200_response_data'
    installations_idSite_widgets_GeneratorState_200_response:
      example:
        records:
          enums:
            key:
              key: enums
          data:
            key:
              "0": "0"
              "1": 0
              "2": 6
          meta:
            key:
              code: code
              description: description
              formatWithUnit: formatWithUnit
              formatWithValueOnly: formatWithValueOnly
          buckets:
            key:
              resampled: true
              original count: 5
              smallest gap: 2
              resampled count: 5
          sort:
            key:
              key: 1
        success: true
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        records:
          $ref: '#/components/schemas/installations_idSite_widgets_GeneratorState_200_response_records'
      required:
      - records
      - success
    auth_login_401_response_errors:
      oneOf:
      - description: Description of the error that occurred.
        type: string
      - additionalProperties:
          description: Description of the error that occurred.
          type: string
        description: Any errors that occurred.
    auth_loginAsDemo_200_response:
      example:
        token: token
      properties:
        token:
          description: The bearer token that was generated.
          nullable: true
          type: string
      required:
      - token
    _installations__idSite__custom_widget_get_200_response:
      example:
        widget: "{}"
        success: true
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        widget:
          description: Custom Widget data received successfully.
          type: object
    installations_idSite_stats_200_response_totals_oneOf_value:
      anyOf:
      - type: number
      - type: boolean
      description: "Total for statistic with this key, or false if there is no data\
        \ for this statistic within the given timeframe."
    _installations__idSite__invite_post_200_response:
      example:
        data:
          idUser: 1
          accessLevel: 1
          idInvite: 0
          created: 1698415280
          idSite: 60
          name: Andrew
          email: andrew@example.com
        success: true
        user: false
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        user:
          example: false
          type: boolean
        data:
          $ref: '#/components/schemas/_installations__idSite__invite_post_200_response_data'
    installations_idSite_system_overview_200_response_records_devices_inner_inputType:
      anyOf:
      - type: string
      - type: boolean
      description: "Digital Input device type, false if not available."
    _installations__idSite__reset_forecasts_get_200_response:
      example:
        last_reset: 0
        success: true
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        last_reset:
          description: "The timestamp of the last reset, or 0 if the forecasts were\
            \ never reset"
          type: integer
    _installations__idSite__reset_forecasts_post_400_response:
      example:
        success: true
      properties:
        success:
          description: "False, because the request couldn't complete"
          type: boolean
    installations_idSite_widgets_Graph_200_response:
      example:
        records:
          data:
            key:
            - - 0.8008281904610115
              - 0.8008281904610115
            - - 0.8008281904610115
              - 0.8008281904610115
          meta:
            key:
              code: code
              description: description
              formatWithUnit: formatWithUnit
              formatWithValueOnly: formatWithValueOnly
        success: true
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        records:
          $ref: '#/components/schemas/installations_idSite_widgets_Graph_200_response_records'
      required:
      - records
      - success
    installations_idSite_widgets_GPS_200_response_records:
      description: Fetched GPS data.
      example:
        data:
          geofence: geofence
          attributes:
            hasOldData: true
            secondsAgo:
              valueFormattedWithUnit: valueFormattedWithUnit
              value: value
          geofenceAlarmActive: geofenceAlarmActive
          geofenceEnabled: geofenceEnabled
        meta:
          key:
            code: code
            description: description
            formatWithUnit: formatWithUnit
            formatWithValueOnly: formatWithValueOnly
      properties:
        data:
          $ref: '#/components/schemas/installations_idSite_widgets_GPS_200_response_records_data'
        meta:
          additionalProperties:
            $ref: '#/components/schemas/installations_idSite_widgets_GPS_200_response_records_meta_value'
          description: Meta data per data attribute.
      required:
      - data
      - meta
    users_idUser_installations_200_response_records_inner_extended_inner:
      anyOf:
      - $ref: '#/components/schemas/users_idUser_installations_200_response_records_inner_extended_inner_anyOf'
      - $ref: '#/components/schemas/users_idUser_installations_200_response_records_inner_extended_inner_anyOf_1'
    _installations__idSite__alarms_put_request:
      properties:
        idDataAttribute:
          example: 630
          type: number
        instance:
          example: 0
          type: number
        AlarmEnabled:
          example: 1
          type: number
        NotifyAfterSeconds:
          example: 60
          type: number
        highAlarm:
          example: 2
          type: number
        highAlarmHysteresis:
          example: 2
          type: number
        lowAlarm:
          example: 0
          type: number
        lowAlarmHysteresis:
          example: 0.2
          type: number
        enumValues:
          example:
          - 0
          - 4
          - 6
          type: list
    _installations__idSite__dynamic_ess_settings_get_404_response:
      example:
        success: true
        error_code: error_code
        errors: errors
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        errors:
          description: Installation with the given ID was not found.
          type: string
        error_code:
          description: "The error code, if applicable."
          nullable: true
          type: string
      required:
      - error_code
      - errors
      - success
    installations_idSite_widgets_GPS_200_response_records_meta_value:
      description: Meta data for data attribute with this key.
      example:
        code: code
        description: description
        formatWithUnit: formatWithUnit
        formatWithValueOnly: formatWithValueOnly
      properties:
        code:
          description: Data attribute code.
          type: string
        description:
          description: Data attribute description.
          type: string
        formatWithValueOnly:
          description: Data attribute format with only the value.
          type: string
        formatWithUnit:
          description: Data attribute format with both value and unit.
          type: string
      required:
      - code
      - description
      - formatWithUnit
    users_idUser_installations_200_response_records_inner_extended_inner_anyOf_1_dataAttributes_inner:
      properties:
        instance:
          description: The instance to which this attribute data belongs.
          type: integer
        dbusServiceType:
          description: Data attribute D-Bus service type.
          type: string
        dbusPath:
          description: Data attribute D-Bus path.
          type: string
      required:
      - dbusPath
      - dbusServiceType
      - instance
    users_idUser_search_200_response:
      example:
        success: true
        count: 1
        results:
          site_name: foobar
          highlight:
            site_name:
            - <em>foo</em>bar
          avatar_url: ""
          site_identifier: abcdef1234
          site_id: 1
      properties:
        success:
          description: True if the request was successful.
          example: true
          type: boolean
        count:
          description: Number of sites found
          example: 1
          type: integer
        results:
          $ref: '#/components/schemas/users_idUser_search_200_response_results'
      required:
      - records
      - success
    users_idUser_accesstokens_revoke_200_response:
      example:
        data:
          removed: 0
        success: true
      properties:
        success:
          description: Whether the request was successful.
          type: boolean
        data:
          $ref: '#/components/schemas/users_idUser_accesstokens_revoke_200_response_data'
      required:
      - data
      - success
    installations_idSite_system_overview_200_response_records_devices_inner:
      example:
        remoteSupport: enabled_online
        instance: 6
        autoUpdate: "On"
        remoteSupportPort: 4
        networkName: networkName
        signalRSSI: signalRSSI
        twoWayCommunication: true
        vmc: installations_idSite_system_overview_200_response_records_devices_inner_vmc
        productName: productName
        lastPowerUpOrRestart: installations_idSite_system_overview_200_response_records_devices_inner_lastPowerUpOrRestart
        machineSerialNumber: machineSerialNumber
        vid:
          enumValue: Single unit
          devicesPerPhase:
            L1: 7
            L2: 1
            L3: 1
        froniusDeviceType: froniusDeviceType
        remoteSupportIp: remoteSupportIp
        tempSensorConnected: true
        signalSNR: signalSNR
        idSite: 0
        connection: connection
        inputType: installations_idSite_system_overview_200_response_records_devices_inner_inputType
        inputState: inputState
        remoteOnLan: remoteOnLan
        firmwareVersion: firmwareVersion
        pL: installations_idSite_system_overview_200_response_records_devices_inner_pL
        class: class
        settings:
        - enumData:
          - nameEnum: nameEnum
            valueEnum: 5
            values:
              key: 5
          - nameEnum: nameEnum
            valueEnum: 5
            values:
              key: 5
          loggedTimestamp: loggedTimestamp
          user_name: user_name
          values:
            key:
              loggedValue: loggedValue
              value: value
          description: description
          idUser: idUser
          idSite: idSite
          loggedValue: 2
          idDataAttribute: idDataAttribute
          attributes:
          - 9
          - 9
          value: 7
          idDeviceType: idDeviceType
          timestamp: timestamp
        - enumData:
          - nameEnum: nameEnum
            valueEnum: 5
            values:
              key: 5
          - nameEnum: nameEnum
            valueEnum: 5
            values:
              key: 5
          loggedTimestamp: loggedTimestamp
          user_name: user_name
          values:
            key:
              loggedValue: loggedValue
              value: value
          description: description
          idUser: idUser
          idSite: idSite
          loggedValue: 2
          idDataAttribute: idDataAttribute
          attributes:
          - 9
          - 9
          value: 7
          idDeviceType: idDeviceType
          timestamp: timestamp
        identifier: identifier
        vncPort: 2
        pdV: pdV
        productId: installations_idSite_system_overview_200_response_records_devices_inner_productId
        customName: customName
        signalFrequency: signalFrequency
        antennaType: Internal
        lastConnection: installations_idSite_system_overview_200_response_records_devices_inner_lastConnection
        loggingInterval: 3
        updateTo: Official release
        remoteSupportEnabled: true
        productCode: productCode
        vncSshAuth: true
        vncStatus: Enabled
        name: name
        idDeviceType: 1
      properties:
        name:
          description: Device name.
          type: string
        customName:
          description: Custom device name.
          nullable: true
          type: string
        productCode:
          description: Device product code.
          type: string
        productName:
          description: Device product name.
          type: string
        idSite:
          description: Installation to which the device belongs.
          type: integer
        firmwareVersion:
          description: Detailed firmware version information.
          type: string
        lastConnection:
          $ref: '#/components/schemas/installations_idSite_system_overview_200_response_records_devices_inner_lastConnection'
        class:
          description: Styling field used for VRM.
          type: string
        connection:
          description: Device connection string.
          type: string
        instance:
          description: Installation instance to which this device belongs.
          type: integer
        idDeviceType:
          description: Device type id.
          type: integer
        settings:
          description: Device settings.
          items:
            $ref: '#/components/schemas/installations_idSite_system_overview_200_response_records_devices_inner_settings_inner'
          type: array
        signalRSSI:
          description: Device formatted signal RSSI.
          type: string
        signalSNR:
          description: Device formatted signal SNR.
          type: string
        signalFrequency:
          description: Device formatted signal frequency.
          type: string
        antennaType:
          description: GlobalLink device antenna switch state.
          enum:
          - Internal
          - External
          type: string
        networkName:
          description: Device network name.
          type: string
        loggingInterval:
          $ref: '#/components/schemas/installations_idSite_system_overview_200_response_records_devices_inner_loggingInterval'
        identifier:
          description: "Gateway device identifier, not visible to demo user or using\
            \ site sharing."
          type: string
        lastPowerUpOrRestart:
          $ref: '#/components/schemas/installations_idSite_system_overview_200_response_records_devices_inner_lastPowerUpOrRestart'
        machineSerialNumber:
          description: Gateway device serial number.
          nullable: true
          type: string
        remoteOnLan:
          description: "Remote on LAN address, only for Venus OS devices."
          type: string
        autoUpdate:
          description: "Auto update setting, only for Venus OS devices."
          enum:
          - "On"
          - "Off"
          - Check
          type: string
        updateTo:
          description: "Maxiumum version to update to, only for Venus OS devices."
          enum:
          - Official release
          - Release-candidate
          - Testing
          - Develop
          type: string
        vncSshAuth:
          description: True if the Venus OS gateway has SSH authentication enabled.
          type: boolean
        vncStatus:
          description: Venus OS gateway internet setting.
          enum:
          - Enabled
          - Disabled
          type: string
        vncPort:
          description: Venus OS gateway remote VNC port.
          type: integer
        twoWayCommunication:
          description: True if the Venus OS gateway has two way communication enabled.
          type: boolean
        remoteSupportEnabled:
          description: True if the Venus OS gateway has remote support enabled.
          type: boolean
        remoteSupportPort:
          $ref: '#/components/schemas/installations_idSite_system_overview_200_response_records_devices_inner_remoteSupportPort'
        remoteSupportIp:
          description: Venus OS gateway remote support connection ip.
          type: string
        remoteSupport:
          description: Venus OS gateway remote support status.
          enum:
          - enabled_online
          - enabled_offline
          - disabled
          type: string
        productId:
          $ref: '#/components/schemas/installations_idSite_system_overview_200_response_records_devices_inner_productId'
        vmc:
          $ref: '#/components/schemas/installations_idSite_system_overview_200_response_records_devices_inner_vmc'
        vid:
          $ref: '#/components/schemas/installations_idSite_system_overview_200_response_records_devices_inner_vid'
        tempSensorConnected:
          description: "IO Extender device temperature sensor connection, true if\
            \ connected."
          type: boolean
        froniusDeviceType:
          description: PV Inverter Fronius device type.
          type: string
        pL:
          $ref: '#/components/schemas/installations_idSite_system_overview_200_response_records_devices_inner_pL'
        pdV:
          description: PV Inverter device data manager version.
          type: string
        inputType:
          $ref: '#/components/schemas/installations_idSite_system_overview_200_response_records_devices_inner_inputType'
        inputState:
          type: string
      required:
      - customName
      - idSite
      - lastConnection
      - name
      - productCode
      - settings
    installations_idSite_diagnostics_200_response_records_dataAttributeEnumValues_inner:
      example:
        nameEnum: nameEnum
        valueEnum: 7
      properties:
        nameEnum:
          description: Enum name.
          type: string
        valueEnum:
          description: Numeric enum value.
          type: integer
      required:
      - nameEnum
      - valueEnum
    _installations__idSite__dynamic_ess_settings_get_200_response_data_buyPriceSchedule_inner:
      example:
        schedule:
        - price: "0.41"
          from: 00:00
          to: 05:00
        - price: "0.41"
          from: 00:00
          to: 05:00
        days:
        - 0
        - 0
      properties:
        days:
          items:
            description: "Weekday, 0-indexed starting on Monday"
            example: 0
            type: number
          type: array
        schedule:
          items:
            $ref: '#/components/schemas/_installations__idSite__dynamic_ess_settings_get_200_response_data_buyPriceSchedule_inner_schedule_inner'
          type: array
      required:
      - days
      - schedule
    installations_idSite_stats_200_response_records_oneOf_value_1:
      description: Statistics for a specific instance
      properties:
        stats:
          additionalProperties:
            $ref: '#/components/schemas/installations_idSite_stats_200_response_records_oneOf_value'
          description: Statistics for each data attribute.
        instance:
          description: The instance this data belongs to.
          type: integer
      required:
      - instance
      - stats
    users_idUser_installations_200_response_records_inner_tags_inner:
      description: A single tag.
      example:
        name: name
        idTag: 1
        automatic: true
      properties:
        idTag:
          description: Tag id.
          type: integer
        name:
          description: Tag name.
          type: string
        automatic:
          description: False this tag was created by a user.
          type: boolean
      required:
      - automatic
      - idTag
      - name
    installations_idSite_overallstats_200_response_records:
      description: Overall statistics grouped by timeframe.
      example:
        week:
          percentages:
            key: 6
          totals:
            key: 0.8008281904610115
        month:
          percentages:
            key: 6
          totals:
            key: 0.8008281904610115
        year:
          percentages:
            key: 6
          totals:
            key: 0.8008281904610115
        today:
          percentages:
            key: 6
          totals:
            key: 0.8008281904610115
      properties:
        year:
          $ref: '#/components/schemas/installations_idSite_overallstats_200_response_records_year'
        month:
          $ref: '#/components/schemas/installations_idSite_overallstats_200_response_records_year'
        week:
          $ref: '#/components/schemas/installations_idSite_overallstats_200_response_records_year'
        today:
          $ref: '#/components/schemas/installations_idSite_overallstats_200_response_records_year'
    users_idUser_installations_200_response_records_inner_view_permissions:
      description: Installation view permissions for the requesting user.
      example:
        twoway: true
        settings: true
        diagnostics: true
        nodered: true
        update_settings: true
        share: true
        vnc: true
        nodered_dash: true
        mqtt_rpc: true
        signalk: true
        exact_location: true
        vebus: true
      properties:
        update_settings:
          description: True if the requesting user can modify general settings.
          type: boolean
        settings:
          description: True if the requesting user can view general settings.
          type: boolean
        diagnostics:
          description: True if the requesting user can view diagnostics.
          type: boolean
        share:
          description: True if the requesting user can modify site share settings.
          type: boolean
        vnc:
          description: True if the requesting user can view VNC.
          type: boolean
        mqtt_rpc:
          description: True if the requesting user can view MQTT RPC.
          type: boolean
        vebus:
          description: True if the requesting user can view VNC.
          type: boolean
        twoway:
          description: True if the installation has two way communication.
          type: boolean
        exact_location:
          description: True if the requesting user can view the exact location.
          type: boolean
        nodered:
          description: True if the installation has Node RED.
          type: boolean
        nodered_dash:
          description: True if the installation has a Node RED Dashboard.
          type: boolean
        signalk:
          description: True if the installation has SignalK.
          type: boolean
      required:
      - diagnostics
      - exact_location
      - mqtt_rpc
      - nodered
      - nodered_dash
      - settings
      - share
      - signalk
      - twoway
      - update_settings
      - vebus
      - vnc
    installations_idSite_system_overview_200_response_records:
      example:
        devices:
        - remoteSupport: enabled_online
          instance: 6
          autoUpdate: "On"
          remoteSupportPort: 4
          networkName: networkName
          signalRSSI: signalRSSI
          twoWayCommunication: true
          vmc: installations_idSite_system_overview_200_response_records_devices_inner_vmc
          productName: productName
          lastPowerUpOrRestart: installations_idSite_system_overview_200_response_records_devices_inner_lastPowerUpOrRestart
          machineSerialNumber: machineSerialNumber
          vid:
            enumValue: Single unit
            devicesPerPhase:
              L1: 7
              L2: 1
              L3: 1
          froniusDeviceType: froniusDeviceType
          remoteSupportIp: remoteSupportIp
          tempSensorConnected: true
          signalSNR: signalSNR
          idSite: 0
          connection: connection
          inputType: installations_idSite_system_overview_200_response_records_devices_inner_inputType
          inputState: inputState
          remoteOnLan: remoteOnLan
          firmwareVersion: firmwareVersion
          pL: installations_idSite_system_overview_200_response_records_devices_inner_pL
          class: class
          settings:
          - enumData:
            - nameEnum: nameEnum
              valueEnum: 5
              values:
                key: 5
            - nameEnum: nameEnum
              valueEnum: 5
              values:
                key: 5
            loggedTimestamp: loggedTimestamp
            user_name: user_name
            values:
              key:
                loggedValue: loggedValue
                value: value
            description: description
            idUser: idUser
            idSite: idSite
            loggedValue: 2
            idDataAttribute: idDataAttribute
            attributes:
            - 9
            - 9
            value: 7
            idDeviceType: idDeviceType
            timestamp: timestamp
          - enumData:
            - nameEnum: nameEnum
              valueEnum: 5
              values:
                key: 5
            - nameEnum: nameEnum
              valueEnum: 5
              values:
                key: 5
            loggedTimestamp: loggedTimestamp
            user_name: user_name
            values:
              key:
                loggedValue: loggedValue
                value: value
            description: description
            idUser: idUser
            idSite: idSite
            loggedValue: 2
            idDataAttribute: idDataAttribute
            attributes:
            - 9
            - 9
            value: 7
            idDeviceType: idDeviceType
            timestamp: timestamp
          identifier: identifier
          vncPort: 2
          pdV: pdV
          productId: installations_idSite_system_overview_200_response_records_devices_inner_productId
          customName: customName
          signalFrequency: signalFrequency
          antennaType: Internal
          lastConnection: installations_idSite_system_overview_200_response_records_devices_inner_lastConnection
          loggingInterval: 3
          updateTo: Official release
          remoteSupportEnabled: true
          productCode: productCode
          vncSshAuth: true
          vncStatus: Enabled
          name: name
          idDeviceType: 1
        - remoteSupport: enabled_online
          instance: 6
          autoUpdate: "On"
          remoteSupportPort: 4
          networkName: networkName
          signalRSSI: signalRSSI
          twoWayCommunication: true
          vmc: installations_idSite_system_overview_200_response_records_devices_inner_vmc
          productName: productName
          lastPowerUpOrRestart: installations_idSite_system_overview_200_response_records_devices_inner_lastPowerUpOrRestart
          machineSerialNumber: machineSerialNumber
          vid:
            enumValue: Single unit
            devicesPerPhase:
              L1: 7
              L2: 1
              L3: 1
          froniusDeviceType: froniusDeviceType
          remoteSupportIp: remoteSupportIp
          tempSensorConnected: true
          signalSNR: signalSNR
          idSite: 0
          connection: connection
          inputType: installations_idSite_system_overview_200_response_records_devices_inner_inputType
          inputState: inputState
          remoteOnLan: remoteOnLan
          firmwareVersion: firmwareVersion
          pL: installations_idSite_system_overview_200_response_records_devices_inner_pL
          class: class
          settings:
          - enumData:
            - nameEnum: nameEnum
              valueEnum: 5
              values:
                key: 5
            - nameEnum: nameEnum
              valueEnum: 5
              values:
                key: 5
            loggedTimestamp: loggedTimestamp
            user_name: user_name
            values:
              key:
                loggedValue: loggedValue
                value: value
            description: description
            idUser: idUser
            idSite: idSite
            loggedValue: 2
            idDataAttribute: idDataAttribute
            attributes:
            - 9
            - 9
            value: 7
            idDeviceType: idDeviceType
            timestamp: timestamp
          - enumData:
            - nameEnum: nameEnum
              valueEnum: 5
              values:
                key: 5
            - nameEnum: nameEnum
              valueEnum: 5
              values:
                key: 5
            loggedTimestamp: loggedTimestamp
            user_name: user_name
            values:
              key:
                loggedValue: loggedValue
                value: value
            description: description
            idUser: idUser
            idSite: idSite
            loggedValue: 2
            idDataAttribute: idDataAttribute
            attributes:
            - 9
            - 9
            value: 7
            idDeviceType: idDeviceType
            timestamp: timestamp
          identifier: identifier
          vncPort: 2
          pdV: pdV
          productId: installations_idSite_system_overview_200_response_records_devices_inner_productId
          customName: customName
          signalFrequency: signalFrequency
          antennaType: Internal
          lastConnection: installations_idSite_system_overview_200_response_records_devices_inner_lastConnection
          loggingInterval: 3
          updateTo: Official release
          remoteSupportEnabled: true
          productCode: productCode
          vncSshAuth: true
          vncStatus: Enabled
          name: name
          idDeviceType: 1
        unconfigured_devices: true
      properties:
        devices:
          description: Configured devices belonging to this installation.
          items:
            $ref: '#/components/schemas/installations_idSite_system_overview_200_response_records_devices_inner'
          type: array
        unconfigured_devices:
          $ref: '#/components/schemas/installations_idSite_system_overview_200_response_records_unconfigured_devices'
      required:
      - devices
      - unconfigured_devices
    _installations__idSite__invite_post_request:
      properties:
        name:
          example: Andrew
          type: string
        email:
          example: andrew@example.com
          type: string
        accessLevel:
          description: "The access level the invited user should have. Value 0 gives\
            \ demo rights, value 1 gives user rights, and value 2 gives admin rights."
          example: 1
          type: number
    installations_idSite_stats_200_response_totals_oneOf_value_1:
      description: Totals for a specific instance
      properties:
        totals:
          additionalProperties:
            $ref: '#/components/schemas/installations_idSite_stats_200_response_totals_oneOf_value'
          description: Total for each data attribute.
        instance:
          description: The instance this data belongs to.
          type: integer
      required:
      - instance
      - totals
    _installations__idSite__alarms_post_200_response:
      example:
        data:
          idDataAttributeLimit: 76571
          instance: 0
          lowAlarm: 0
          NotifyAfterSeconds: 60
          lowAlarmHysteresis: 0.2
          highAlarm: 2
          idDataAttribute: 630
          AlarmEnabled: 1
          highAlarmHysteresis: 2
        success: true
        idSite: 0
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        idSite:
          description: installation ID
          type: integer
        data:
          $ref: '#/components/schemas/_installations__idSite__alarms_post_200_response_data'
    installations_idSite_stats_200_response:
      example:
        records:
          key:
          - - 0.8008281904610115
            - 0.8008281904610115
          - - 0.8008281904610115
            - 0.8008281904610115
        success: true
        totals:
          key: 6.027456183070403
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        records:
          $ref: '#/components/schemas/installations_idSite_stats_200_response_records'
        totals:
          $ref: '#/components/schemas/installations_idSite_stats_200_response_totals'
      required:
      - records
      - success
      - totals
    installationOverviewDownload_200_response:
      example:
        data:
          key:
            Installation name: Installation name
            Battery %: Battery %
            Load: Load
            Temperature: Temperature
            Battery Voltage: Battery Voltage
            Tanks: Tanks
            Grid: Grid
            Last Update: 2000-01-23T04:56:07.000+00:00
            Solar Yield: Solar Yield
            Battery Mode: Battery Mode
            Generator: Generator
        success: true
      properties:
        success:
          description: Indicates if the request was successful.
          type: boolean
        data:
          additionalProperties:
            $ref: '#/components/schemas/installationOverviewDownload_200_response_data_value'
    users_idUser_installations_200_response_records_inner_images_inner:
      description: A single image.
      example:
        imageName: imageName
        idSiteImage: 1
        url: url
      properties:
        idSiteImage:
          description: Image id.
          type: integer
        imageName:
          description: Image name.
          type: string
        url:
          description: Image url.
          type: string
      required:
      - idSiteImage
      - imageName
      - url
    installations_idSite_stats_200_response_records:
      oneOf:
      - additionalProperties:
          $ref: '#/components/schemas/installations_idSite_stats_200_response_records_oneOf_value'
        description: Statistics for each data attribute.
      - additionalProperties:
          $ref: '#/components/schemas/installations_idSite_stats_200_response_records_oneOf_value_1'
        description: "List of instances, with the key or index being the instance\
          \ id."
        items:
          description: Statistics for a specific instance
          properties:
            stats:
              additionalProperties:
                anyOf:
                - description: Data points for statistic with this key.
                  items:
                    description: "An array containing first the timestamp, then the\
                      \ mean value. If available, the minimum and then the maximum\
                      \ will be added to the end of this array."
                    items: {}
                - description: Statistic without data within the given timeframe.
              description: Statistics for each data attribute.
            instance:
              description: The instance this data belongs to.
              type: integer
          required:
          - instance
          - stats
    _installations__idSite__invite_post_200_response_data:
      description: Description of added user
      example:
        idUser: 1
        accessLevel: 1
        idInvite: 0
        created: 1698415280
        idSite: 60
        name: Andrew
        email: andrew@example.com
      properties:
        idUser:
          example: 1
          type: number
        idSite:
          description: ID of the installation.
          example: 60
          type: number
        created:
          description: Timestamp when user was invited.
          example: 1698415280
          type: number
        name:
          example: Andrew
          type: string
        email:
          example: andrew@example.com
          type: string
        accessLevel:
          example: 1
          type: number
        idInvite:
          example: 0
          type: number
    installations_idSite_system_overview_200_response_records_devices_inner_vid_devicesPerPhase:
      description: Units per phase.
      example:
        L1: 7
        L2: 1
        L3: 1
      properties:
        L1:
          type: integer
        L2:
          type: integer
        L3:
          type: integer
      required:
      - L1
      - L2
      - L3
    _installations__idSite__alarms_get_200_response:
      example:
        devices:
        - identifier: 000000a0a000
          instance: 0
          isValid: 1
          customName: customName
          productIdAsReceived: 2
          deviceName: Gateway
          productName: Color Control GX
          lastConnection: 1682696559
          customProductName: Color Control GX
          idSite: 32223
          connection: connection
          secondsAgo: 27
          firmwareVersion: v3.00~29
          idDeviceType: 0
        - identifier: 000000a0a000
          instance: 0
          isValid: 1
          customName: customName
          productIdAsReceived: 2
          deviceName: Gateway
          productName: Color Control GX
          lastConnection: 1682696559
          customProductName: Color Control GX
          idSite: 32223
          connection: connection
          secondsAgo: 27
          firmwareVersion: v3.00~29
          idDeviceType: 0
        success: true
        rateLimited: true
        alarms:
        - idDataAttributeLimit: 76571
          instance: 0
          lowAlarm: 0
          NotifyAfterSeconds: 60
          lowAlarmHysteresis: 0.2
          highAlarm: 2
          idDataAttribute: 630
          AlarmEnabled: 1
          highAlarmHysteresis: 2
        - idDataAttributeLimit: 76571
          instance: 0
          lowAlarm: 0
          NotifyAfterSeconds: 60
          lowAlarmHysteresis: 0.2
          highAlarm: 2
          idDataAttribute: 630
          AlarmEnabled: 1
          highAlarmHysteresis: 2
        attributes:
        - targetTable: logData
          code: bPOR
          dataType: enum
          description: Off reason
          formatWithUnit: '%s'
          idDataAttribute: 1215
          idDeviceType: 33
          enumValues: []
        - targetTable: logData
          code: bPOR
          dataType: enum
          description: Off reason
          formatWithUnit: '%s'
          idDataAttribute: 1215
          idDeviceType: 33
          enumValues: []
        users:
        - idUser: 174862
          receivesReports: 0
          accessLevel: 0
          avatar_url: https://www.gravatar.com/avatar/09821a2342asdf098234asdf8jhg3459?s=80&d=404&r=g
          receivesAlarmNotifications: 0
          idSite: 32223
          name: John Doe
          muted: false
          email: user@email.com
        - idUser: 174862
          receivesReports: 0
          accessLevel: 0
          avatar_url: https://www.gravatar.com/avatar/09821a2342asdf098234asdf8jhg3459?s=80&d=404&r=g
          receivesAlarmNotifications: 0
          idSite: 32223
          name: John Doe
          muted: false
          email: user@email.com
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        rateLimited:
          type: boolean
        alarms:
          description: All alarms that may trigger on this installation
          items:
            $ref: '#/components/schemas/_installations__idSite__alarms_get_200_response_alarms_inner'
          type: array
        devices:
          description: All devices linked to this installation
          items:
            $ref: '#/components/schemas/_installations__idSite__alarms_get_200_response_devices_inner'
          type: array
        users:
          description: "All users for this installation that may or may not receive\
            \ notifications (mail, SMS)"
          items:
            $ref: '#/components/schemas/_installations__idSite__alarms_get_200_response_users_inner'
          type: array
        attributes:
          description: All data attributes that can be used for setting up alarms
          items:
            $ref: '#/components/schemas/_installations__idSite__alarms_get_200_response_attributes_inner'
          type: array
    installations_idSite_widgets_GeneratorState_200_response_records_data_value:
      description: State changes for data attribute with this key.
      example:
        "0": "0"
        "1": 0
        "2": 6
      properties:
        "0":
          description: State value during this timeframe.
          type: string
        "1":
          description: Start of timeframe as a unix timestamp.
          type: integer
        "2":
          description: End of timeframe as a unix timestamp.
          type: integer
      required:
      - "0"
      - "1"
      - "2"
    _installations__idSite__tags_put_200_response:
      example:
        data:
        - "{}"
        - "{}"
        success: true
        idSite: 123
      properties:
        success:
          description: True if the request was successful.
          example: true
          type: boolean
        idSite:
          description: ID of the site where the tag was added.
          example: 123
          type: number
        data:
          description: Information of the new tag.
          items:
            required:
            - source
            - tag
            type: object
            tag:
              type: string
              required: true
              example: Foo
            source:
              type: string
              required: true
              example: user
          type: array
    installations_idSite_widgets_Graph_200_response_records:
      description: Fetched graph data.
      example:
        data:
          key:
          - - 0.8008281904610115
            - 0.8008281904610115
          - - 0.8008281904610115
            - 0.8008281904610115
        meta:
          key:
            code: code
            description: description
            formatWithUnit: formatWithUnit
            formatWithValueOnly: formatWithValueOnly
      properties:
        data:
          additionalProperties:
            description: Data points for data attribute with this key.
            items:
              description: "An array containing first the timestamp, then the mean\
                \ value. If the useMinMax parameter was 1, the minimum and then the\
                \ maximum will be added to the end of this array."
              items:
                type: number
          description: Data points per attribute.
        meta:
          additionalProperties:
            $ref: '#/components/schemas/installations_idSite_widgets_Graph_200_response_records_meta_value'
          description: Meta data per attribute.
      required:
      - data
      - meta
    installations_idSite_diagnostics_200_response_records:
      description: Fetched logging data.
      example:
        instance: 1
        code: code
        Device: Device
        description: description
        formatWithUnit: formatWithUnit
        dataAttributeEnumValues:
        - nameEnum: nameEnum
          valueEnum: 7
        - nameEnum: nameEnum
          valueEnum: 7
        rawValue: installations_idSite_diagnostics_200_response_records_rawValue
        dbusServiceType: dbusServiceType
        idSite: 0
        dbusPath: dbusPath
        formattedValue: formattedValue
        idDataAttribute: 5
        id: 2
        bitmask: 5
        timestamp: 6
      properties:
        idSite:
          description: Installation id.
          type: integer
        timestamp:
          description: Timestamp at which this data was logged.
          type: integer
        Device:
          description: Logging device name.
          type: string
        instance:
          description: Log data instance.
          type: integer
        idDataAttribute:
          description: Log data attribute id.
          type: integer
        description:
          description: Log data description.
          type: string
        formatWithUnit:
          description: Data attribute string format.
          type: string
        dbusServiceType:
          description: Device DBus Service type.
          nullable: true
          type: string
        dbusPath:
          description: Device DBus path.
          nullable: true
          type: string
        code:
          description: Data attribute code.
          type: string
        bitmask:
          description: "1 if the data attribute is a bitmask, else 0."
          type: integer
        formattedValue:
          description: Log data value formatted as a string.
          type: string
        rawValue:
          $ref: '#/components/schemas/installations_idSite_diagnostics_200_response_records_rawValue'
        id:
          description: Log data id.
          type: integer
        dataAttributeEnumValues:
          description: "Data attribute enum values, only for data attributes of type\
            \ enum."
          items:
            $ref: '#/components/schemas/installations_idSite_diagnostics_200_response_records_dataAttributeEnumValues_inner'
          type: array
      required:
      - Device
      - bitmask
      - code
      - dbusPath
      - dbusServiceType
      - description
      - formatWithUnit
      - formattedValue
      - id
      - idDataAttribute
      - idSite
      - instance
      - rawValue
      - timestamp
    installations_idSite_widgets_HoursOfAc_200_response_records:
      description: Fetched hours of AC.
      example:
        data: data
      properties:
        data:
          nullable: true
          type: string
      required:
      - data
    users_idUser_accesstokens_list_200_response_tokens_inner:
      description: "Token details, excluding actual token."
      example:
        expires: expires
        scope: scope
        name: name
        createdOn: createdOn
        idAccessToken: idAccessToken
      properties:
        name:
          description: Token name.
          type: string
        idAccessToken:
          description: Token id.
          type: string
        createdOn:
          description: "Token creation timestamp, unix format."
          type: string
        scope:
          description: Token access scope.
          type: string
        expires:
          description: "Token expiry timestamp, unix format. If null, the token does\
            \ not expire."
          nullable: true
          type: string
      required:
      - createdOn
      - expires
      - idAccessToken
      - name
      - scope
    _installations__idSite__alarms_delete_request:
      properties:
        idDataAttribute:
          example: 630
          type: number
        instance:
          example: 0
          type: number
    users_idUser_search_200_response_results:
      example:
        site_name: foobar
        highlight:
          site_name:
          - <em>foo</em>bar
        avatar_url: ""
        site_identifier: abcdef1234
        site_id: 1
      properties:
        site_id:
          description: installation id
          example: 1
          type: integer
        site_identifier:
          description: site identifier
          example: abcdef1234
          type: string
        site_name:
          description: name of the site
          example: foobar
          type: string
        avatar_url:
          description: avatar_url
          example: ""
          type: string
        highlight:
          description: terms where the searched term is found with highlights
          example:
            site_name:
            - <em>foo</em>bar
          items: {}
          type: array
    installations_idSite_widgets_HoursOfAc_200_response:
      example:
        records:
          data: data
        success: true
      properties:
        success:
          description: True if the request was successful.
          type: boolean
        records:
          $ref: '#/components/schemas/installations_idSite_widgets_HoursOfAc_200_response_records'
      required:
      - records
      - success

