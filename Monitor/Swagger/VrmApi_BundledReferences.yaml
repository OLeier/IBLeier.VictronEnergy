openapi: 3.1.0
info:
  title: VRM API
  version: '2'
  description: >-
    ## Introduction

    This document provides a brief overview of some of the available endpoints
    and their parameters. The API is a REST API, accepting JSON as request body.
    You can use the try-it tool to play around with it, or use software like
    Postman.


    ## Authentication

    Most endpoints require authentication, using a JWT token. This token should
    be placed in the `x-authorization` field in the HTTP header. There are two
    types of tokens.

    - Bearer token. Uses the `Bearer <token_value>` format. This is used when
    logging in to VRM, for example. Can be retrieved from
    [/auth/login](/operations/auth/login) or
    [/auth/loginAsDemo](/operations/auth/loginAsDemo).

    - Access token. Uses the `Token <token_value>` format. This is commonly used
    for third party applications using the VRM API. Can be created using
    [/users/{idUser}/accesstokens/create](/operations/users/idUser/accesstokens/create).


    ## Rate limiting

    Most endpoints are by default rate limited with a rolling window of max 200
    requests, where every 0.33 seconds a request gets removed from the rolling
    window. (so on average maximum of 3 requests per second won't get rate
    limited). There are different types of ratelimiting in VRM. If you receive a
    429 with a JSON response, you can check the Retry-After response header to
    check the amount of seconds you have to wait until retrying.


    ## WARNING & DISCLAIMER

    Whilst publicly available, Victron Energy does not offer support to
    professional customers or end-users that implement features using the here
    documented functionality, except in really specific situations (i.e such as
    a special arrangement with a large OEM customer).


    The recommended method for support on the VRM API is to use the
    Modifications section on Victron Community. This space is frequently visited
    by many people using the API, and other methods of integrating with Victron
    products.

    Direct company support is only offered on a limited basis via your Victron
    representative.
servers:
  - url: 'https://vrmapi.victronenergy.com/v2'
paths:
  /auth/login:
    post:
      operationId: auth/login
      summary: Log in using an e-mail and password
      description: >-
        Used to authenticate as a user to access authenticated routes. 2FA token
        must be included if 2FA is enabled on the account. Returns a bearer
        token (JWT).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  description: User e-mail
                  type: string
                password:
                  description: User password
                  type: string
                sms_token:
                  description: 2FA code (if 2FA is enabled for the user)
                  type: string
                remember_me:
                  description: Get a long-lived token which stays valid for longer
                  type: boolean
              required:
                - username
                - password
            examples:
              normal_user:
                summary: A regular user without 2FA.
                value:
                  username: john@example.com
                  password: somepassword
              two_factor_user:
                summary: >-
                  A user using 2FA, also requesting a token with a longer
                  expiration time.
                value:
                  username: john_2fa@example.com
                  password: somepassword
                  sms_token: 123456
                  remember_me: true
      responses:
        '200':
          description: 'Login successful, returns bearer token (JWT)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    description: The bearer token that was generated.
                    type:
                      - 'null'
                      - string
                  idUser:
                    description: The id of the user for which the token was generated.
                    type: integer
                  verification_mode:
                    description: Which mode is used for verfying a login for this account.
                    type: string
                  verification_sent:
                    description: 'Whether a verification code was sent, for 2FA.'
                    type: boolean
                required:
                  - token
                  - idUser
                  - verification_mode
                  - verification_sent
        '401':
          description: 'Login unsuccessful, returns details about the error(s)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: Whether the request was successful.
                    type: boolean
                  errors:
                    oneOf:
                      - description: Description of the error that occurred.
                        type: string
                      - description: Any errors that occurred.
                        type: object
                        additionalProperties:
                          description: Description of the error that occurred.
                          type: string
                  error_code:
                    description: 'The error code, if applicable.'
                    type:
                      - 'null'
                      - string
                required:
                  - success
                  - errors
                  - error_code
  /auth/loginAsDemo:
    get:
      operationId: auth/loginAsDemo
      summary: Log in as the demo account
      description: >-
        Used to authenticate as the demo account. The demo user has limited
        access to a few demo installations and endpoints, intended for
        demonstration usage. Returns a bearer token (JWT).
      responses:
        '200':
          description: 'Login successful, returns bearer token (JWT).'
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    description: The bearer token that was generated.
                    type:
                      - 'null'
                      - string
                required:
                  - token
        '400':
          description: 'Login unsuccessful, returns details about the error(s).'
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  /auth/logout:
    get:
      operationId: auth/logout
      summary: Log out using a token
      description: >-
        Used to log out a user. The token provided in the authorization header
        will be blacklisted from the server and can no longer be used for
        authentication purposes.
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
      responses:
        '200':
          description: Logout successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    description: An empty string.
                    type:
                      - string
        4xx:
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  '/users/{idUser}/addsite':
    post:
      operationId: users/idUser/addsite
      summary: Adds a new site
      description: >-
        Adds a new site to the user. An email will be sent when the procedure is
        done.
      tags:
        - Users
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                installation_identifier:
                  description: Installation identifier.
                  type: string
              required:
                - installation_identifier
      responses:
        '200':
          description: Site added successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  records:
                    description: Id of the added site
                    type: object
                    properties:
                      site_id:
                        type: string
                        description: installation id
                required:
                  - success
                  - records
        4xx:
          description: The site desired could not be added.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  '/users/{idUser}/installations':
    get:
      operationId: users/idUser/installations
      summary: All installations/sites for a given user
      description: >-
        Retrieves a list of installations to which the user is connected. Normal
        users can only retrieve their own installations, dealers only those of
        their linked customers and admins those of all users.
      tags:
        - Users
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idUser
          description: User id.
          in: path
          required: true
          schema:
            type: string
        - name: extended
          description: 'If 1, include all optional response values.'
          in: query
          required: false
          schema:
            type: integer
        - name: idSite
          description: Id of the site we want to retrieve.
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved installations.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  records:
                    description: 'The retrieved installations, empty if none.'
                    type: array
                    items:
                      type: object
                      description: A single installation.
                      properties:
                        idSite:
                          type: integer
                        accessLevel:
                          description: The access level of the requesting user.
                          type: integer
                        owner:
                          description: True if the requesting user owns this installation.
                          type: boolean
                        is_admin:
                          description: >-
                            True if the requesting user is an admin for this
                            installation.
                          type: boolean
                        name:
                          type: string
                        identifier:
                          description: Installation identifier.
                          type: string
                        idUser:
                          description: Installation owner id.
                          type: integer
                        pvMax:
                          description: Maximum PV for this installation.
                          type: integer
                        timezone:
                          description: Installation local timezone.
                          type: string
                        phonenumber:
                          description: Installation phone number.
                          type:
                            - 'null'
                            - string
                        notes:
                          description: Installation notes.
                          type:
                            - 'null'
                            - string
                        geofence:
                          description: 'Installation geofence, in json format.'
                          type:
                            - 'null'
                            - string
                        geofenceEnabled:
                          description: True if the geofence is enabled.
                          type: boolean
                        realtimeUpdates:
                          description: True if realtime updates are enabled.
                          type: boolean
                        hasMains:
                          description: '1 if the installation has mains, else 0.'
                          type: integer
                        hasGenerator:
                          description: '1 if the installation has a generator, else 0.'
                          type: integer
                        noDataAlarmTimeout:
                          description: >-
                            How many seconds after no installation data is
                            received the alarm should go off.
                          type:
                            - 'null'
                            - integer
                        alarmMonitoring:
                          description: >-
                            If alarms and warnings should be sent. When 0
                            nothing is sent out, when 1 only alarms and when 2
                            both alarms and warnings.
                          type: integer
                        invalidVRMAuthTokenUsedInLogRequest:
                          description: '1 if an invalid token was used for logging, else 0.'
                          type: integer
                        syscreated:
                          description: 'Installation creation timestamp, UNIX format.'
                          type: integer
                        shared:
                          description: True if sitesharing is enabled.
                          type: boolean
                        device_icon:
                          description: Installation icon.
                          type: string
                        alarm:
                          description: True if there is an active alarm.
                          type: boolean
                        last_timestamp:
                          description: >-
                            Timestamp of the most recently received data (UNIX
                            format).
                          type: integer
                        current_time:
                          description: >-
                            Local time for the installation in 24h format
                            (hh:mm).
                          type: string
                        timezone_offset:
                          description: How many seconds the installation is ahead of UTC.
                          type: integer
                        demo_mode:
                          description: True if the installation is in demo mode.
                          type: boolean
                        mqtt_webhost:
                          description: 'Installation MQTT webhost, as a URL.'
                          type: string
                        mqtt_host:
                          description: 'Installation MQTT host, as a URL.'
                          type: string
                        high_workload:
                          description: >-
                            True if the D-Bus round trip time is higher than the
                            threshold.
                          type: boolean
                        current_alarms:
                          description: A list of the active alarms for this installation.
                          type: array
                          items:
                            description: The description of the alarm.
                            type: string
                        num_alarms:
                          description: The amount of active alarms.
                          type: integer
                        avatar_url:
                          description: The url for this site's avatar.
                          type:
                            - 'null'
                            - string
                        tags:
                          description: Installation tags.
                          type: array
                          items:
                            description: A single tag.
                            type: object
                            properties:
                              idTag:
                                description: Tag id.
                                type: integer
                              name:
                                description: Tag name.
                                type: string
                              automatic:
                                description: False this tag was created by a user.
                                type: boolean
                            required:
                              - idTag
                              - name
                              - automatic
                        images:
                          description: Installation images.
                          type: array
                          items:
                            description: A single image.
                            type: object
                            properties:
                              idSiteImage:
                                description: Image id.
                                type: integer
                              imageName:
                                description: Image name.
                                type: string
                              url:
                                description: Image url.
                                type: string
                            required:
                              - idSiteImage
                              - imageName
                              - url
                        view_permissions:
                          description: >-
                            Installation view permissions for the requesting
                            user.
                          type: object
                          properties:
                            update_settings:
                              description: >-
                                True if the requesting user can modify general
                                settings.
                              type: boolean
                            settings:
                              description: >-
                                True if the requesting user can view general
                                settings.
                              type: boolean
                            diagnostics:
                              description: >-
                                True if the requesting user can view
                                diagnostics.
                              type: boolean
                            share:
                              description: >-
                                True if the requesting user can modify site
                                share settings.
                              type: boolean
                            vnc:
                              description: True if the requesting user can view VNC.
                              type: boolean
                            mqtt_rpc:
                              description: True if the requesting user can view MQTT RPC.
                              type: boolean
                            vebus:
                              description: True if the requesting user can view VNC.
                              type: boolean
                            twoway:
                              description: >-
                                True if the installation has two way
                                communication.
                              type: boolean
                            exact_location:
                              description: >-
                                True if the requesting user can view the exact
                                location.
                              type: boolean
                            nodered:
                              description: True if the installation has Node RED.
                              type: boolean
                            nodered_dash:
                              description: >-
                                True if the installation has a Node RED
                                Dashboard.
                              type: boolean
                            signalk:
                              description: True if the installation has SignalK.
                              type: boolean
                          required:
                            - update_settings
                            - settings
                            - diagnostics
                            - share
                            - vnc
                            - mqtt_rpc
                            - vebus
                            - twoway
                            - exact_location
                            - nodered
                            - nodered_dash
                            - signalk
                        extended:
                          description: Extended data about this installation.
                          type: array
                          items:
                            anyOf:
                              - description: A data attribute.
                                type: object
                                properties:
                                  idDataAttribute:
                                    description: Data attribute id.
                                    type: integer
                                  code:
                                    description: Data attribute code.
                                    type: string
                                  description:
                                    description: Data attribute description.
                                    type: string
                                  formatWithUnit:
                                    description: >-
                                      Data attribute format string (e.g. "%.2F
                                      V").
                                    type: string
                                  dataType:
                                    description: Data attribute type.
                                    type: string
                                    enum:
                                      - string
                                      - float
                                      - enum
                                  textValue:
                                    description: >-
                                      If the dataType is 'enum', this contains
                                      the corresponding text value for that
                                      enum.
                                    type: string
                                  instance:
                                    description: >-
                                      The instance to which this attribute data
                                      belongs.
                                    type: string
                                  timestamp:
                                    description: >-
                                      The timestamp at which this data was
                                      received (UNIX).
                                    type: string
                                  dbusServiceType:
                                    description: Data attribute D-Bus service type.
                                    type: string
                                  dbusPath:
                                    description: Data attribute D-Bus path.
                                    type: string
                                  rawValue:
                                    description: Data attribute last data raw value.
                                    type: string
                                  formattedValue:
                                    description: Data attribute formatted value.
                                    type: string
                                  dataAttributeEnumValues:
                                    description: Possible values for this enum.
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        nameEnum:
                                          type: string
                                        valueEnum:
                                          type: integer
                                      required:
                                        - nameEnum
                                        - valueEnum
                                required:
                                  - idDataAttribute
                                  - code
                                  - description
                                  - formatWithUnit
                                  - dataType
                                  - textValue
                                  - instance
                                  - timestamp
                                  - dbusServiceType
                                  - dbusPath
                                  - rawValue
                                  - formattedValue
                              - description: Site summary data.
                                type: object
                                properties:
                                  code:
                                    description: Summary data code.
                                    type: string
                                  description:
                                    description: Summary data description.
                                    type: string
                                  rawValue:
                                    description: Summary data last raw value.
                                    type:
                                      - 'null'
                                      - number
                                  formattedValue:
                                    description: Summary data formatted value.
                                    type: string
                                  textValue:
                                    description: >-
                                      If the dataType is 'enum', this contains
                                      the corresponding text value for that
                                      enum.
                                    type:
                                      - 'null'
                                      - string
                                  formatWithUnit:
                                    description: >-
                                      Summary data format string (e.g. "%.2F
                                      V").
                                    type: string
                                  idDataAttribute:
                                    description: Corresponding data attribute id.
                                    type:
                                      - 'null'
                                      - integer
                                  dataAttributes:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        instance:
                                          description: >-
                                            The instance to which this attribute
                                            data belongs.
                                          type: integer
                                        dbusServiceType:
                                          description: Data attribute D-Bus service type.
                                          type: string
                                        dbusPath:
                                          description: Data attribute D-Bus path.
                                          type: string
                                      required:
                                        - instance
                                        - dbusServiceType
                                        - dbusPath
                                required:
                                  - code
                                  - dataAttributes
                                  - description
                                  - formattedValue
                                  - formatWithUnit
                                  - rawValue
                                  - textValue
                                  - idDataAttribute
                      required:
                        - idSite
                        - accessLevel
                        - owner
                        - is_admin
                        - name
                        - identifier
                        - idUser
                        - pvMax
                        - timezone
                        - phonenumber
                        - notes
                        - geofence
                        - geofenceEnabled
                        - realtimeUpdates
                        - hasMains
                        - hasGenerator
                        - noDataAlarmTimeout
                        - alarmMonitoring
                        - invalidVRMAuthTokenUsedInLogRequest
                        - syscreated
                        - shared
                        - device_icon
                required:
                  - success
                  - records
        '403':
          description: Not authorized to view installations for this user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  errors:
                    description: Any errors that occurred.
                    type: string
                  error_code:
                    description: 'The error code, if applicable.'
                    type:
                      - 'null'
                      - string
                required:
                  - success
                  - errors
                  - error_code
  '/users/{idUser}/accesstokens/create':
    post:
      operationId: users/idUser/accesstokens/create
      summary: Create an access token for a user.
      description: >-
        Users can create personal access tokens for usage with external
        services. These tokens can be used as an alternative way of
        authentication against the VRM API. The token is returned, after which
        it is not possible to ever retrieve it again.
      tags:
        - Users
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idUser
          description: User id.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: 'Access token name, must not already exist for this user.'
                  type: string
                expiry:
                  description: Expiry timestamp
                  type: integer
              required:
                - name
            examples:
              createToken:
                summary: Creating a new token.
                value:
                  name: MyNewToken
              createExpiringToken:
                summary: Creating a new token.
                value:
                  name: MyNewToken
                  expiry: 1685992714
      responses:
        '200':
          description: Token created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: Whether the request was successful.
                    type: boolean
                  token:
                    description: Generated access token.
                    type: integer
                  idAccessToken:
                    description: Access token id.
                    type: string
                required:
                  - success
                  - token
                  - idAccessToken
        4xx:
          description: 'Token creation failed, returns details about the error(s)'
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  '/users/{idUser}/accesstokens/list':
    get:
      operationId: users/idUser/accesstokens/list
      summary: List all access tokens for a user.
      description: >-
        Retrieves a list of all access token details for this user, excluding
        the actual token itself. Always returns tokens for the requesting user,
        never for another, regardless of account type.
      tags:
        - Users
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idUser
          description: User id.
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Tokens retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: Whether the request was successful.
                    type: boolean
                  tokens:
                    description: List of tokens.
                    type: array
                    items:
                      description: 'Token details, excluding actual token.'
                      type: object
                      properties:
                        name:
                          description: Token name.
                          type: string
                        idAccessToken:
                          description: Token id.
                          type: string
                        createdOn:
                          description: 'Token creation timestamp, unix format.'
                          type: string
                        scope:
                          description: Token access scope.
                          type: string
                        expires:
                          description: >-
                            Token expiry timestamp, unix format. If null, the
                            token does not expire.
                          type:
                            - 'null'
                            - string
                      required:
                        - name
                        - idAccessToken
                        - createdOn
                        - scope
                        - expires
                required:
                  - success
                  - tokens
        4xx:
          description: 'Token retrieval failed, returns details about the error(s)'
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  '/users/{idUser}/accesstokens/{idAccessToken}/revoke':
    get:
      operationId: users/idUser/accesstokens/revoke
      summary: Revoke an access token for a user.
      description: Revokes one or more personal access token for a user.
      tags:
        - Users
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idUser
          description: User id.
          in: path
          required: true
          schema:
            type: string
        - name: idAccessToken
          description: 'Access token to revoke, or wildcard ''*'' to revoke all.'
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Token(s) revoked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: Whether the request was successful.
                    type: boolean
                  data:
                    type: object
                    properties:
                      removed:
                        description: The amount of token that have been revoked.
                        type: integer
                    required:
                      - removed
                required:
                  - success
                  - data
        4xx:
          description: 'Token creation failed, returns details about the error(s)'
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  '/users/{idUser}/get-site-id':
    post:
      operationId: users/idUser/get-site-id
      summary: Returns site id given site identifier
      description: >-
        Retrieves the site id from user's installations given site identifier.
        Admins can retrieve any installation.
      tags:
        - Users
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                installation_identifier:
                  description: Installation identifier.
                  type: string
              required:
                - installation_identifier
      responses:
        '200':
          description: Successfully retrieved installation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  records:
                    description: Id of the retrieved site
                    type: object
                    properties:
                      site_id:
                        type: string
                        description: installation id
                required:
                  - success
                  - records
        4xx:
          description: 'Token creation failed, returns details about the error(s)'
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  /users/me:
    get:
      operationId: users/me
      summary: Basic information about logged in user
      description: >-
        Retrieves id, name, email and country of the user that is currently
        logged in
      tags:
        - Users
      parameters:
        - name: x-authorization
          in: header
          description: The bearer token to use.
          required: true
          schema:
            type: string
          examples:
            bearer:
              summary: Authenticate with a bearer token.
              value: Bearer <bearer_token_value>
            token:
              summary: Authenticate with a access token.
              value: Token <token_value>
      responses:
        '200':
          description: Succesfully retrieved information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  user:
                    description: The retrieved user information.
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Id of the currently logged in user.
                      name:
                        type: string
                        description: Name of the currently logged in user.
                      email:
                        type: string
                        description: Email of the currently logged in user.
                      country:
                        type: string
                        description: Country of the currently logged in user.
        '401':
          description: User is not logged in (or no bearer token).
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  errors:
                    description: Any errors that occurred.
                    type: string
                  error_code:
                    description: 'The error code, if applicable.'
                    type:
                      - 'null'
                      - string
                required:
                  - success
                  - errors
                  - error_code
  '/users/{idUser}/search':
    get:
      operationId: users/idUser/search
      summary: Search
      description: >-
        Search for sites that you have access to based on ID of the site, email
        of a user, name of a user, serial number of a device attached to a site,
        site identifier or email domain
      tags:
        - Users
      parameters:
        - name: query
          in: query
          description: Search term to filter results.
          required: true
          schema:
            type: string
          example: foo
      responses:
        '200':
          description: Query was successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                    example: true
                  count:
                    description: Number of sites found
                    type: integer
                    example: 1
                  results:
                    properties:
                      site_id:
                        type: integer
                        description: installation id
                        example: 1
                      site_identifier:
                        type: string
                        description: site identifier
                        example: abcdef1234
                      site_name:
                        type: string
                        description: name of the site
                        example: foobar
                      avatar_url:
                        type: string
                        description: avatar_url
                        example: ''
                      highlight:
                        type: array
                        description: terms where the searched term is found with highlights
                        example:
                          site_name:
                            - <em>foo</em>bar
                required:
                  - success
                  - records
        '400':
          description: Invalid query or missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error_code:
                    type: string
                    example: empty_search
                  error:
                    type: array
                    example:
                      - No search string has been provided.
  '/installations/{idSite}/alarms':
    get:
      summary: Get Alarms
      description: >-
        Gets all information about alarms for a specific installation. Next to
        that, it also receives all data required to create new alarms
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation ID
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: >-
            Retrieves all alarms from an installation, eligible users for those
            alarms and available data attributes.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  rateLimited:
                    description: null
                    type: boolean
                  alarms:
                    description: All alarms that may trigger on this installation
                    type: array
                    items:
                      $ref: >-
                        #/paths/~1installations~1%7BidSite%7D~1alarms/components/schemas/FloatAlarm
                  devices:
                    description: All devices linked to this installation
                    type: array
                    items:
                      $ref: >-
                        #/paths/~1installations~1%7BidSite%7D~1alarms/components/schemas/Device
                  users:
                    description: >-
                      All users for this installation that may or may not
                      receive notifications (mail, SMS)
                    type: array
                    items:
                      $ref: >-
                        #/paths/~1installations~1%7BidSite%7D~1alarms/components/schemas/User
                  attributes:
                    description: All data attributes that can be used for setting up alarms
                    type: array
                    items:
                      $ref: >-
                        #/paths/~1installations~1%7BidSite%7D~1alarms/components/schemas/Attribute
        4xx:
          description: Alarms not available
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
    post:
      summary: Add Alarm
      description: >-
        Adds an alarm to an installation. Note that there are two different
        types of alarms; alarms on enums and alarms on numbers (floats). Note
        that for floats the AlarmEnabled and NotifyAfterSeconds use PascalCase
        and for enums they use camelCase. You'll get a warning if the wrong case
        is used.
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation ID
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idDataAttribute:
                  type: number
                  required: true
                  example: 630
                instance:
                  type: number
                  required: true
                  example: 0
                AlarmEnabled:
                  type: number
                  required: true
                  example: 1
                NotifyAfterSeconds:
                  type: number
                  required: true
                  example: 60
                highAlarm:
                  type: number
                  example: 2
                highAlarmHysteresis:
                  type: number
                  example: 2
                lowAlarm:
                  type: number
                  example: 0
                lowAlarmHysteresis:
                  type: number
                  example: 0.2
                enumValues:
                  type: list
                  example:
                    - 0
                    - 4
                    - 6
            examples:
              float:
                summary: An alarm for numbers
                value:
                  AlarmEnabled: 1
                  NotifyAfterSeconds: 60
                  highAlarm: 2
                  highAlarmHysteresis: 2
                  idDataAttribute: 630
                  instance: 0
                  lowAlarm: 0
                  lowAlarmHysteresis: 0.2
              enum:
                summary: An alarm for numbers
                value:
                  instance: 0
                  idDataAttribute: 185
                  enumValues:
                    - 0
                  notifyAfterSeconds: 3600
                  alarmEnabled: 1
      responses:
        '200':
          description: Successfully added an alarm.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  idSite:
                    description: installation ID
                    type: integer
                  data:
                    description: Description of added alarm
                    type: object
                    properties:
                      AlarmEnabled:
                        type: number
                        example: 1
                      NotifyAfterSeconds:
                        type: number
                        example: 60
                      highAlarm:
                        type: number
                        example: 2
                      highAlarmHysteresis:
                        type: number
                        example: 2
                      idDataAttribute:
                        type: number
                        example: 630
                      instance:
                        type: number
                        example: 0
                      lowAlarm:
                        type: number
                        example: 0
                      lowAlarmHysteresis:
                        type: number
                        example: 0.2
                      idDataAttributeLimit:
                        type: integer
                        example: 76571
    delete:
      summary: Delete Alarm
      description: Deletes an alarm already linked to an installation.
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation ID
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idDataAttribute:
                  type: number
                  required: true
                  example: 630
                instance:
                  type: number
                  required: true
                  example: 0
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  idSite:
                    description: installation ID
                    type: integer
        4xx:
          description: Could not delete alarm
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
    put:
      summary: Edit Alarm
      description: >-
        Edits an alarm already linked to an installation. Note that there are
        two different types of alarms; alarms on enums and alarms on numbers
        (floats). Note that for floats the AlarmEnabled and NotifyAfterSeconds
        use PascalCase and for enums they use camelCase. You'll get a warning if
        the wrong case is used.
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation ID
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idDataAttribute:
                  type: number
                  required: true
                  example: 630
                instance:
                  type: number
                  required: true
                  example: 0
                AlarmEnabled:
                  type: number
                  required: true
                  example: 1
                NotifyAfterSeconds:
                  type: number
                  required: true
                  example: 60
                highAlarm:
                  type: number
                  example: 2
                highAlarmHysteresis:
                  type: number
                  example: 2
                lowAlarm:
                  type: number
                  example: 0
                lowAlarmHysteresis:
                  type: number
                  example: 0.2
                enumValues:
                  type: list
                  example:
                    - 0
                    - 4
                    - 6
            examples:
              float:
                summary: An alarm for numbers
                value:
                  AlarmEnabled: 1
                  NotifyAfterSeconds: 60
                  highAlarm: 2
                  highAlarmHysteresis: 2
                  idDataAttribute: 630
                  instance: 0
                  lowAlarm: 0
                  lowAlarmHysteresis: 0.2
              enum:
                summary: An alarm for numbers
                value:
                  instance: 0
                  idDataAttribute: 185
                  enumValues:
                    - 0
                  notifyAfterSeconds: 3600
                  alarmEnabled: 1
      responses:
        '200':
          description: Successfully added an alarm.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  idSite:
                    description: installation ID
                    type: integer
                  data:
                    description: Description of added alarm
                    type: object
                    properties:
                      AlarmEnabled:
                        type: number
                        example: 1
                      NotifyAfterSeconds:
                        type: number
                        example: 60
                      highAlarm:
                        type: number
                        example: 2
                      highAlarmHysteresis:
                        type: number
                        example: 2
                      idDataAttribute:
                        type: number
                        example: 630
                      instance:
                        type: number
                        example: 0
                      lowAlarm:
                        type: number
                        example: 0
                      lowAlarmHysteresis:
                        type: number
                        example: 0.2
                      idDataAttributeLimit:
                        type: integer
        4xx:
          description: Alarm not added
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
    components:
      schemas:
        Attribute:
          type: object
          properties:
            idDataAttribute:
              type: number
              example: 1215
            code:
              type: string
              example: bPOR
            description:
              type: string
              example: Off reason
            targetTable:
              type: string
              example: logData
            idDeviceType:
              type: int
              example: 33
            formatWithUnit:
              type: string
              example: '%s'
            dataType:
              type: string
              example: enum
            enumValues:
              type: string
              example: []
        FloatAlarm:
          type: object
          properties:
            AlarmEnabled:
              type: number
              example: 1
            NotifyAfterSeconds:
              type: number
              example: 60
            highAlarm:
              type: number
              example: 2
            highAlarmHysteresis:
              type: number
              example: 2
            idDataAttribute:
              type: number
              example: 630
            instance:
              type: number
              example: 0
            lowAlarm:
              type: number
              example: 0
            lowAlarmHysteresis:
              type: number
              example: 0.2
            idDataAttributeLimit:
              type: integer
              example: 76571
        User:
          type: object
          properties:
            idUser:
              type: integer
              example: 174862
            idSite:
              type: integer
              example: 32223
            accessLevel:
              type: integer
              example: 0
            receivesAlarmNotifications:
              type: integer
              example: 0
            receivesReports:
              type: integer
              example: 0
            email:
              type: string
              example: user@email.com
            name:
              type: string
              example: John Doe
            avatar_url:
              type: string
              example: >-
                https://www.gravatar.com/avatar/09821a2342asdf098234asdf8jhg3459?s=80&d=404&r=g
            muted:
              type: boolean
              example: false
        Device:
          type: object
          properties:
            idSite:
              type: integer
              example: 32223
            instance:
              type: integer
              example: 0
            lastConnection:
              type: integer
              example: 1682696559
            secondsAgo:
              type: integer
              example: 27
            isValid:
              type: integer
              example: 1
            idDeviceType:
              type: integer
              example: 0
            deviceName:
              type: string
              example: Gateway
            productIdAsReceived:
              type: integer
              example: 2
            productName:
              type: string
              example: Color Control GX
            customProductName:
              type: string
              example: Color Control GX
            firmwareVersion:
              type: string
              example: v3.00~29
            connection:
              type: string
              example: null
            customName:
              type: string
              example: null
            identifier:
              type: string
              example: 000000a0a000
  '/installations/{idSite}/clear-alarm':
    post:
      operationId: installations/idSite/clear-alarm
      summary: Clear alarm
      description: Clears alarms and marks them as cleared by the user in Event Logs.
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: ID of the installation.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                alarmId:
                  description: ID of the alarm that needs to be cleared.
                  type: number
                  required: true
                  example: 630
      responses:
        '200':
          description: Alarm cleared successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  idSite:
                    description: ID of the installation.
                    type: string
                required:
                  - success
                  - idSite
        4xx:
          description: Request unsuccessful.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  '/installations/{idSite}/system-overview':
    get:
      operationId: installations/idSite/system-overview
      summary: Connected devices for a given installation
      description: >-
        Retrieves a list of devices to which are connected to this installation.
        This endpoint is only accessible to users with access to the
        installation.
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved devices
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  records:
                    type: object
                    properties:
                      devices:
                        description: Configured devices belonging to this installation.
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              description: Device name.
                              type: string
                            customName:
                              description: Custom device name.
                              type:
                                - 'null'
                                - string
                            productCode:
                              description: Device product code.
                              type: string
                            productName:
                              description: Device product name.
                              type: string
                            idSite:
                              description: Installation to which the device belongs.
                              type: integer
                            firmwareVersion:
                              description: Detailed firmware version information.
                              type: string
                            lastConnection:
                              description: >-
                                Device last connected timestamp, false if no
                                timestamp available.
                              type:
                                - string
                                - boolean
                            class:
                              description: Styling field used for VRM.
                              type: string
                            connection:
                              description: Device connection string.
                              type: string
                            instance:
                              description: >-
                                Installation instance to which this device
                                belongs.
                              type: integer
                            idDeviceType:
                              description: Device type id.
                              type: integer
                            settings:
                              description: Device settings.
                              type: array
                              items:
                                type: object
                                description: A setting for this device.
                                properties:
                                  description:
                                    description: Setting description.
                                    type: string
                                  enumData:
                                    description: Possible enums.
                                    type: array
                                    items:
                                      description: A single enum value.
                                      type: object
                                      properties:
                                        nameEnum:
                                          description: Enum name.
                                          type: string
                                        valueEnum:
                                          description: Enum value.
                                          type: integer
                                        values:
                                          description: >-
                                            Underlying values corresponding to this
                                            value, only for compounded settings.
                                          type: object
                                          additionalProperties:
                                            description: >-
                                              Key value pair with the data attribute
                                              id as key.
                                            type: integer
                                      required:
                                        - nameEnum
                                        - valueEnum
                                  idDataAttribute:
                                    description: >-
                                      The numeric data attribute id for this
                                      setting, or a description for compound
                                      settings.
                                    type: string
                                  idDeviceType:
                                    description: Device type id.
                                    type: string
                                  idSite:
                                    description: Installation id.
                                    type: string
                                  idUser:
                                    description: User id.
                                    type:
                                      - 'null'
                                      - string
                                  loggedTimestamp:
                                    description: >-
                                      Timestamp at which this setting was
                                      logged.
                                    type: string
                                  loggedValue:
                                    description: Value logged for this setting.
                                    type: integer
                                  timestamp:
                                    description: >-
                                      Timestamp at which this setting was
                                      queued.
                                    type:
                                      - 'null'
                                      - string
                                  user_name:
                                    description: User name.
                                    type:
                                      - 'null'
                                      - string
                                  value:
                                    description: Current value for this setting.
                                    type:
                                      - 'null'
                                      - integer
                                  attributes:
                                    description: >-
                                      Underlying data attributes, only for
                                      compound settings.
                                    type: array
                                    items:
                                      description: Data attribute id.
                                      type: integer
                                  values:
                                    description: >-
                                      Underlying values corresponding to this
                                      value, only for compounded settings.
                                    type: object
                                    additionalProperties:
                                      description: >-
                                        Key value pair with the data attribute
                                        id as key.
                                      type: object
                                      properties:
                                        loggedValue:
                                          description: Value logged for this setting.
                                          type: string
                                        value:
                                          description: Current value for this setting.
                                          type: string
                                      required:
                                        - loggedValue
                                        - value
                                required:
                                  - description
                                  - enumData
                                  - idDataAttribute
                                  - idDeviceType
                                  - idSite
                                  - idUser
                                  - loggedTimestamp
                                  - loggedValue
                                  - timestamp
                                  - user_name
                                  - value
                            signalRSSI:
                              description: Device formatted signal RSSI.
                              type: string
                            signalSNR:
                              description: Device formatted signal SNR.
                              type: string
                            signalFrequency:
                              description: Device formatted signal frequency.
                              type: string
                            antennaType:
                              description: GlobalLink device antenna switch state.
                              type: string
                              enum:
                                - Internal
                                - External
                            networkName:
                              description: Device network name.
                              type: string
                            loggingInterval:
                              description: >-
                                Expected seconds between received logs from
                                gateway device, or false if not set.
                              type:
                                - integer
                                - boolean
                            identifier:
                              description: >-
                                Gateway device identifier, not visible to demo
                                user or using site sharing.
                              type: string
                            lastPowerUpOrRestart:
                              description: >-
                                Gateway device last power up or restart
                                timestamp, false if no timestamp available.
                              type:
                                - string
                                - boolean
                            machineSerialNumber:
                              description: Gateway device serial number.
                              type:
                                - 'null'
                                - string
                            remoteOnLan:
                              description: >-
                                Remote on LAN address, only for Venus OS
                                devices.
                              type: string
                            autoUpdate:
                              description: 'Auto update setting, only for Venus OS devices.'
                              type: string
                              enum:
                                - 'On'
                                - 'Off'
                                - Check
                            updateTo:
                              description: >-
                                Maxiumum version to update to, only for Venus OS
                                devices.
                              type: string
                              enum:
                                - Official release
                                - Release-candidate
                                - Testing
                                - Develop
                            vncSshAuth:
                              description: >-
                                True if the Venus OS gateway has SSH
                                authentication enabled.
                              type: boolean
                            vncStatus:
                              description: Venus OS gateway internet setting.
                              type: string
                              enum:
                                - Enabled
                                - Disabled
                            vncPort:
                              description: Venus OS gateway remote VNC port.
                              type: integer
                            twoWayCommunication:
                              description: >-
                                True if the Venus OS gateway has two way
                                communication enabled.
                              type: boolean
                            remoteSupportEnabled:
                              description: >-
                                True if the Venus OS gateway has remote support
                                enabled.
                              type: boolean
                            remoteSupportPort:
                              description: >-
                                Venus OS gateway remote support connection port,
                                or false if none.
                              type:
                                - integer
                                - boolean
                            remoteSupportIp:
                              description: Venus OS gateway remote support connection ip.
                              type: string
                            remoteSupport:
                              description: Venus OS gateway remote support status.
                              type: string
                              enum:
                                - enabled_online
                                - enabled_offline
                                - disabled
                            productId:
                              description: 'VE.bus device product id, false if none.'
                              type:
                                - string
                                - boolean
                            vmc:
                              description: >-
                                VE.bus device connection. Either VE.Bus, VE.Can
                                or false.
                              type:
                                - string
                                - boolean
                            vid:
                              description: VE.bus device hardware configuration.
                              type: object
                              properties:
                                enumValue:
                                  description: Pure enum value.
                                  type: string
                                  enum:
                                    - Single unit
                                    - Two units configured as split-phase
                                    - Two units configured in parallel
                                    - Three units configured in parallel
                                    - 'three phase system, one unit per phase'
                                    - 'three phase system, two units per phase'
                                    - 'three phase system, three units per phase'
                                    - 'three phase system, four units per phase'
                                    - 'three phase system, five units per phase'
                                devicesPerPhase:
                                  description: Units per phase.
                                  type: object
                                  properties:
                                    L1:
                                      type: integer
                                    L2:
                                      type: integer
                                    L3:
                                      type: integer
                                  required:
                                    - L1
                                    - L2
                                    - L3
                              required:
                                - enumValue
                                - devicesPerPhase
                            tempSensorConnected:
                              description: >-
                                IO Extender device temperature sensor
                                connection, true if connected.
                              type: boolean
                            froniusDeviceType:
                              description: PV Inverter Fronius device type.
                              type: string
                            pL:
                              description: >-
                                PV Inverter device position, false if none
                                available.
                              type:
                                - string
                                - boolean
                            pdV:
                              description: PV Inverter device data manager version.
                              type: string
                            inputType:
                              description: >-
                                Digital Input device type, false if not
                                available.
                              type:
                                - string
                                - boolean
                            inputState:
                              description: >-
                                Digital Input device state, false if not
                                available.
                              type:
                                - string
                                - false
                          required:
                            - name
                            - customName
                            - productCode
                            - idSite
                            - lastConnection
                            - settings
                      unconfigured_devices:
                        description: Unconfigured devices belonging to this installation.
                        oneOf:
                          - type: boolean
                          - type: array
                            items:
                              description: An unconfigured device.
                              type: object
                              properties:
                                idSite:
                                  description: Installation to which this device belongs.
                                  type: string
                                instance:
                                  description: Instance to which this device belongs.
                                  type: string
                                lastConnection:
                                  description: >-
                                    Timestamp at which this device was last
                                    connected.
                                  type: string
                                name:
                                  description: Device name.
                                  type: string
                              required:
                                - idSite
                                - instance
                                - lastConnection
                                - name
                    required:
                      - devices
                      - unconfigured_devices
                required:
                  - success
                  - records
        '403':
          description: Not authorized to view devices for this installation.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  '/installations/{idSite}/diagnostics':
    get:
      operationId: installations/idSite/diagnostics
      summary: Diagnostic data for an installation
      description: >-
        Retrieves log data for an installation. This endpoint is only accessible
        to users with access to the installation.
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation id
          in: path
          required: true
          schema:
            type: string
        - name: count
          description: 'How many records to fetch, 100 if not specified.'
          in: query
          required: false
          schema:
            type: integer
        - name: page
          description: 'Which page to fetch, 1 if not specified.'
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved logging data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  records:
                    description: Fetched logging data.
                    type: object
                    properties:
                      idSite:
                        description: Installation id.
                        type: integer
                      timestamp:
                        description: Timestamp at which this data was logged.
                        type: integer
                      Device:
                        description: Logging device name.
                        type: string
                      instance:
                        description: Log data instance.
                        type: integer
                      idDataAttribute:
                        description: Log data attribute id.
                        type: integer
                      description:
                        description: Log data description.
                        type: string
                      formatWithUnit:
                        description: Data attribute string format.
                        type: string
                      dbusServiceType:
                        description: Device DBus Service type.
                        type:
                          - 'null'
                          - string
                      dbusPath:
                        description: Device DBus path.
                        type:
                          - 'null'
                          - string
                      code:
                        description: Data attribute code.
                        type: string
                      bitmask:
                        description: '1 if the data attribute is a bitmask, else 0.'
                        type: integer
                      formattedValue:
                        description: Log data value formatted as a string.
                        type: string
                      rawValue:
                        description: Log data raw value.
                        type:
                          - string
                          - integer
                      id:
                        description: Log data id.
                        type: integer
                      dataAttributeEnumValues:
                        description: >-
                          Data attribute enum values, only for data attributes
                          of type enum.
                        type: array
                        items:
                          type: object
                          properties:
                            nameEnum:
                              description: Enum name.
                              type: string
                            valueEnum:
                              description: Numeric enum value.
                              type: integer
                          required:
                            - nameEnum
                            - valueEnum
                    required:
                      - idSite
                      - timestamp
                      - Device
                      - instance
                      - idDataAttribute
                      - description
                      - formatWithUnit
                      - dbusServiceType
                      - dbusPath
                      - code
                      - bitmask
                      - formattedValue
                      - rawValue
                      - id
                  num_records:
                    description: Amount of log records available.
                    type: integer
                required:
                  - success
                  - records
                  - num_records
        '403':
          description: Not authorized to get log data for this installation.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  '/installations/{idSite}/dynamic-ess-settings':
    get:
      summary: Dynamic ESS configuration
      description: null
      tags:
        - Installations
      parameters:
        - name: id
          in: path
          description: The ID of the installation
          required: true
          schema:
            type: integer
        - $ref: '#/paths/~1users~1me/get/parameters/0'
      responses:
        '200':
          description: >-
            Successfully updated the Dynamic ESS configuration for this
            installation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  idSite:
                    description: The ID of the updated installation.
                    type: integer
                  data:
                    description: Contains the updated configuration for the installation.
                    $ref: >-
                      #/paths/~1installations~1%7BidSite%7D~1dynamic-ess-settings/components/schemas/DynamicEssConfiguration
        '403':
          description: User is not authorized to access or modify this installation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: False as the request was unsuccessful.
                    type: boolean
                  errors:
                    description: User is not authorized for this operation.
                    type: string
                  error_code:
                    description: 'The error code, if applicable.'
                    type:
                      - 'null'
                      - string
                required:
                  - success
                  - errors
                  - error_code
        '404':
          description: Installation not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  errors:
                    description: Installation with the given ID was not found.
                    type: string
                  error_code:
                    description: 'The error code, if applicable.'
                    type:
                      - 'null'
                      - string
                required:
                  - success
                  - errors
                  - error_code
    post:
      summary: Dynamic ESS configuration
      description: null
      tags:
        - Installations
      parameters:
        - name: id
          in: path
          description: The ID of the installation
          required: true
          schema:
            type: integer
        - $ref: '#/paths/~1users~1me/get/parameters/0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1installations~1%7BidSite%7D~1dynamic-ess-settings/components/schemas/DynamicEssConfiguration
      responses:
        '200':
          description: >-
            Successfully updated the Dynamic ESS configuration for this
            installation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  idSite:
                    description: The ID of the updated installation.
                    type: integer
                  data:
                    description: Contains the updated configuration for the installation.
                    $ref: >-
                      #/paths/~1installations~1%7BidSite%7D~1dynamic-ess-settings/components/schemas/DynamicEssConfiguration
        '403':
          description: User is not authorized to access or modify this installation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: False as the request was unsuccessful.
                    type: boolean
                  errors:
                    description: User is not authorized for this operation.
                    type: string
                  error_code:
                    description: 'The error code, if applicable.'
                    type:
                      - 'null'
                      - string
                required:
                  - success
                  - errors
                  - error_code
        '404':
          description: Installation not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  errors:
                    description: Installation with the given ID was not found.
                    type: string
                  error_code:
                    description: 'The error code, if applicable.'
                    type:
                      - 'null'
                      - string
                required:
                  - success
                  - errors
                  - error_code
    components:
      schemas:
        PriceSchedule:
          type: array
          items:
            type: object
            required:
              - days
              - schedule
            properties:
              days:
                type: array
                items:
                  type: number
                  description: 'Weekday, 0-indexed starting on Monday'
                  example: 0
              schedule:
                type: array
                items:
                  type: object
                  required:
                    - from
                    - to
                    - price
                  properties:
                    from:
                      type: string
                      example: '00:00'
                      description: 'From timestamp (inclusive), whole hours only'
                    to:
                      type: string
                      example: '05:00'
                      description: 'From timestamp (exclusive), whole hours only'
                    price:
                      type: number
                      example: '0.41'
                      description: Energy price for this timeslot
        DynamicEssConfiguration:
          type: object
          required:
            - batteryCapacity
            - batteryCosts
            - batteryFlowRestriction
            - buyPriceType
            - chargePower
            - dischargePower
            - gridSell
            - isOn
            - maxPowerFromGrid
            - maxPowerToGrid
            - sellPriceType
          properties:
            batteryCapacity:
              type: number
              description: Battery capacity of the system in kWh
              example: 10
            batteryCosts:
              type: number
              description: >-
                Battery cycle costs per kWh - You can calculate this value using
                this formula: battery price / (amount of battery cycles *
                battery capacity)
              example: 0.02
            batteryFlowRestriction:
              type: string
              enum:
                - unrestricted
                - noExport
                - noImport
              example: unrestricted
              description: |
                Do you need to disable grid charging or discharging?
                 * `unrestricted` - No
                 * `noExport` - Disable discharging battery to grid
                 * `noImport` - Disable charging battery from grid
            batteryPrice:
              type: number
              description: Battery price
              example: 250
            buyEnergyProviderId:
              type: number
              description: >-
                Identifier of the energy provider for buying energy (see
                /energy-providers)
              example: 1
            buyPriceFormula:
              type: string
              description: >-
                A formula to apply to the raw dynamic energy prices, where p is
                the raw price.
              example: 1.21*p+0.04
            buyPriceSchedule:
              $ref: >-
                #/paths/~1installations~1%7BidSite%7D~1dynamic-ess-settings/components/schemas/PriceSchedule
            buyPriceType:
              type: number
              enum:
                - 0
                - 1
              example: 1
              description: Whether or not you have dynamic buy prices
            chargePower:
              type: number
              example: 10
              description: Maximum battery charging power in kW
            dischargePower:
              type: number
              example: 10
              description: Maximum battery discharging power in kW
            gridSell:
              type: number
              enum:
                - 0
                - 1
              description: Whether or not you can sell energy to the grid.
              example: 1
            idBiddingZone:
              type: number
              description: Identifier of the EU bidding zone (see /bidding-zones)
              example: 1
            isDessSocDifferent:
              type: boolean
              description: >-
                Whether or not you want to have a separate minimum SOC for
                Dynamic ESS
              example: false
            isGreenModeOn:
              type: boolean
              description: >-
                Whether or not you want to have green mode turned on for Dynamic
                ESS
              example: false
            isOn:
              type: boolean
              description: Whether or not you want to enable Dynamic ESS in VRM
              example: true
            maxPowerFromGrid:
              type: number
              example: 10
              description: Maximum power from the grid in kW
            maxPowerToGrid:
              type: number
              example: 10
              description: Maximum power to the grid in kW
            sellEnergyProviderId:
              type: number
              description: >-
                Identifier of the energy provider for buying energy (see
                /energy-providers)
              example: 1
            sellPriceSchedule:
              $ref: >-
                #/paths/~1installations~1%7BidSite%7D~1dynamic-ess-settings/components/schemas/PriceSchedule
            sellPriceFormula:
              type: string
              description: >-
                A formula to apply to the raw dynamic energy prices, where p is
                the raw price.
              example: 1.21*p+0.04
            sellPriceType:
              type: number
              enum:
                - 0
                - 1
              example: 1
              description: Whether or not you have dynamic sell prices
            isPeriodicFullChargeOn:
              type: boolean
              description: >-
                Whether or not do you want to periodically charge your battery
                to 100% in order to extend battery life
              example: true
            periodicFullChargeDuration:
              type: positive number or null
              description: >-
                How many hours should your battery stay at 100% during the
                periodic recharge
              example: 2
            periodicFullChargeInterval:
              type: positive number or null
              description: How often should the battery be fully charged (in days)
              example: 14
  '/installations/{idSite}/gps-download':
    get:
      operationId: installations/idSite/gps-download
      summary: GPS tracks for an installation
      description: Retrieves GPS tracks for an installation as a KML file.
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation id
          in: path
          required: true
          schema:
            type: string
        - name: start
          description: Timestamp from which to fetch data.
          in: query
          required: true
          schema:
            type: integer
        - name: end
          description: Timestamp to which to fetch data.
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully created KML file containing tracks.
          content:
            application/vnd.google-earth.kml+xml: {}
        4xx:
          description: Request unsuccessful.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  '/installations/{idSite}/tags':
    get:
      summary: Get installation tags
      description: Tags for an installation.
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation id
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Successfully retrieved tags.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  tags:
                    description: Tags for this installation.
                    type: array
                    items:
                      description: Tag name.
                      type: string
        4xx:
          description: Request unsuccessful.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
    put:
      summary: Add installation tag
      description: Add tag for an installation.
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation id
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag:
                  type: string
                  required: true
                  example: Foo
                source:
                  type: string
                  required: true
                  example: user
      responses:
        '200':
          description: Tag added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                    example: true
                  idSite:
                    description: ID of the site where the tag was added.
                    type: number
                    example: 123
                  data:
                    description: Information of the new tag.
                    type: array
                    items:
                      type: object
                      required:
                        - tag
                        - source
                      tag:
                        type: string
                        required: true
                        example: Foo
                      source:
                        type: string
                        required: true
                        example: user
        4xx:
          description: Request unsuccessful.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
    delete:
      summary: Remove installation tag
      description: Remove tag for an installation.
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation id
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag:
                  type: string
                  required: true
                  example: Foo
                source:
                  type: string
                  required: true
                  example: user
      responses:
        '200':
          description: Tag removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                    example: true
                  idSite:
                    description: ID of the site where the tag was deleted.
                    type: number
                    example: 123
                  data:
                    description: Information of the removed tag.
                    type: array
                    items:
                      type: object
                      required:
                        - tag
                        - source
                      tag:
                        type: string
                        required: true
                        example: Foo
                      source:
                        type: string
                        required: true
                        example: user
        4xx:
          description: Request unsuccessful.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  '/installations/{idSite}/data-download':
    get:
      operationId: installations/idSite/data-download
      summary: Download installation data
      description: >-
        Retrieves a base64 encoded string containing the specified installation
        data, in the specified format.
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation id
          in: path
          required: true
          schema:
            type: string
        - name: start
          description: 'Timestamp from which to fetch data, defaults to one day ago.'
          in: query
          required: false
          schema:
            type: integer
        - name: end
          description: 'Timestamp to which to fetch data, defaults to now.'
          in: query
          required: false
          schema:
            type: integer
        - name: datatype
          description: 'Type of data to export, defaults to log.'
          in: query
          required: false
          schema:
            type: string
            enum:
              - log
              - benchmark
              - kwh
        - name: format
          description: 'Export data file format, defaults to csv.'
          in: query
          required: false
          schema:
            type: string
            enum:
              - csv
              - excelxml
              - xls
              - xlsx
              - html
        - name: debug
          description: >-
            Include debug attributes, only for admins and restricted admins,
            defaults to false.
          in: query
          required: false
          schema:
            type: boolean
        - name: async
          description: >-
            If true, the request is executed asynchronously and the result is
            not included in the response but sent to the email address of the
            requesting account.
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully exported / started exporting data.
          content:
            application/json:
              schema:
                description: The asynchronous export was successfully started.
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                required:
                  - success
            text/html: {}
            text/csv: {}
            application/vnd.ms-excel: {}
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: {}
        4xx:
          description: Request unsuccessful.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  '/installations/{idSite}/stats':
    get:
      operationId: installations/idSite/stats
      summary: Installation stats
      tags:
        - Installations
      description: >
        Retrieves installation stats for the specified period, or one day if
        none specified. If the datatype is set to custom, one or more attributes
        can be provided using the attributeCodes[] parameter.


        There is a maximum allowed time period for each interval, which is:

        * 31 days for 15 minutes

        * 31 days for hours

        * 180 days for days

        * 140 days for weeks

        * 24 months for months

        * 5 years for years
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation id
          in: path
          required: true
          schema:
            type: string
        - name: start
          description: 'Timestamp from which to fetch data, defaults to one day ago.'
          in: query
          required: false
          schema:
            type: integer
        - name: end
          description: 'Timestamp to which to fetch data, defaults to now.'
          in: query
          required: false
          schema:
            type: integer
        - name: type
          description: >-
            Type of data to fetch, defaults to live_feed. If set to custom, the
            attributeCodes[] parameter must be provided.
          in: query
          required: false
          schema:
            type: string
            enum:
              - venus
              - live_feed
              - consumption
              - solar_yield
              - kwh
              - generator
              - generator-runtime
              - custom
              - forecast
        - name: interval
          description: 'Time between retrieved data points, defaults to hours.'
          in: query
          required: false
          schema:
            type: string
            enum:
              - 15mins
              - hours
              - 2hours
              - days
              - weeks
              - months
              - years
        - name: 'attributeCodes[]'
          description: >-
            Attribute codes for which to retrieve series, repeated for each
            attribute. Required at least once if datatype is set to custom.
          in: query
          required: false
          schema:
            type: string
        - name: show_instance
          description: 'If included, attributes will be grouped by instance.'
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully retrieved statistics.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  records:
                    oneOf:
                      - description: Statistics for each data attribute.
                        type: object
                        additionalProperties:
                          anyOf:
                            - description: Data points for statistic with this key.
                              type: array
                              items:
                                description: >-
                                  An array containing first the timestamp, then
                                  the mean value. If available, the minimum and
                                  then the maximum will be added to the end of
                                  this array.
                                type: array
                                items:
                                  type: number
                            - description: >-
                                Statistic without data within the given
                                timeframe.
                              type: boolean
                      - description: >-
                          List of instances, with the key or index being the
                          instance id.
                        type:
                          - object
                          - array
                        items:
                          description: Statistics for a specific instance
                          type: object
                          properties:
                            stats:
                              $ref: >-
                                #/paths/~1installations~1%7BidSite%7D~1stats/get/responses/200/content/application~1json/schema/properties/records/oneOf/0
                            instance:
                              description: The instance this data belongs to.
                              type: integer
                          required:
                            - stats
                            - instance
                        additionalProperties:
                          $ref: >-
                            #/paths/~1installations~1%7BidSite%7D~1stats/get/responses/200/content/application~1json/schema/properties/records/oneOf/1/items
                  totals:
                    oneOf:
                      - description: Total for each data attribute.
                        type: object
                        additionalProperties:
                          description: >-
                            Total for statistic with this key, or false if there
                            is no data for this statistic within the given
                            timeframe.
                          type:
                            - number
                            - boolean
                      - description: >-
                          List of instances, with the key or index being the
                          instance id.
                        type:
                          - object
                          - array
                        items:
                          description: Totals for a specific instance
                          type: object
                          properties:
                            totals:
                              $ref: >-
                                #/paths/~1installations~1%7BidSite%7D~1stats/get/responses/200/content/application~1json/schema/properties/totals/oneOf/0
                            instance:
                              description: The instance this data belongs to.
                              type: integer
                          required:
                            - totals
                            - instance
                        additionalProperties:
                          $ref: >-
                            #/paths/~1installations~1%7BidSite%7D~1stats/get/responses/200/content/application~1json/schema/properties/totals/oneOf/1/items
                required:
                  - success
                  - records
                  - totals
        4xx:
          description: Request unsuccessful.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  '/installations/{idSite}/overallstats':
    get:
      operationId: installations/idSite/overallstats
      summary: Overall installation stats
      tags:
        - Installations
      description: >-
        Retrieves installation stats grouped by the last year, month, week and
        day. If the datatype is set to custom, one or more attributes can be
        provided using the attributeCodes[] parameter.
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation id
          in: path
          required: true
          schema:
            type: string
        - name: type
          description: >-
            Type of data to fetch, defaults to live_feed. If set to custom, the
            attributeCodes[] parameter must be provided.
          in: query
          required: false
          schema:
            type: string
            enum:
              - venus
              - live_feed
              - consumption
              - solar_yield
              - kwh
              - generator
              - generator-runtime
              - custom
        - name: 'attributeCodes[]'
          description: >-
            Attribute codes for which to retrieve series, repeated for each
            attribute. Required at least once if datatype is set to custom.
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved overall statistics.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  records:
                    description: Overall statistics grouped by timeframe.
                    type: object
                    properties:
                      year:
                        description: Totals and percentages.
                        type: object
                        properties:
                          totals:
                            $ref: >-
                              #/paths/~1installations~1%7BidSite%7D~1stats/get/responses/200/content/application~1json/schema/properties/totals/oneOf/0
                          percentages:
                            description: Percentage for each data attribute.
                            type: object
                            additionalProperties:
                              type: integer
                        required:
                          - totals
                          - percentages
                      month:
                        $ref: >-
                          #/paths/~1installations~1%7BidSite%7D~1overallstats/get/responses/200/content/application~1json/schema/properties/records/properties/year
                      week:
                        $ref: >-
                          #/paths/~1installations~1%7BidSite%7D~1overallstats/get/responses/200/content/application~1json/schema/properties/records/properties/year
                      today:
                        $ref: >-
                          #/paths/~1installations~1%7BidSite%7D~1overallstats/get/responses/200/content/application~1json/schema/properties/records/properties/year
                required:
                  - success
                  - records
        4xx:
          description: Request unsuccessful.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  '/installations/{idSite}/settings':
    post:
      operationId: installations/idSite/settings
      summary: Update settings for a specific installation
      description: >-
        Allows the user to modify settings related to a specific installation
        identified by its ID. You can send one or more of the fields you want to
        update at once.
      tags:
        - Installations
      parameters:
        - name: id
          in: path
          description: The ID of the installation
          required: true
          schema:
            type: integer
        - $ref: '#/paths/~1users~1me/get/parameters/0'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: Name of the installation
                notes:
                  type: string
                  description: Any additional notes related to the installation.
                phonenumber:
                  type: string
                  description: Phone number associated with the installation.
                noDataAlarmTimeout:
                  type: integer
                  description: Timeout for no data alarm.
                noDataAlarmActive:
                  type: boolean
                  description: Indicates if the no data alarm is active.
                geofence:
                  type: object
                  description: Geofence settings for the installation.
                geofenceEnabled:
                  type: boolean
                  description: Indicates if geofencing is enabled.
                alarmMonitoring:
                  type: boolean
                  description: Indicates if alarm monitoring is active.
                realtimeUpdates:
                  type: boolean
                  description: Indicates if real-time updates are enabled.
                inverterChargerControl:
                  type: boolean
                  description: Indicates if inverter charger control is active.
      responses:
        '200':
          description: Successfully updated settings for the installation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  idSite:
                    description: The ID of the updated installation site.
                    type: integer
                  data:
                    description: Contains the updated settings for the installation.
                    type: object
                    properties:
                      description:
                        type: string
                        description: Description of the installation.
        '403':
          description: User is not authorized to access or modify this installation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: False as the request was unsuccessful.
                    type: boolean
                  errors:
                    description: User is not authorized for this operation.
                    type: string
                  error_code:
                    description: 'The error code, if applicable.'
                    type:
                      - 'null'
                      - string
                required:
                  - success
                  - errors
                  - error_code
        '404':
          description: Installation not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  errors:
                    description: Installation with the given ID was not found.
                    type: string
                  error_code:
                    description: 'The error code, if applicable.'
                    type:
                      - 'null'
                      - string
                required:
                  - success
                  - errors
                  - error_code
  '/installations/{idSite}/invite':
    post:
      summary: Invite user to installation
      description: Sends an invitation to a user to gain access to a specific installation.
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation ID
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  required: true
                  example: Andrew
                email:
                  type: string
                  required: true
                  example: andrew@example.com
                accessLevel:
                  description: >-
                    The access level the invited user should have. Value 0 gives
                    demo rights, value 1 gives user rights, and value 2 gives
                    admin rights.
                  type: number
                  required: true
                  example: 1
            examples:
              string:
                summary: Inviting Andrew to access the installation.
                value:
                  name: Andrew
                  email: andrew@example.com
                  accessLevel: 1
      responses:
        '200':
          description: Invitation sent.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  user:
                    description: null
                    type: boolean
                    example: false
                  data:
                    description: Description of added user
                    type: object
                    properties:
                      idUser:
                        type: number
                        example: 1
                      idSite:
                        description: ID of the installation.
                        type: number
                        example: 60
                      created:
                        description: Timestamp when user was invited.
                        type: number
                        example: 1698415280
                      name:
                        type: string
                        example: Andrew
                      email:
                        type: string
                        example: andrew@example.com
                      accessLevel:
                        type: number
                        example: 1
                      idInvite:
                        type: number
                        example: 0
  '/installations/{idSite}/reset-forecasts':
    post:
      summary: Reset installation forecasts
      description: >-
        Logs the current timestamp with the resetType in influx. The forecasting
        model then ingores all data before this timestamp, effectively treating
        the installation as if it's a new one
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation ID
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resetType:
                  type: number
                  required: true
                  example: 0
      responses:
        '200':
          description: Forecasts were successfully reset
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
        '400':
          description: >-
            Not enough information given in request. Either idSite or resetType
            is missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: 'False, because the request couldn''t complete'
                    type: boolean
    get:
      summary: Retrieves the timestamp of the last forecasts reset
      description: >-
        Queries influx for the last time the forecasts for this installation
        were reset. Returns either the timestamp, or 0 if the forecasts were
        never reset.
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation ID
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: InfluxDB was queried successfully and the timestamp was returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  last_reset:
                    description: >-
                      The timestamp of the last reset, or 0 if the forecasts
                      were never reset
                    type: integer
  '/installations/{idSite}/custom-widget':
    get:
      summary: Get Custom Widgets
      description: Get a custom widget
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: ID of the installation.
          in: path
          required: true
          schema:
            type: number
        - name: idCustomWidget
          description: ID of the custom widget
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Custom Widget data received successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  widget:
                    description: Custom Widget data received successfully.
                    type: object
        4xx:
          description: Request unsuccessful.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
    post:
      summary: Create Custom Widget
      description: Create a custom widget
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: ID of the installation.
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  required: true
                  example: abc
                onlyAdmins:
                  type: integer
                  required: false
                  example: 0
                yAxisScaling:
                  type: integer
                  required: true
                parameters:
                  type: object
                  required: true
                idCustomWidget:
                  type: integer
                  required: true
                  example: 123
      responses:
        '200':
          description: Custom widget created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  idCustomWidget:
                    description: ID of the custom widget.
                    type: integer
        4xx:
          description: Request unsuccessful.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
    patch:
      summary: Update Custom Widget
      description: Update a custom widget
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: ID of the installation.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  required: true
                onlyAdmins:
                  type: integer
                  required: false
                yAxisScaling:
                  type: integer
                  required: true
                parameters:
                  type: object
                  required: true
                idCustomWidget:
                  type: integer
                  required: true
      responses:
        '200':
          description: Custom widget updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
        4xx:
          description: Request unsuccessful.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
    delete:
      summary: Delete Custom Widget
      description: Delete a custom widget
      tags:
        - Installations
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: ID of the installation.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idCustomWidget:
                  description: ID of the custom widget that nees to be deleted.
                  type: integer
                  required: true
      responses:
        '200':
          description: Custom widget deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
        4xx:
          description: Request unsuccessful.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  /installation-overview-download:
    post:
      operationId: installationOverviewDownload
      summary: Download installation overview
      description: >-
        Fetches a customized overview of installations with specified columns,
        site IDs, and settings. The response can be either JSON or an XLSX file
        depending on the `jsonResponse` parameter.
      tags:
        - Installations
      parameters:
        - $ref: ../../../docs/components.yaml#/components/parameters/authorization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                columns:
                  type: object
                  description: Configuration of the columns to include in the overview.
                  additionalProperties:
                    type: object
                    properties:
                      header:
                        type: string
                        description: The header text for the column.
                      enabled:
                        type: boolean
                        description: Whether the column is enabled.
                      hide:
                        type: boolean
                        description: Whether the column is hidden (optional).
                        nullable: true
                siteIds:
                  type: array
                  description: List of site IDs to include in the overview.
                  items:
                    type: integer
                onlyVisible:
                  type: boolean
                  description: Whether only visible items should be included.
                jsonResponse:
                  type: boolean
                  description: >-
                    Whether the response should be in JSON format. If false, an
                    XLSX file will be returned.
              required:
                - columns
                - siteIds
                - onlyVisible
                - jsonResponse
      responses:
        '200':
          description: Successfully retrieved the installation overview.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful.
                  data:
                    type: object
                    additionalProperties:
                      type: object
                      description: Data for each installation.
                      properties:
                        Installation name:
                          type: string
                          description: Name of the installation.
                        Battery Voltage:
                          type: string
                          description: 'Battery voltage (e.g., "50.00 V").'
                        Battery %:
                          type: string
                          description: 'Battery percentage (e.g., "100.0 %").'
                        Battery Mode:
                          type: string
                          description: 'Current battery mode (e.g., "Charging").'
                        Load:
                          type: string
                          description: 'Current load in watts (e.g., "118 W").'
                        Solar Yield:
                          type: string
                          description: 'Solar yield in watts (e.g., "117 W").'
                        Grid:
                          type: string
                          description: Grid power in watts.
                        Generator:
                          type: string
                          description: Generator power in watts.
                        Tanks:
                          type: string
                          description: 'Information about tank levels (e.g., "Fuel-20 %").'
                        Temperature:
                          type: string
                          description: 'Temperature readings (e.g., "Battery-27.0 °C").'
                        Last Update:
                          type: string
                          format: date-time
                          description: Timestamp of the last update.
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
                description: XLSX file containing the installation overview.
        '400':
          description: Invalid request format or missing parameters.
          content:
            application/json:
              schema:
                $ref: ../../../docs/components.yaml#/components/schemas/generalError
        '403':
          description: Not authorized to access installation overview data.
          content:
            application/json:
              schema:
                $ref: ../../../docs/components.yaml#/components/schemas/generalError
  /data-attributes:
    get:
      summary: Retrieve filtered and sorted attributes
      description: >-
        Returns a JSON object of attributes with `idDataAttribute` as string
        keys. Filters out `targetTable`, `idDeviceType`, and `idDataAttribute`
        fields.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    code:
                      type: string
                      description: The code of the attribute.
                    dataType:
                      type: string
                      description: The data type of the attribute.
                    description:
                      type: string
                      description: A detailed description of the attribute.
                    formatWithUnit:
                      type: string
                      description: The format string with the unit for the attribute.
  '/installations/{idSite}/widgets/Graph':
    get:
      operationId: installations/idSite/widgets/Graph
      summary: Graph series for a given installation and set of attributes
      description: >-
        Retrieves data points for a graph for the given installation and data
        attributes. Data attributes should be given as id's, codes or both. If
        not given a timeframe, data for the last day will be retrieved.
      tags:
        - General Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation id
          in: path
          required: true
          schema:
            type: string
        - name: 'attributeCodes[]'
          description: >-
            Attribute codes for which to retrieve series, repeated for each
            attribute.
          in: query
          required: false
          schema:
            type: string
        - name: 'attributeIds[]'
          description: >-
            Attribute id's for which to retrieve series, repeated for each
            attribute.
          in: query
          required: false
          schema:
            type: integer
        - name: instance
          description: 'Instance for which to retrieve data, defaults to 0.'
          in: query
          required: false
          schema:
            type: integer
        - name: start
          description: 'Timestamp from which to fetch data, defaults to one day ago.'
          in: query
          required: false
          schema:
            type: integer
        - name: end
          description: 'Timestamp to which to fetch data, defaults to now.'
          in: query
          required: false
          schema:
            type: integer
        - name: width
          description: 'Width of the graph in pixels, defaults to 768.'
          in: query
          required: false
          schema:
            type: integer
        - name: pointsPerPixel
          description: >-
            The amount of datapoints per pixel of the width of the graph,
            defaults to two.
          in: query
          required: false
          schema:
            type: number
        - name: useMinMax
          description: >-
            If 1, include the mean, min and max for each datapoint. Else,
            include only one value per datapoint.
          in: query
          required: false
          schema:
            type: number
      responses:
        '200':
          description: Successfully retrieved graph data points.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  records:
                    description: Fetched graph data.
                    type: object
                    properties:
                      data:
                        description: Data points per attribute.
                        type: object
                        additionalProperties:
                          description: Data points for data attribute with this key.
                          type: array
                          items:
                            description: >-
                              An array containing first the timestamp, then the
                              mean value. If the useMinMax parameter was 1, the
                              minimum and then the maximum will be added to the
                              end of this array.
                            type: array
                            items:
                              type: number
                      meta:
                        description: Meta data per attribute.
                        type: object
                        additionalProperties:
                          description: Meta data for data attribute with this key.
                          type: object
                          properties:
                            code:
                              description: Data attribute code.
                              type: string
                            description:
                              description: Data attribute description.
                              type: string
                            formatWithValueOnly:
                              description: Data attribute format with only the value.
                              type: string
                            formatWithUnit:
                              description: Data attribute format with both value and unit.
                              type: string
                          required:
                            - code
                            - description
                            - formatValueOnly
                            - formatWithUnit
                    required:
                      - data
                      - meta
                required:
                  - success
                  - records
        4xx:
          description: Request unsuccessful.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  '/installations/{idSite}/widgets/GPS':
    get:
      operationId: installations/idSite/widgets/GPS
      summary: GPS data for an installation
      description: >-
        Retrieves GPS data for the specified installation, used in the GPS
        widget.
      tags:
        - General Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation id
          in: path
          required: true
          schema:
            type: string
        - name: instance
          description: 'Instance for which to retrieve data, defaults to 0.'
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved GPS data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  records:
                    description: Fetched GPS data.
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          attributes:
                            description: GPS data attributes.
                            type: object
                            properties:
                              secondsAgo:
                                description: How old this data is.
                                type: object
                                properties:
                                  value:
                                    description: Unix timestamp of this data.
                                    type: string
                                  valueFormattedWithUnit:
                                    description: Timestamp of this data formatted.
                                    type: string
                                required:
                                  - value
                                  - valueFormattedWithUnit
                              hasOldData:
                                description: >-
                                  True if the retrieved data is old, based on
                                  the key data attribute.
                                type: boolean
                            required:
                              - hasOldData
                              - secondsAgo
                            additionalProperties:
                              description: Data for data attribute with this key.
                              type: object
                              properties:
                                code:
                                  description: Data attribute code.
                                  type: string
                                dataAttributeName:
                                  description: Data attribute name.
                                  type: string
                                dataType:
                                  description: Data attribute data type.
                                  type: string
                                  enum:
                                    - float
                                    - enum
                                    - string
                                dbusPath:
                                  description: Data attribute DBus path.
                                  type: string
                                dbusServiceType:
                                  description: Data attribute DBus service type.
                                  type: string
                                formatValueOnly:
                                  description: Data attribute string format without unit.
                                  type: string
                                formatWithUnit:
                                  description: Data attribute string format with unit.
                                  type: string
                                formattedValue:
                                  description: Data attribute formatted value with unit.
                                  type: string
                                hasOldData:
                                  description: >-
                                    True if the retrieved data for this data
                                    attribute is old.
                                  type: boolean
                                idDataAttribute:
                                  description: Data attribute id.
                                  type: string
                                instance:
                                  description: >-
                                    Installation instance this data attribute
                                    belongs to.
                                  type: integer
                                isKeyDataAttribute:
                                  description: '1 if this is the key data attribute, else 0.'
                                  type: string
                                isValid:
                                  description: '1 if this data is valid, else 0.'
                                  type: string
                                nameEnum:
                                  description: 'Data attribute enum name, if applicable.'
                                  type:
                                    - 'null'
                                    - string
                                rawValue:
                                  description: >-
                                    Data attribute raw value, regardless of data
                                    type.
                                  type: string
                                secondsAgo:
                                  description: >-
                                    Data attribute seconds since last received
                                    data.
                                  type: string
                                secondsToNextLog:
                                  description: >-
                                    Data attribute expected data logging
                                    interval.
                                  type: string
                                value:
                                  description: >-
                                    Data attribute value, regardless of data
                                    type.
                                  type: string
                                valueEnum:
                                  description: 'Data attribute enum value, if applicable.'
                                  type:
                                    - 'null'
                                    - string
                                valueFloat:
                                  description: 'Data attribute float value, if applicable.'
                                  type:
                                    - 'null'
                                    - string
                                valueFormattedValueOnly:
                                  description: Data attribute formatted value without unit.
                                  type: string
                                valueFormattedWithUnit:
                                  description: Data attribute formatted value with unit.
                                  type: string
                                valueString:
                                  description: 'Data attribute string value, if applicable.'
                                  type:
                                    - 'null'
                                    - string
                              required:
                                - code
                                - dataAttributeName
                                - dataType
                                - dbusPath
                                - dbusServiceType
                                - formatValueOnly
                                - formatWithUnit
                                - formattedValue
                                - hasOldData
                                - idDataAttribute
                                - instance
                                - isKeyDataAttribute
                                - isValid
                                - nameEnum
                                - rawValue
                                - secondsAgo
                                - secondsToNextLog
                                - value
                                - valueEnum
                                - valueFloat
                                - valueFormattedWithUnit
                                - valueString
                          geofence:
                            description: Serialized JSON representation of the geofence.
                            type:
                              - 'null'
                              - string
                          geofenceAlarmActive:
                            description: 1 if the installation is outside the geofence.
                            type:
                              - 'null'
                              - string
                          geofenceEnabled:
                            description: '1 if geofence is enabled, else 0.'
                            type: string
                        required:
                          - attributes
                          - geofence
                          - geofenceAlarmActive
                          - geofenceEnabled
                      meta:
                        description: Meta data per data attribute.
                        type: object
                        additionalProperties:
                          description: Meta data for data attribute with this key.
                          type: object
                          properties:
                            code:
                              description: Data attribute code.
                              type: string
                            description:
                              description: Data attribute description.
                              type: string
                            formatWithValueOnly:
                              description: Data attribute format with only the value.
                              type: string
                            formatWithUnit:
                              description: Data attribute format with both value and unit.
                              type: string
                          required:
                            - code
                            - description
                            - formatValueOnly
                            - formatWithUnit
                    required:
                      - data
                      - meta
                required:
                  - success
                  - records
        4xx:
          description: Request unsuccessful.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  '/installations/{idSite}/widgets/HoursOfAc':
    get:
      operationId: installations/idSite/widgets/HoursOfAc
      summary: Hours of AC for an installation
      description: >-
        Retrieves hours of AC for an installation. If no timeframe is specified,
        data from the last day will be used.
      tags:
        - General Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation id
          in: path
          required: true
          schema:
            type: string
        - name: instance
          description: 'Instance for which to retrieve data, defaults to 0.'
          in: query
          required: false
          schema:
            type: integer
        - name: start
          description: 'Timestamp from which to fetch data, defaults to one day ago.'
          in: query
          required: false
          schema:
            type: integer
        - name: end
          description: 'Timestamp to which to fetch data, defaults to now.'
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successfully calculated and retrieved hours of AC.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  records:
                    description: Fetched hours of AC.
                    type: object
                    properties:
                      data:
                        type:
                          - 'null'
                          - string
                    required:
                      - data
                required:
                  - success
                  - records
        4xx:
          description: Request unsuccessful.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
  '/installations/{idSite}/widgets/GeneratorState':
    get:
      operationId: installations/idSite/widgets/GeneratorState
      summary: Generator state graph data
      description: >-
        Retrieves generator state changes for a state graph. If not given a
        timeframe, data for the last day will be retrieved.
      tags:
        - State Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/2
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/3
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/4
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/InputState':
    get:
      operationId: installations/idSite/widgets/InputState
      summary: Input state graph data
      description: >-
        Retrieves input state changes for a state graph. If not given a
        timeframe, data for the last day will be retrieved.
      tags:
        - State Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/2
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/3
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/4
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/InverterState':
    get:
      operationId: installations/idSite/widgets/InverterState
      summary: Inverter state graph data
      description: >-
        Retrieves inverter state changes for a state graph. If not given a
        timeframe, data for the last day will be retrieved.
      tags:
        - State Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/2
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/3
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/4
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/MPPTState':
    get:
      operationId: installations/idSite/widgets/MPPTState
      summary: MPPT state graph data
      description: >-
        Retrieves MPPT state changes for a state graph. If not given a
        timeframe, data for the last day will be retrieved.
      tags:
        - State Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation id
          in: path
          required: true
          schema:
            type: string
        - name: instance
          description: 'Instance for which to retrieve data, defaults to 0.'
          in: query
          required: false
          schema:
            type: integer
        - name: start
          description: 'Timestamp from which to fetch data, defaults to one day ago.'
          in: query
          required: false
          schema:
            type: integer
        - name: end
          description: 'Timestamp to which to fetch data, defaults to now.'
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved state changes.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  records:
                    description: Fetched state changes.
                    type: object
                    properties:
                      data:
                        description: State changes per attribute.
                        type: object
                        additionalProperties:
                          description: State changes for data attribute with this key.
                          type: object
                          properties:
                            '0':
                              description: State value during this timeframe.
                              type: string
                            '1':
                              description: Start of timeframe as a unix timestamp.
                              type: integer
                            '2':
                              description: End of timeframe as a unix timestamp.
                              type: integer
                          required:
                            - '0'
                            - '1'
                            - '2'
                      meta:
                        description: Meta data per data attribute.
                        type: object
                        additionalProperties:
                          description: Meta data for data attribute with this key.
                          type: object
                          properties:
                            code:
                              description: Data attribute code.
                              type: string
                            description:
                              description: Data attribute description.
                              type: string
                            formatWithValueOnly:
                              description: Data attribute format with only the value.
                              type: string
                            formatWithUnit:
                              description: Data attribute format with both value and unit.
                              type: string
                          required:
                            - code
                            - description
                            - formatValueOnly
                            - formatWithUnit
                      enums:
                        description: Enums per data attribute.
                        type: object
                        additionalProperties:
                          description: Enums for data attribute with this key.
                          type: object
                          additionalProperties:
                            description: Enum name corresponding to the value of this key.
                            type: string
                      sort:
                        description: Sorting order of states per data attribute.
                        type: object
                        additionalProperties:
                          description: Sorting order for data attribute with this key.
                          type: object
                          additionalProperties:
                            description: Sorting order.
                            type: integer
                      buckets:
                        description: Buckets per data attribute.
                        type: object
                        additionalProperties:
                          description: Bucket for data attribute with this key.
                          type: object
                          properties:
                            resampled:
                              description: >-
                                True if the data for this attribute was
                                resampled.
                              type: boolean
                            original count:
                              description: Amount of data points before resampling.
                              type: integer
                            resampled count:
                              description: Amount of data points after resampling.
                              type: integer
                            smallest gap:
                              description: Smallest gap between two states.
                              type: integer
                          required:
                            - resampled
                    required:
                      - data
                      - meta
                      - sort
                      - buckets
                required:
                  - success
                  - records
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/ChargerState':
    get:
      operationId: installations/idSite/widgets/ChargerState
      summary: Charger state graph data
      description: >-
        Retrieves charger state changes for a state graph. If not given a
        timeframe, data for the last day will be retrieved.
      tags:
        - State Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/2
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/3
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/4
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/EssBatteryLifeState':
    get:
      operationId: installations/idSite/widgets/EssBatteryLifeState
      summary: ESS battery life state graph data
      description: >-
        Retrieves ESS battery life state changes for a state graph. If not given
        a timeframe, data for the last day will be retrieved.
      tags:
        - State Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/2
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/3
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/4
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/FuelCellState':
    get:
      operationId: installations/idSite/widgets/FuelCellState
      summary: Fuel cell state graph data
      description: >-
        Retrieves fuel cell state changes for a state graph. If not given a
        timeframe, data for the last day will be retrieved.
      tags:
        - State Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/2
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/3
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/4
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/BatteryExternalRelayState':
    get:
      operationId: installations/idSite/widgets/BatteryExternalRelayStateCommand
      summary: Battery external relay state graph data
      description: >-
        Retrieves battery external relay state changes for a state graph. If not
        given a timeframe, data for the last day will be retrieved.
      tags:
        - State Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/2
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/3
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/4
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/BatteryRelayState':
    get:
      operationId: installations/idSite/widgets/BatteryRelayState
      summary: Battery relay state graph data
      description: >-
        Retrieves battery relay state changes for a state graph. If not given a
        timeframe, data for the last day will be retrieved.
      tags:
        - State Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/2
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/3
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/4
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/BatteryMonitorWarningsAndAlarms':
    get:
      operationId: installations/idSite/widgets/BatteryMonitorWarningsAndAlarms
      summary: Battery monitor warnings and alarms graph data
      description: >-
        Retrieves battery monitor warnings and alarms data for a state graph. If
        not given a timeframe, data for the last day will be retrieved.
      tags:
        - State Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/2
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/3
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/4
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/GatewayRelayState':
    get:
      operationId: installations/idSite/widgets/GatewayRelayState
      summary: Gateway relay state graph data
      description: >-
        Retrieves gateway relay state changes for a state graph. If not given a
        timeframe, data for the last day will be retrieved.
      tags:
        - State Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/2
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/3
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/4
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/GatewayRelayTwoState':
    get:
      operationId: installations/idSite/widgets/GatewayRelayTwoState
      summary: Gateway relay two state graph data
      description: >-
        Retrieves gateway relay two state changes for a state graph. If not
        given a timeframe, data for the last day will be retrieved.
      tags:
        - State Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/2
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/3
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/4
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/ChargerRelayState':
    get:
      operationId: installations/idSite/widgets/ChargerRelayState
      summary: Charger relay state graph data
      description: >-
        Retrieves charger relay state changes for a state graph. If not given a
        timeframe, data for the last day will be retrieved.
      tags:
        - State Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/2
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/3
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/4
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/SolarChargerRelayState':
    get:
      operationId: installations/idSite/widgets/SolarChargerRelayState
      summary: Solar charger relay state graph data
      description: >-
        Retrieves solar charger relay state changes for a state graph. If not
        given a timeframe, data for the last day will be retrieved.
      tags:
        - State Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/2
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/3
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/4
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/VeBusState':
    get:
      operationId: installations/idSite/widgets/VeBusState
      summary: VE Bus state graph data
      description: >-
        Retrieves VE Bus state changes for a state graph. If not given a
        timeframe, data for the last day will be retrieved.
      tags:
        - State Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/2
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/3
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/4
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/VeBusWarningsAndAlarms':
    get:
      operationId: installations/idSite/widgets/VeBusWarningsAndAlarms
      summary: VE Bus warnings and alarms graph data
      description: >-
        Retrieves VE Bus warnings and alarms data for a state graph. If not
        given a timeframe, data for the last day will be retrieved.
      tags:
        - State Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/2
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/3
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/4
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/InverterChargerState':
    get:
      operationId: installations/idSite/widgets/InverterChargerState
      summary: Inverter charger state graph data
      description: >-
        Retrieves inverter charger state changes for a state graph. If not given
        a timeframe, data for the last day will be retrieved.
      tags:
        - State Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/2
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/3
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/4
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/InverterChargerWarningsAndAlarms':
    get:
      operationId: installations/idSite/widgets/InverterChargerWarningsAndAlarms
      summary: Inverter charger warnings and alarms graph data
      description: >-
        Retrieves inverter warning and alarm state changes for a state graph. If
        not given a timeframe, data for the last day will be retrieved.
      tags:
        - State Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/2
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/3
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/parameters/4
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1MPPTState/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/BatterySummary':
    get:
      operationId: installations/idSite/widgets/BatterySummary
      summary: Battery summary data
      description: >-
        Retrieves battery summary data for an overview, grouped by data
        attribute.
      tags:
        - Summary Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/2
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/BMSDiagnostics':
    get:
      operationId: installations/idSite/widgets/BMSDiagnostics
      summary: BMS diagnostics summary data
      description: >-
        Retrieves BMS diagnostics summary data for an overview, grouped by data
        attribute.
      tags:
        - Summary Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/2
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/HistoricData':
    get:
      operationId: installations/idSite/widgets/HistoricData
      summary: Historic summary data
      description: >-
        Retrieves historic summary data for an overview, grouped by data
        attribute.
      tags:
        - Summary Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/2
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/IOExtenderInOut':
    get:
      operationId: installations/idSite/widgets/IOExtenderInOut
      summary: IO extender input and output summary data
      description: >-
        Retrieves IO extender input and output summary data for an overview,
        grouped by data attribute.
      tags:
        - Summary Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/2
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/LithiumBMS':
    get:
      operationId: installations/idSite/widgets/LithiumBMS
      summary: Lithium BMS summary data
      description: >-
        Retrieves lithium BMS summary data for an overview, grouped by data
        attribute.
      tags:
        - Summary Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/2
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/DCMeter':
    get:
      operationId: installations/idSite/widgets/DCMeter
      summary: DC meter summary data
      description: >-
        Retrieves DC meter summary data for an overview, grouped by data
        attribute.
      tags:
        - Summary Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/2
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/EvChargerSummary':
    get:
      operationId: installations/idSite/widgets/EvChargerSummary
      summary: EV charger summary data
      description: >-
        Retrieves EV charger summary data for an overview, grouped by data
        attribute.
      tags:
        - Summary Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/2
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/MeteorologicalSensor':
    get:
      operationId: installations/idSite/widgets/MeteorologicalSensor
      summary: Meteorological summary data
      description: >-
        Retrieves meteorological summary data for an overview, grouped by data
        attribute.
      tags:
        - Summary Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/2
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/GlobalLinkSummary':
    get:
      operationId: installations/idSite/widgets/GlobalLinkSummary
      summary: GlobalLink summary data
      description: >-
        Retrieves GlobalLink summary data for an overview, grouped by data
        attribute.
      tags:
        - Summary Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/2
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/MotorSummary':
    get:
      operationId: installations/idSite/widgets/MotorSummary
      summary: Motor summary data
      description: 'Retrieves motor summary data for an overview, grouped by data attribute.'
      tags:
        - Summary Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/2
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/PVInverterStatus':
    get:
      operationId: installations/idSite/widgets/PVInverterStatus
      summary: PV inverter summary data
      description: >-
        Retrieves PV inverter summary data for an overview, grouped by data
        attribute.
      tags:
        - Summary Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/2
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/SolarChargerSummary':
    get:
      operationId: installations/idSite/widgets/SolarChargerSummary
      summary: Solar charger summary data
      description: >-
        Retrieves solar charger summary data for an overview, grouped by data
        attribute.
      tags:
        - Summary Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/2
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/Status':
    get:
      operationId: installations/idSite/widgets/Status
      summary: System overview summary data
      description: >-
        Retrieves system overview summary data for an overview, grouped by data
        attribute.
      tags:
        - Summary Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - name: idSite
          description: Installation id
          in: path
          required: true
          schema:
            type: string
        - name: instance
          description: 'Instance for which to retrieve data, defaults to 0.'
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved summary.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: True if the request was successful.
                    type: boolean
                  records:
                    description: Fetched summary.
                    type: object
                    properties:
                      data:
                        description: Data attributes.
                        type: object
                        properties:
                          secondsAgo:
                            description: How old this data is.
                            type: object
                            properties:
                              value:
                                description: Unix timestamp of this data.
                                type: string
                              valueFormattedWithUnit:
                                description: Timestamp of this data formatted.
                                type: string
                            required:
                              - value
                              - valueFormattedWithUnit
                          hasOldData:
                            description: >-
                              True if the retrieved data is old, based on the
                              key data attribute.
                            type: boolean
                        required:
                          - hasOldData
                          - secondsAgo
                        additionalProperties:
                          description: Summary for data attribute with this key.
                          type: object
                          properties:
                            code:
                              description: Data attribute code.
                              type: string
                            dataAttributeName:
                              description: Data attribute name.
                              type: string
                            dataType:
                              description: Data attribute data type.
                              type: string
                              enum:
                                - float
                                - enum
                                - string
                            dbusPath:
                              description: Data attribute DBus path.
                              type: string
                            dbusServiceType:
                              description: Data attribute DBus service type.
                              type: string
                            formatValueOnly:
                              description: Data attribute string format without unit.
                              type: string
                            formatWithUnit:
                              description: Data attribute string format with unit.
                              type: string
                            formattedValue:
                              description: Data attribute formatted value with unit.
                              type: string
                            hasOldData:
                              description: >-
                                True if the retrieved data for this data
                                attribute is old.
                              type: boolean
                            idDataAttribute:
                              description: Data attribute id.
                              type: string
                            instance:
                              description: >-
                                Installation instance this data attribute
                                belongs to.
                              type: integer
                            isKeyDataAttribute:
                              description: '1 if this is the key data attribute, else 0.'
                              type: string
                            isValid:
                              description: '1 if this data is valid, else 0.'
                              type: string
                            nameEnum:
                              description: 'Data attribute enum name, if applicable.'
                              type:
                                - 'null'
                                - string
                            rawValue:
                              description: >-
                                Data attribute raw value, regardless of data
                                type.
                              type: string
                            secondsAgo:
                              description: Data attribute seconds since last received data.
                              type: string
                            secondsToNextLog:
                              description: Data attribute expected data logging interval.
                              type: string
                            value:
                              description: 'Data attribute value, regardless of data type.'
                              type: string
                            valueEnum:
                              description: 'Data attribute enum value, if applicable.'
                              type:
                                - 'null'
                                - string
                            valueFloat:
                              description: 'Data attribute float value, if applicable.'
                              type:
                                - 'null'
                                - string
                            valueFormattedValueOnly:
                              description: Data attribute formatted value without unit.
                              type: string
                            valueFormattedWithUnit:
                              description: Data attribute formatted value with unit.
                              type: string
                            valueString:
                              description: 'Data attribute string value, if applicable.'
                              type:
                                - 'null'
                                - string
                            dataAttributeEnumValues:
                              description: 'Enum name and value pairs, if applicable.'
                              type: array
                              items:
                                description: Enum name and value pair.
                                type: object
                                properties:
                                  nameEnum:
                                    description: Enum name.
                                    type: string
                                  valueEnum:
                                    description: Enum value.
                                    type: integer
                                required:
                                  - nameEnum
                                  - valueEnum
                          required:
                            - code
                            - dataAttributeName
                            - dataType
                            - dbusPath
                            - dbusServiceType
                            - formatValueOnly
                            - formatWithUnit
                            - formattedValue
                            - hasOldData
                            - idDataAttribute
                            - instance
                            - isKeyDataAttribute
                            - isValid
                            - nameEnum
                            - rawValue
                            - secondsAgo
                            - secondsToNextLog
                            - value
                            - valueEnum
                            - valueFloat
                            - valueFormattedWithUnit
                            - valueString
                      meta:
                        description: Meta data per data attribute.
                        type: object
                        additionalProperties:
                          description: Meta data for data attribute with this key.
                          type: object
                          properties:
                            code:
                              description: Data attribute code.
                              type: string
                            description:
                              description: Data attribute description.
                              type: string
                            formatWithValueOnly:
                              description: Data attribute format with only the value.
                              type: string
                            formatWithUnit:
                              description: Data attribute format with both value and unit.
                              type: string
                          required:
                            - code
                            - description
                            - formatValueOnly
                            - formatWithUnit
                      attributeOrder:
                        description: Sorting order of data attributes.
                        type: array
                        items:
                          description: Data attribute id.
                          type: integer
                    required:
                      - data
                      - meta
                      - attributeOrder
                required:
                  - success
                  - records
        4xx:
          description: Request unsuccessful.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1auth~1login/post/responses/401/content/application~1json/schema
              examples:
                error:
                  summary: One or more errors occurred.
                  value:
                    success: false
                    errors: Error message
                    error_code: Error code
  '/installations/{idSite}/widgets/TankSummary':
    get:
      operationId: installations/idSite/widgets/TankSummary
      summary: Tank summary data
      description: 'Retrieves tank summary data for an overview, grouped by data attribute.'
      tags:
        - Summary Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/2
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  '/installations/{idSite}/widgets/TempSummaryAndGraph':
    get:
      operationId: installations/idSite/widgets/TempSummaryAndGraph
      summary: Temperature summary data
      description: >-
        Retrieves temperature summary data for an overview, grouped by data
        attribute.
      tags:
        - Summary Widgets
      parameters:
        - $ref: '#/paths/~1users~1me/get/parameters/0'
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/1
        - $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/parameters/2
      responses:
        '200':
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/200
        4xx:
          $ref: >-
            #/paths/~1installations~1%7BidSite%7D~1widgets~1Status/get/responses/4xx
  /admin/devices:
    $ref: ../Commands/Admin/docs/DevicesCommand.yaml
  /admin/installation-data-attributes-count:
    $ref: ../Commands/Admin/docs/InstallationDataAttributesCountCommand.yaml
  /admin/search-download:
    $ref: ../Commands/Admin/docs/InstallationSearchDownloadCommand.yaml
